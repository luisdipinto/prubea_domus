

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon Jun 04 18:01:13 2018

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    35  0000                     
    36                           	psect	idataCOMRAM
    37  001308                     __pidataCOMRAM:
    38                           	opt stack 0
    39                           
    40                           ;initializer for _o_tec
    41  001308  01                 	db	1
    42  0000                     _ANSEL	set	3966
    43  0000                     _INTCONbits	set	4082
    44  0000                     _LATAbits	set	3977
    45  0000                     _LATBbits	set	3978
    46  0000                     _LATCbits	set	3979
    47  0000                     _LATDbits	set	3980
    48  0000                     _OSCCON	set	4051
    49  0000                     _PIE1bits	set	3997
    50  0000                     _PIR1bits	set	3998
    51  0000                     _PORTA	set	3968
    52  0000                     _PORTAbits	set	3968
    53  0000                     _PORTB	set	3969
    54  0000                     _PORTC	set	3970
    55  0000                     _PORTD	set	3971
    56  0000                     _PORTDbits	set	3971
    57  0000                     _PORTE	set	3972
    58  0000                     _RCREG	set	4014
    59  0000                     _T0CON	set	4053
    60  0000                     _T0CONbits	set	4053
    61  0000                     _T1CON	set	4045
    62  0000                     _T1CONbits	set	4045
    63  0000                     _TMR0H	set	4055
    64  0000                     _TMR0L	set	4054
    65  0000                     _TMR1H	set	4047
    66  0000                     _TMR1L	set	4046
    67  0000                     _TRISA	set	3986
    68  0000                     _TRISB	set	3987
    69  0000                     _TRISBbits	set	3987
    70  0000                     _TRISC	set	3988
    71  0000                     _TRISD	set	3989
    72  0000                     _TRISE	set	3990
    73  0000                     _TXREG	set	4013
    74  0000                     _GIE	set	32663
    75  0000                     _PEIE	set	32662
    76  0000                     _RCIE	set	31981
    77  0000                     _RCIF	set	31989
    78  0000                     _TMR0IE	set	32661
    79  0000                     _TMR1IE	set	31976
    80  0000                     _TMR1IF	set	31984
    81  0000                     _TRMT	set	32097
    82                           
    83                           ; #config settings
    84  0000                     
    85                           	psect	cinit
    86  00122C                     __pcinit:
    87                           	opt stack 0
    88  00122C                     start_initialization:
    89                           	opt stack 0
    90  00122C                     __initialization:
    91                           	opt stack 0
    92                           
    93                           ; Clear objects allocated to BANK0 (104 bytes)
    94  00122C  EE00  F060         	lfsr	0,__pbssBANK0
    95  001230  0E68               	movlw	104
    96  001232                     clear_0:
    97  001232  6AEE               	clrf	postinc0,c
    98  001234  06E8               	decf	wreg,f,c
    99  001236  E1FD               	bnz	clear_0
   100                           
   101                           ; Clear objects allocated to COMRAM (61 bytes)
   102  001238  EE00  F001         	lfsr	0,__pbssCOMRAM
   103  00123C  0E3D               	movlw	61
   104  00123E                     clear_1:
   105  00123E  6AEE               	clrf	postinc0,c
   106  001240  06E8               	decf	wreg,f,c
   107  001242  E1FD               	bnz	clear_1
   108                           
   109                           ; Initialize objects allocated to COMRAM (1 bytes)
   110                           ; load TBLPTR registers with __pidataCOMRAM
   111  001244  0E08               	movlw	low __pidataCOMRAM
   112  001246  6EF6               	movwf	tblptrl,c
   113  001248  0E13               	movlw	high __pidataCOMRAM
   114  00124A  6EF7               	movwf	tblptrh,c
   115  00124C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   116  00124E  6EF8               	movwf	tblptru,c
   117  001250  0009               	tblrd		*+	;fetch initializer
   118  001252  CFF5 F050          	movff	tablat,__pdataCOMRAM
   119  001256                     end_of_initialization:
   120                           	opt stack 0
   121  001256                     __end_of__initialization:
   122                           	opt stack 0
   123  001256  0E00               	movlw	low (__Lmediumconst shr (0+16))
   124  001258  6EF8               	movwf	tblptru,c
   125  00125A  0100               	movlb	0
   126  00125C  EFFD  F001         	goto	_main	;jump to C main() function
   127                           tblptru	equ	0xFF8
   128                           tblptrh	equ	0xFF7
   129                           tblptrl	equ	0xFF6
   130                           tablat	equ	0xFF5
   131                           postinc0	equ	0xFEE
   132                           wreg	equ	0xFE8
   133                           
   134                           	psect	bssCOMRAM
   135  000001                     __pbssCOMRAM:
   136                           	opt stack 0
   137  000001                     _Disp_Var_1:
   138                           	opt stack 0
   139  000001                     	ds	2
   140  000003                     _msJ:
   141                           	opt stack 0
   142  000003                     	ds	2
   143  000005                     _msJL:
   144                           	opt stack 0
   145  000005                     	ds	2
   146  000007                     _Disp_C:
   147                           	opt stack 0
   148  000007                     	ds	1
   149  000008                     _Disp_D:
   150                           	opt stack 0
   151  000008                     	ds	1
   152  000009                     _Disp_Leds:
   153                           	opt stack 0
   154  000009                     	ds	1
   155  00000A                     _Disp_M:
   156                           	opt stack 0
   157  00000A                     	ds	1
   158  00000B                     _Disp_Modo:
   159                           	opt stack 0
   160  00000B                     	ds	1
   161  00000C                     _Disp_ModoL:
   162                           	opt stack 0
   163  00000C                     	ds	1
   164  00000D                     _Disp_U:
   165                           	opt stack 0
   166  00000D                     	ds	1
   167  00000E                     _Disp_Var:
   168                           	opt stack 0
   169  00000E                     	ds	1
   170  00000F                     _Disp_Var_2H:
   171                           	opt stack 0
   172  00000F                     	ds	1
   173  000010                     _Disp_Var_2L:
   174                           	opt stack 0
   175  000010                     	ds	1
   176  000011                     _Disp_Var_4C:
   177                           	opt stack 0
   178  000011                     	ds	1
   179  000012                     _Disp_Var_4D:
   180                           	opt stack 0
   181  000012                     	ds	1
   182  000013                     _Disp_Var_4M:
   183                           	opt stack 0
   184  000013                     	ds	1
   185  000014                     _Disp_Var_4U:
   186                           	opt stack 0
   187  000014                     	ds	1
   188  000015                     _FBA:
   189                           	opt stack 0
   190  000015                     	ds	1
   191  000016                     _FCC:
   192                           	opt stack 0
   193  000016                     	ds	1
   194  000017                     _FRT:
   195                           	opt stack 0
   196  000017                     	ds	1
   197  000018                     _FTT:
   198                           	opt stack 0
   199  000018                     	ds	1
   200  000019                     _FTimeToCheck:
   201                           	opt stack 0
   202  000019                     	ds	1
   203  00001A                     _FTimeToShift:
   204                           	opt stack 0
   205  00001A                     	ds	1
   206  00001B                     _F_100ms:
   207                           	opt stack 0
   208  00001B                     	ds	1
   209  00001C                     _F_10ms:
   210                           	opt stack 0
   211  00001C                     	ds	1
   212  00001D                     _F_1h:
   213                           	opt stack 0
   214  00001D                     	ds	1
   215  00001E                     _F_1m:
   216                           	opt stack 0
   217  00001E                     	ds	1
   218  00001F                     _F_1ms:
   219                           	opt stack 0
   220  00001F                     	ds	1
   221  000020                     _F_1s:
   222                           	opt stack 0
   223  000020                     	ds	1
   224  000021                     _F_Conversion_Continua:
   225                           	opt stack 0
   226  000021                     	ds	1
   227  000022                     _Led_RB0:
   228                           	opt stack 0
   229  000022                     	ds	1
   230  000023                     _Led_RB1:
   231                           	opt stack 0
   232  000023                     	ds	1
   233  000024                     _Led_RB2:
   234                           	opt stack 0
   235  000024                     	ds	1
   236  000025                     _Led_RB3:
   237                           	opt stack 0
   238  000025                     	ds	1
   239  000026                     _Led_RB4:
   240                           	opt stack 0
   241  000026                     	ds	1
   242  000027                     _Led_RB5:
   243                           	opt stack 0
   244  000027                     	ds	1
   245  000028                     _Led_RB6:
   246                           	opt stack 0
   247  000028                     	ds	1
   248  000029                     _Led_RB7:
   249                           	opt stack 0
   250  000029                     	ds	1
   251  00002A                     _ModoJuego:
   252                           	opt stack 0
   253  00002A                     	ds	1
   254  00002B                     _NumeroJuego:
   255                           	opt stack 0
   256  00002B                     	ds	1
   257  00002C                     _NumeroJuegoBk:
   258                           	opt stack 0
   259  00002C                     	ds	1
   260  00002D                     _OrdenRx:
   261                           	opt stack 0
   262  00002D                     	ds	1
   263  00002E                     _PuntajeJuego:
   264                           	opt stack 0
   265  00002E                     	ds	1
   266  00002F                     _ShiftOrder:
   267                           	opt stack 0
   268  00002F                     	ds	1
   269  000030                     _Tecla:
   270                           	opt stack 0
   271  000030                     	ds	1
   272  000031                     _TimeToTeclado:
   273                           	opt stack 0
   274  000031                     	ds	1
   275  000032                     _a:
   276                           	opt stack 0
   277  000032                     	ds	1
   278  000033                     _i:
   279                           	opt stack 0
   280  000033                     	ds	1
   281  000034                     _o_mux:
   282                           	opt stack 0
   283  000034                     	ds	1
   284  000035                     _t_100ms:
   285                           	opt stack 0
   286  000035                     	ds	1
   287  000036                     _t_10ms:
   288                           	opt stack 0
   289  000036                     	ds	1
   290  000037                     _t_1h:
   291                           	opt stack 0
   292  000037                     	ds	1
   293  000038                     _t_1m:
   294                           	opt stack 0
   295  000038                     	ds	1
   296  000039                     _t_1ms:
   297                           	opt stack 0
   298  000039                     	ds	1
   299  00003A                     _t_1s:
   300                           	opt stack 0
   301  00003A                     	ds	1
   302  00003B                     _t_ADC:
   303                           	opt stack 0
   304  00003B                     	ds	1
   305  00003C                     _t_mux:
   306                           	opt stack 0
   307  00003C                     	ds	1
   308  00003D                     _t_tec:
   309                           	opt stack 0
   310  00003D                     	ds	1
   311                           tblptru	equ	0xFF8
   312                           tblptrh	equ	0xFF7
   313                           tblptrl	equ	0xFF6
   314                           tablat	equ	0xFF5
   315                           postinc0	equ	0xFEE
   316                           wreg	equ	0xFE8
   317                           
   318                           	psect	dataCOMRAM
   319  000050                     __pdataCOMRAM:
   320                           	opt stack 0
   321  000050                     _o_tec:
   322                           	opt stack 0
   323  000050                     	ds	1
   324                           tblptru	equ	0xFF8
   325                           tblptrh	equ	0xFF7
   326                           tblptrl	equ	0xFF6
   327                           tablat	equ	0xFF5
   328                           postinc0	equ	0xFEE
   329                           wreg	equ	0xFE8
   330                           
   331                           	psect	bssBANK0
   332  000060                     __pbssBANK0:
   333                           	opt stack 0
   334  000060                     _MemoriaJ:
   335                           	opt stack 0
   336  000060                     	ds	100
   337  0000C4                     _b:
   338                           	opt stack 0
   339  0000C4                     	ds	2
   340  0000C6                     _cont:
   341                           	opt stack 0
   342  0000C6                     	ds	2
   343                           tblptru	equ	0xFF8
   344                           tblptrh	equ	0xFF7
   345                           tblptrl	equ	0xFF6
   346                           tablat	equ	0xFF5
   347                           postinc0	equ	0xFEE
   348                           wreg	equ	0xFE8
   349                           
   350                           	psect	cstackBANK0
   351  0000C8                     __pcstackBANK0:
   352                           	opt stack 0
   353  0000C8                     ??_Tabla0:
   354  0000C8                     ?___awdiv:
   355                           	opt stack 0
   356  0000C8                     ?___awmod:
   357                           	opt stack 0
   358  0000C8                     ?___lwdiv:
   359                           	opt stack 0
   360  0000C8                     ?___lwmod:
   361                           	opt stack 0
   362  0000C8                     Tabla@numero:
   363                           	opt stack 0
   364  0000C8                     OpenTimer0@config:
   365                           	opt stack 0
   366  0000C8                     OpenTimer1@config:
   367                           	opt stack 0
   368  0000C8                     Retardo@ms:
   369                           	opt stack 0
   370  0000C8                     WriteTimer1@timer1:
   371                           	opt stack 0
   372  0000C8                     ___awdiv@dividend:
   373                           	opt stack 0
   374  0000C8                     ___awmod@dividend:
   375                           	opt stack 0
   376  0000C8                     ___lwdiv@dividend:
   377                           	opt stack 0
   378  0000C8                     ___lwmod@dividend:
   379                           	opt stack 0
   380                           
   381                           ; 2 bytes @ 0x0
   382  0000C8                     	ds	1
   383  0000C9                     
   384                           ; 0 bytes @ 0x1
   385  0000C9                     	ds	1
   386  0000CA                     ??_Retardo:
   387  0000CA                     WriteTimer1@timer:
   388                           	opt stack 0
   389  0000CA                     ___awdiv@divisor:
   390                           	opt stack 0
   391  0000CA                     ___awmod@divisor:
   392                           	opt stack 0
   393  0000CA                     ___lwdiv@divisor:
   394                           	opt stack 0
   395  0000CA                     ___lwmod@divisor:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0x2
   399  0000CA                     	ds	1
   400  0000CB                     
   401                           ; 0 bytes @ 0x3
   402  0000CB                     	ds	1
   403  0000CC                     ___awdiv@counter:
   404                           	opt stack 0
   405  0000CC                     ___awmod@counter:
   406                           	opt stack 0
   407  0000CC                     ___lwdiv@counter:
   408                           	opt stack 0
   409  0000CC                     ___lwmod@counter:
   410                           	opt stack 0
   411                           
   412                           ; 1 bytes @ 0x4
   413  0000CC                     	ds	1
   414  0000CD                     ___awdiv@sign:
   415                           	opt stack 0
   416  0000CD                     ___awmod@sign:
   417                           	opt stack 0
   418  0000CD                     ___lwdiv@quotient:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x5
   422  0000CD                     	ds	1
   423  0000CE                     ??_Desplazar:
   424  0000CE                     ___awdiv@quotient:
   425                           	opt stack 0
   426                           
   427                           ; 2 bytes @ 0x6
   428  0000CE                     	ds	2
   429  0000D0                     ??_Armar:
   430                           
   431                           ; 0 bytes @ 0x8
   432  0000D0                     	ds	3
   433  0000D3                     Armar@Aux:
   434                           	opt stack 0
   435                           
   436                           ; 2 bytes @ 0xB
   437  0000D3                     	ds	2
   438  0000D5                     ??_main:
   439                           
   440                           ; 0 bytes @ 0xD
   441  0000D5                     	ds	1
   442                           tblptru	equ	0xFF8
   443                           tblptrh	equ	0xFF7
   444                           tblptrl	equ	0xFF6
   445                           tablat	equ	0xFF5
   446                           postinc0	equ	0xFEE
   447                           wreg	equ	0xFE8
   448                           
   449                           	psect	cstackCOMRAM
   450  00003E                     __pcstackCOMRAM:
   451                           	opt stack 0
   452  00003E                     i2WriteTimer1@timer1:
   453                           	opt stack 0
   454                           
   455                           ; 2 bytes @ 0x0
   456  00003E                     	ds	2
   457  000040                     i2WriteTimer1@timer:
   458                           	opt stack 0
   459                           
   460                           ; 2 bytes @ 0x2
   461  000040                     	ds	2
   462  000042                     ??_Interrupciones:
   463                           
   464                           ; 0 bytes @ 0x4
   465  000042                     	ds	14
   466                           tblptru	equ	0xFF8
   467                           tblptrh	equ	0xFF7
   468                           tblptrl	equ	0xFF6
   469                           tablat	equ	0xFF5
   470                           postinc0	equ	0xFEE
   471                           wreg	equ	0xFE8
   472                           
   473 ;;
   474 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   475 ;;
   476 ;; *************** function _main *****************
   477 ;; Defined at:
   478 ;;		line 152 in file "main.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;		None
   481 ;; Auto vars:     Size  Location     Type
   482 ;;		None
   483 ;; Return value:  Size  Location     Type
   484 ;;		None               void
   485 ;; Registers used:
   486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   487 ;; Tracked objects:
   488 ;;		On entry : 0/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   494 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   495 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   496 ;;Total ram usage:        1 bytes
   497 ;; Hardware stack levels required when called:    5
   498 ;; This function calls:
   499 ;;		_Desplazar
   500 ;;		_GenerarMJ
   501 ;;		_Mostrar
   502 ;;		_MostrarJ
   503 ;;		_OpenTimer0
   504 ;;		_OpenTimer1
   505 ;;		_Teclado
   506 ;;		_TecladoJ
   507 ;;		_VerificarMJ
   508 ;;		_WriteTimer1
   509 ;; This function is called by:
   510 ;;		Startup code after reset
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           	psect	text0
   515  0003FA                     __ptext0:
   516                           	opt stack 0
   517  0003FA                     _main:
   518                           	opt stack 26
   519                           
   520                           ;main.c: 156: OSCCON = 0xF0;
   521                           
   522                           ;incstack = 0
   523  0003FA  0EF0               	movlw	240
   524  0003FC  6ED3               	movwf	4051,c	;volatile
   525                           
   526                           ;main.c: 157: TRISA = 0B00111111;
   527  0003FE  0E3F               	movlw	63
   528  000400  6E92               	movwf	3986,c	;volatile
   529                           
   530                           ;main.c: 158: TRISB = 0B00000000;
   531  000402  0E00               	movlw	0
   532  000404  6E93               	movwf	3987,c	;volatile
   533                           
   534                           ;main.c: 159: TRISC = 0B00000000;
   535  000406  0E00               	movlw	0
   536  000408  6E94               	movwf	3988,c	;volatile
   537                           
   538                           ;main.c: 160: TRISD = 0B00001111;
   539  00040A  0E0F               	movlw	15
   540  00040C  6E95               	movwf	3989,c	;volatile
   541                           
   542                           ;main.c: 161: TRISE = 0B00000000;
   543  00040E  0E00               	movlw	0
   544  000410  6E96               	movwf	3990,c	;volatile
   545                           
   546                           ;main.c: 162: GIE=1;
   547  000412  8EF2               	bsf	intcon,7,c	;volatile
   548                           
   549                           ;main.c: 163: PEIE=1;
   550  000414  8CF2               	bsf	intcon,6,c	;volatile
   551                           
   552                           ;main.c: 164: PORTA = 0;
   553  000416  0E00               	movlw	0
   554  000418  6E80               	movwf	3968,c	;volatile
   555                           
   556                           ;main.c: 165: PORTB = 0;
   557  00041A  0E00               	movlw	0
   558  00041C  6E81               	movwf	3969,c	;volatile
   559                           
   560                           ;main.c: 166: PORTC = 0;
   561  00041E  0E00               	movlw	0
   562  000420  6E82               	movwf	3970,c	;volatile
   563                           
   564                           ;main.c: 167: PORTD = 0;
   565  000422  0E00               	movlw	0
   566  000424  6E83               	movwf	3971,c	;volatile
   567                           
   568                           ;main.c: 168: PORTE = 0;
   569  000426  0E00               	movlw	0
   570  000428  6E84               	movwf	3972,c	;volatile
   571                           
   572                           ;main.c: 170: LATCbits.LATC5 = 1;
   573  00042A  8A8B               	bsf	3979,5,c	;volatile
   574                           
   575                           ;main.c: 171: LATCbits.LATC6 = 1;
   576  00042C  8C8B               	bsf	3979,6,c	;volatile
   577                           
   578                           ;main.c: 172: LATCbits.LATC7 = 1;
   579  00042E  8E8B               	bsf	3979,7,c	;volatile
   580                           
   581                           ;main.c: 174: WriteTimer1(0xF05F);
   582  000430  0EF0               	movlw	240
   583  000432  0100               	movlb	0	; () banked
   584  000434  6FC9               	movwf	(WriteTimer1@timer1+1)& (0+255),b
   585  000436  0E5F               	movlw	95
   586  000438  6FC8               	movwf	WriteTimer1@timer1& (0+255),b
   587  00043A  EC72  F009         	call	_WriteTimer1	;wreg free
   588                           
   589                           ;main.c: 175: OpenTimer1(0b11111111 & 0b11001111 & 0b11110111 & 0b11111101);
   590  00043E  0EC5               	movlw	197
   591  000440  EC30  F009         	call	_OpenTimer1
   592                           
   593                           ;main.c: 179: Disp_Var = 0x00;
   594  000444  0E00               	movlw	0
   595  000446  6E0E               	movwf	_Disp_Var,c
   596                           
   597                           ;main.c: 180: Disp_Modo = 0x01;
   598  000448  0E01               	movlw	1
   599  00044A  6E0B               	movwf	_Disp_Modo,c
   600                           
   601                           ;main.c: 181: Disp_ModoL = 0x01;
   602  00044C  0E01               	movlw	1
   603  00044E  6E0C               	movwf	_Disp_ModoL,c
   604                           
   605                           ;main.c: 183: OpenTimer0(0b11111111 & 0b11011111 & 0b11111111);
   606  000450  0EDF               	movlw	223
   607  000452  EC5F  F009         	call	_OpenTimer0
   608                           
   609                           ;main.c: 184: TMR0IE = 0;
   610  000456  9AF2               	bcf	intcon,5,c	;volatile
   611                           
   612                           ;main.c: 188: ANSEL=0X00;
   613  000458  0E00               	movlw	0
   614  00045A  6E7E               	movwf	3966,c	;volatile
   615                           
   616                           ;main.c: 198: INTCONbits.PEIE = 1;
   617  00045C  8CF2               	bsf	intcon,6,c	;volatile
   618                           
   619                           ;main.c: 200: ModoJuego = 0;
   620  00045E  0E00               	movlw	0
   621  000460  6E2A               	movwf	_ModoJuego,c
   622                           
   623                           ;main.c: 206: LATCbits.LATC0 = 1;
   624  000462  808B               	bsf	3979,0,c	;volatile
   625                           
   626                           ;main.c: 207: LATCbits.LATC5 = 0;
   627  000464  9A8B               	bcf	3979,5,c	;volatile
   628                           
   629                           ;main.c: 208: _delay((unsigned long)((40)*(16000000/4000.0)));
   630  000466  0ED0               	movlw	208
   631  000468  0100               	movlb	0	; () banked
   632  00046A  6FD5               	movwf	??_main& (0+255),b
   633  00046C  0ECA               	movlw	202
   634  00046E                     u3847:
   635  00046E  2EE8               	decfsz	wreg,f,c
   636  000470  D7FE               	goto	u3847
   637  000472  2FD5               	decfsz	??_main& (0+255),f,b
   638  000474  D7FC               	goto	u3847
   639                           
   640                           ;main.c: 209: LATCbits.LATC0 = 0;
   641  000476  908B               	bcf	3979,0,c	;volatile
   642                           
   643                           ;main.c: 210: LATCbits.LATC5 = 1;
   644  000478  8A8B               	bsf	3979,5,c	;volatile
   645                           
   646                           ;main.c: 212: _delay((unsigned long)((40)*(16000000/4000.0)));
   647  00047A  0ED0               	movlw	208
   648  00047C  0100               	movlb	0	; () banked
   649  00047E  6FD5               	movwf	??_main& (0+255),b
   650  000480  0ECA               	movlw	202
   651  000482                     u3857:
   652  000482  2EE8               	decfsz	wreg,f,c
   653  000484  D7FE               	goto	u3857
   654  000486  2FD5               	decfsz	??_main& (0+255),f,b
   655  000488  D7FC               	goto	u3857
   656                           
   657                           ;main.c: 213: _delay((unsigned long)((40)*(16000000/4000.0)));
   658  00048A  0ED0               	movlw	208
   659  00048C  0100               	movlb	0	; () banked
   660  00048E  6FD5               	movwf	??_main& (0+255),b
   661  000490  0ECA               	movlw	202
   662  000492                     u3867:
   663  000492  2EE8               	decfsz	wreg,f,c
   664  000494  D7FE               	goto	u3867
   665  000496  2FD5               	decfsz	??_main& (0+255),f,b
   666  000498  D7FC               	goto	u3867
   667                           
   668                           ;main.c: 214: _delay((unsigned long)((40)*(16000000/4000.0)));
   669  00049A  0ED0               	movlw	208
   670  00049C  0100               	movlb	0	; () banked
   671  00049E  6FD5               	movwf	??_main& (0+255),b
   672  0004A0  0ECA               	movlw	202
   673  0004A2                     u3877:
   674  0004A2  2EE8               	decfsz	wreg,f,c
   675  0004A4  D7FE               	goto	u3877
   676  0004A6  2FD5               	decfsz	??_main& (0+255),f,b
   677  0004A8  D7FC               	goto	u3877
   678                           
   679                           ;main.c: 216: LATCbits.LATC0 = 1;
   680  0004AA  808B               	bsf	3979,0,c	;volatile
   681                           
   682                           ;main.c: 217: LATCbits.LATC6 = 0;
   683  0004AC  9C8B               	bcf	3979,6,c	;volatile
   684                           
   685                           ;main.c: 218: _delay((unsigned long)((40)*(16000000/4000.0)));
   686  0004AE  0ED0               	movlw	208
   687  0004B0  0100               	movlb	0	; () banked
   688  0004B2  6FD5               	movwf	??_main& (0+255),b
   689  0004B4  0ECA               	movlw	202
   690  0004B6                     u3887:
   691  0004B6  2EE8               	decfsz	wreg,f,c
   692  0004B8  D7FE               	goto	u3887
   693  0004BA  2FD5               	decfsz	??_main& (0+255),f,b
   694  0004BC  D7FC               	goto	u3887
   695                           
   696                           ;main.c: 219: _delay((unsigned long)((40)*(16000000/4000.0)));
   697  0004BE  0ED0               	movlw	208
   698  0004C0  0100               	movlb	0	; () banked
   699  0004C2  6FD5               	movwf	??_main& (0+255),b
   700  0004C4  0ECA               	movlw	202
   701  0004C6                     u3897:
   702  0004C6  2EE8               	decfsz	wreg,f,c
   703  0004C8  D7FE               	goto	u3897
   704  0004CA  2FD5               	decfsz	??_main& (0+255),f,b
   705  0004CC  D7FC               	goto	u3897
   706                           
   707                           ;main.c: 220: LATCbits.LATC0 = 0;
   708  0004CE  908B               	bcf	3979,0,c	;volatile
   709                           
   710                           ;main.c: 221: LATCbits.LATC6 = 1;
   711  0004D0  8C8B               	bsf	3979,6,c	;volatile
   712                           
   713                           ;main.c: 223: _delay((unsigned long)((40)*(16000000/4000.0)));
   714  0004D2  0ED0               	movlw	208
   715  0004D4  0100               	movlb	0	; () banked
   716  0004D6  6FD5               	movwf	??_main& (0+255),b
   717  0004D8  0ECA               	movlw	202
   718  0004DA                     u3907:
   719  0004DA  2EE8               	decfsz	wreg,f,c
   720  0004DC  D7FE               	goto	u3907
   721  0004DE  2FD5               	decfsz	??_main& (0+255),f,b
   722  0004E0  D7FC               	goto	u3907
   723                           
   724                           ;main.c: 224: _delay((unsigned long)((40)*(16000000/4000.0)));
   725  0004E2  0ED0               	movlw	208
   726  0004E4  0100               	movlb	0	; () banked
   727  0004E6  6FD5               	movwf	??_main& (0+255),b
   728  0004E8  0ECA               	movlw	202
   729  0004EA                     u3917:
   730  0004EA  2EE8               	decfsz	wreg,f,c
   731  0004EC  D7FE               	goto	u3917
   732  0004EE  2FD5               	decfsz	??_main& (0+255),f,b
   733  0004F0  D7FC               	goto	u3917
   734                           
   735                           ;main.c: 225: _delay((unsigned long)((40)*(16000000/4000.0)));
   736  0004F2  0ED0               	movlw	208
   737  0004F4  0100               	movlb	0	; () banked
   738  0004F6  6FD5               	movwf	??_main& (0+255),b
   739  0004F8  0ECA               	movlw	202
   740  0004FA                     u3927:
   741  0004FA  2EE8               	decfsz	wreg,f,c
   742  0004FC  D7FE               	goto	u3927
   743  0004FE  2FD5               	decfsz	??_main& (0+255),f,b
   744  000500  D7FC               	goto	u3927
   745                           
   746                           ;main.c: 227: LATCbits.LATC0 = 1;
   747  000502  808B               	bsf	3979,0,c	;volatile
   748                           
   749                           ;main.c: 228: LATCbits.LATC7 = 0;
   750  000504  9E8B               	bcf	3979,7,c	;volatile
   751                           
   752                           ;main.c: 229: _delay((unsigned long)((40)*(16000000/4000.0)));
   753  000506  0ED0               	movlw	208
   754  000508  0100               	movlb	0	; () banked
   755  00050A  6FD5               	movwf	??_main& (0+255),b
   756  00050C  0ECA               	movlw	202
   757  00050E                     u3937:
   758  00050E  2EE8               	decfsz	wreg,f,c
   759  000510  D7FE               	goto	u3937
   760  000512  2FD5               	decfsz	??_main& (0+255),f,b
   761  000514  D7FC               	goto	u3937
   762                           
   763                           ;main.c: 230: _delay((unsigned long)((40)*(16000000/4000.0)));
   764  000516  0ED0               	movlw	208
   765  000518  0100               	movlb	0	; () banked
   766  00051A  6FD5               	movwf	??_main& (0+255),b
   767  00051C  0ECA               	movlw	202
   768  00051E                     u3947:
   769  00051E  2EE8               	decfsz	wreg,f,c
   770  000520  D7FE               	goto	u3947
   771  000522  2FD5               	decfsz	??_main& (0+255),f,b
   772  000524  D7FC               	goto	u3947
   773                           
   774                           ;main.c: 231: _delay((unsigned long)((40)*(16000000/4000.0)));
   775  000526  0ED0               	movlw	208
   776  000528  0100               	movlb	0	; () banked
   777  00052A  6FD5               	movwf	??_main& (0+255),b
   778  00052C  0ECA               	movlw	202
   779  00052E                     u3957:
   780  00052E  2EE8               	decfsz	wreg,f,c
   781  000530  D7FE               	goto	u3957
   782  000532  2FD5               	decfsz	??_main& (0+255),f,b
   783  000534  D7FC               	goto	u3957
   784                           
   785                           ;main.c: 232: _delay((unsigned long)((40)*(16000000/4000.0)));
   786  000536  0ED0               	movlw	208
   787  000538  0100               	movlb	0	; () banked
   788  00053A  6FD5               	movwf	??_main& (0+255),b
   789  00053C  0ECA               	movlw	202
   790  00053E                     u3967:
   791  00053E  2EE8               	decfsz	wreg,f,c
   792  000540  D7FE               	goto	u3967
   793  000542  2FD5               	decfsz	??_main& (0+255),f,b
   794  000544  D7FC               	goto	u3967
   795                           
   796                           ;main.c: 233: LATCbits.LATC0 = 0;
   797  000546  908B               	bcf	3979,0,c	;volatile
   798                           
   799                           ;main.c: 234: LATCbits.LATC7 = 1;
   800  000548  8E8B               	bsf	3979,7,c	;volatile
   801                           
   802                           ;main.c: 238: {
   803                           ;main.c: 239: switch(ModoJuego)
   804                           
   805                           ;main.c: 237: while(1)
   806  00054A  D06D               	goto	l4043
   807  00054C                     l3993:
   808                           
   809                           ;main.c: 242: {
   810                           ;main.c: 243: Mostrar();
   811  00054C  EC5F  F005         	call	_Mostrar	;wreg free
   812                           
   813                           ;main.c: 244: Teclado();
   814  000550  EC1C  F004         	call	_Teclado	;wreg free
   815                           
   816                           ;main.c: 245: if (FBA == 1)
   817  000554  0415               	decf	_FBA,w,c
   818  000556  A4D8               	btfss	status,2,c
   819  000558  D038               	goto	l4019
   820                           
   821                           ;main.c: 246: {
   822                           ;main.c: 247: FBA = 0;
   823  00055A  0E00               	movlw	0
   824  00055C  6E15               	movwf	_FBA,c
   825                           
   826                           ;main.c: 248: if(Tecla == 0x0A)
   827  00055E  0E0A               	movlw	10
   828  000560  1830               	xorwf	_Tecla,w,c
   829  000562  A4D8               	btfss	status,2,c
   830  000564  D015               	goto	l4003
   831                           
   832                           ;main.c: 249: {
   833                           ;main.c: 250: ModoJuego = 1;
   834  000566  0E01               	movlw	1
   835  000568  6E2A               	movwf	_ModoJuego,c
   836                           
   837                           ;main.c: 251: Led_RB3 = 1;
   838  00056A  0E01               	movlw	1
   839  00056C  6E25               	movwf	_Led_RB3,c
   840                           
   841                           ;main.c: 252: Led_RB2 = 1;
   842  00056E  0E01               	movlw	1
   843  000570  6E24               	movwf	_Led_RB2,c
   844                           
   845                           ;main.c: 253: Led_RB1 = 1;
   846  000572  0E01               	movlw	1
   847  000574  6E23               	movwf	_Led_RB1,c
   848                           
   849                           ;main.c: 254: Led_RB0 = 1;
   850  000576  0E01               	movlw	1
   851  000578  6E22               	movwf	_Led_RB0,c
   852                           
   853                           ;main.c: 255: msJ = 0;
   854  00057A  0E00               	movlw	0
   855  00057C  6E04               	movwf	_msJ+1,c
   856  00057E  0E00               	movlw	0
   857  000580  6E03               	movwf	_msJ,c
   858                           
   859                           ;main.c: 256: FTimeToShift = 0;
   860  000582  0E00               	movlw	0
   861  000584  6E1A               	movwf	_FTimeToShift,c
   862                           
   863                           ;main.c: 257: msJL = 500;
   864  000586  0E01               	movlw	1
   865  000588  6E06               	movwf	_msJL+1,c
   866  00058A  0EF4               	movlw	244
   867  00058C  6E05               	movwf	_msJL,c
   868  00058E  D000               	goto	l4003
   869  000590                     l4003:
   870                           
   871                           ;main.c: 259: }
   872                           ;main.c: 260: if(Tecla == 0x0B)
   873  000590  0E0B               	movlw	11
   874  000592  1830               	xorwf	_Tecla,w,c
   875  000594  A4D8               	btfss	status,2,c
   876  000596  D019               	goto	l4019
   877                           
   878                           ;main.c: 261: {
   879                           ;main.c: 262: ModoJuego = 2;
   880  000598  0E02               	movlw	2
   881  00059A  6E2A               	movwf	_ModoJuego,c
   882                           
   883                           ;main.c: 263: for(i=0; i<100; i++)
   884  00059C  0E00               	movlw	0
   885  00059E  6E33               	movwf	_i,c
   886  0005A0  D00C               	goto	l4015
   887  0005A2  D00E               	goto	l363
   888  0005A4                     l4011:
   889                           
   890                           ;main.c: 264: {
   891                           ;main.c: 265: MemoriaJ[i] = 50;
   892  0005A4  5033               	movf	_i,w,c
   893  0005A6  0D01               	mullw	1
   894  0005A8  0E60               	movlw	low _MemoriaJ
   895  0005AA  24F3               	addwf	prodl,w,c
   896  0005AC  6ED9               	movwf	fsr2l,c
   897  0005AE  0E00               	movlw	high _MemoriaJ
   898  0005B0  20F4               	addwfc	prodh,w,c
   899  0005B2  6EDA               	movwf	fsr2h,c
   900  0005B4  0E32               	movlw	50
   901  0005B6  6EDF               	movwf	indf2,c
   902  0005B8  2A33               	incf	_i,f,c
   903  0005BA                     l4015:
   904  0005BA  0E63               	movlw	99
   905  0005BC  6433               	cpfsgt	_i,c
   906  0005BE  D7F2               	goto	l4011
   907  0005C0                     l363:
   908                           
   909                           ;main.c: 266: }
   910                           ;main.c: 267: LATCbits.LATC4 = 0;
   911  0005C0  988B               	bcf	3979,4,c	;volatile
   912                           
   913                           ;main.c: 268: LATAbits.LATA7 = 1;
   914  0005C2  8E89               	bsf	3977,7,c	;volatile
   915                           
   916                           ;main.c: 269: PORTE = 0b00000000;
   917  0005C4  0E00               	movlw	0
   918  0005C6  6E84               	movwf	3972,c	;volatile
   919  0005C8  D000               	goto	l4019
   920  0005CA                     l4019:
   921                           
   922                           ;main.c: 270: }
   923                           ;main.c: 272: }
   924                           ;main.c: 273: if(t_1m == 2)
   925  0005CA  0E02               	movlw	2
   926  0005CC  1838               	xorwf	_t_1m,w,c
   927  0005CE  A4D8               	btfss	status,2,c
   928  0005D0  D02A               	goto	l4043
   929  0005D2  00FF               	reset		;# 
   930                           
   931                           ;main.c: 276: }
   932                           ;main.c: 277: break;
   933  0005D4  D028               	goto	l4043
   934  0005D6                     l4023:
   935                           
   936                           ;main.c: 280: {
   937                           ;main.c: 281: Desplazar();
   938  0005D6  EC23  F003         	call	_Desplazar	;wreg free
   939                           
   940                           ;main.c: 282: MostrarJ();
   941  0005DA  EC7C  F006         	call	_MostrarJ	;wreg free
   942                           
   943                           ;main.c: 283: TecladoJ();
   944  0005DE  ECC0  F004         	call	_TecladoJ	;wreg free
   945                           
   946                           ;main.c: 284: break;
   947  0005E2  D021               	goto	l4043
   948  0005E4                     l4025:
   949                           
   950                           ;main.c: 287: {
   951                           ;main.c: 288: GenerarMJ();
   952  0005E4  ECFB  F005         	call	_GenerarMJ	;wreg free
   953                           
   954                           ;main.c: 289: VerificarMJ();
   955  0005E8  EC24  F008         	call	_VerificarMJ	;wreg free
   956                           
   957                           ;main.c: 290: break;
   958  0005EC  D01C               	goto	l4043
   959  0005EE                     l4027:
   960                           
   961                           ;main.c: 294: {
   962                           ;main.c: 295: Mostrar();
   963  0005EE  EC5F  F005         	call	_Mostrar	;wreg free
   964                           
   965                           ;main.c: 296: Teclado();
   966  0005F2  EC1C  F004         	call	_Teclado	;wreg free
   967                           
   968                           ;main.c: 297: if (FBA == 1)
   969  0005F6  0415               	decf	_FBA,w,c
   970  0005F8  A4D8               	btfss	status,2,c
   971  0005FA  D015               	goto	l4043
   972                           
   973                           ;main.c: 298: {
   974                           ;main.c: 299: FBA = 0;
   975  0005FC  0E00               	movlw	0
   976  0005FE  6E15               	movwf	_FBA,c
   977                           
   978                           ;main.c: 300: if(Tecla < 10)
   979  000600  0E0A               	movlw	10
   980  000602  6030               	cpfslt	_Tecla,c
   981  000604  D007               	goto	l4037
   982                           
   983                           ;main.c: 301: {
   984                           ;main.c: 302: TXREG = Tecla;
   985  000606  C030  FFAD         	movff	_Tecla,4013	;volatile
   986                           
   987                           ;main.c: 303: while(TRMT == 0);
   988  00060A  D000               	goto	l371
   989  00060C                     l371:
   990  00060C  B2AC               	btfsc	4012,1,c	;volatile
   991  00060E  D002               	goto	l4037
   992  000610  D7FD               	goto	l371
   993  000612  D000               	goto	l4037
   994  000614                     l4037:
   995                           
   996                           ;main.c: 304: }
   997                           ;main.c: 305: if(Tecla == 0x0C)
   998  000614  0E0C               	movlw	12
   999  000616  1830               	xorwf	_Tecla,w,c
  1000  000618  A4D8               	btfss	status,2,c
  1001  00061A  D005               	goto	l4043
  1002                           
  1003                           ;main.c: 306: {
  1004                           ;main.c: 307: Disp_Var_1 = 0;
  1005  00061C  0E00               	movlw	0
  1006  00061E  6E02               	movwf	_Disp_Var_1+1,c
  1007  000620  0E00               	movlw	0
  1008  000622  6E01               	movwf	_Disp_Var_1,c
  1009                           
  1010                           ;main.c: 311: }
  1011                           ;main.c: 312: }
  1012                           
  1013                           ;main.c: 308: }
  1014                           ;main.c: 309: }
  1015                           ;main.c: 310: break;
  1016  000624  D000               	goto	l4043
  1017  000626                     l4043:
  1018  000626  502A               	movf	_ModoJuego,w,c
  1019                           
  1020                           ; Switch size 1, requested type "space"
  1021                           ; Number of cases is 4, Range of values is 0 to 3
  1022                           ; switch strategies available:
  1023                           ; Name         Instructions Cycles
  1024                           ; simple_byte           13     7 (average)
  1025                           ;	Chosen strategy is simple_byte
  1026  000628  0A00               	xorlw	0	; case 0
  1027  00062A  B4D8               	btfsc	status,2,c
  1028  00062C  D78F               	goto	l3993
  1029  00062E  0A01               	xorlw	1	; case 1
  1030  000630  B4D8               	btfsc	status,2,c
  1031  000632  D7D1               	goto	l4023
  1032  000634  0A03               	xorlw	3	; case 2
  1033  000636  B4D8               	btfsc	status,2,c
  1034  000638  D7D5               	goto	l4025
  1035  00063A  0A01               	xorlw	1	; case 3
  1036  00063C  B4D8               	btfsc	status,2,c
  1037  00063E  D7D7               	goto	l4027
  1038  000640  D7F2               	goto	l4043
  1039  000642  EF95  F000         	goto	start
  1040  000646                     __end_of_main:
  1041                           	opt stack 0
  1042                           tblptru	equ	0xFF8
  1043                           tblptrh	equ	0xFF7
  1044                           tblptrl	equ	0xFF6
  1045                           tablat	equ	0xFF5
  1046                           prodh	equ	0xFF4
  1047                           prodl	equ	0xFF3
  1048                           intcon	equ	0xFF2
  1049                           postinc0	equ	0xFEE
  1050                           wreg	equ	0xFE8
  1051                           indf2	equ	0xFDF
  1052                           fsr2h	equ	0xFDA
  1053                           fsr2l	equ	0xFD9
  1054                           status	equ	0xFD8
  1055                           
  1056 ;; *************** function _WriteTimer1 *****************
  1057 ;; Defined at:
  1058 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1write.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;  timer1          2    0[BANK0 ] unsigned int 
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;  timer           2    2[BANK0 ] struct Timers
  1063 ;; Return value:  Size  Location     Type
  1064 ;;		None               void
  1065 ;; Registers used:
  1066 ;;		None
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1072 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1073 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1075 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1076 ;;Total ram usage:        4 bytes
  1077 ;; Hardware stack levels used:    1
  1078 ;; Hardware stack levels required when called:    2
  1079 ;; This function calls:
  1080 ;;		Nothing
  1081 ;; This function is called by:
  1082 ;;		_main
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086                           	psect	text1
  1087  0012E4                     __ptext1:
  1088                           	opt stack 0
  1089  0012E4                     _WriteTimer1:
  1090                           	opt stack 28
  1091                           
  1092                           ;incstack = 0
  1093  0012E4  C0C8  F0CA         	movff	WriteTimer1@timer1,WriteTimer1@timer
  1094  0012E8  C0C9  F0CB         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  1095  0012EC  C0CB  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  1096  0012F0  C0CA  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  1097  0012F4  0012               	return		;funcret
  1098  0012F6                     __end_of_WriteTimer1:
  1099                           	opt stack 0
  1100                           tblptru	equ	0xFF8
  1101                           tblptrh	equ	0xFF7
  1102                           tblptrl	equ	0xFF6
  1103                           tablat	equ	0xFF5
  1104                           prodh	equ	0xFF4
  1105                           prodl	equ	0xFF3
  1106                           intcon	equ	0xFF2
  1107                           postinc0	equ	0xFEE
  1108                           wreg	equ	0xFE8
  1109                           indf2	equ	0xFDF
  1110                           fsr2h	equ	0xFDA
  1111                           fsr2l	equ	0xFD9
  1112                           status	equ	0xFD8
  1113                           
  1114 ;; *************** function _VerificarMJ *****************
  1115 ;; Defined at:
  1116 ;;		line 354 in file "main.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;		None
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;		None
  1121 ;; Return value:  Size  Location     Type
  1122 ;;		None               void
  1123 ;; Registers used:
  1124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1132 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1133 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1134 ;;Total ram usage:        1 bytes
  1135 ;; Hardware stack levels used:    1
  1136 ;; Hardware stack levels required when called:    3
  1137 ;; This function calls:
  1138 ;;		_Retardo
  1139 ;;		_Teclado
  1140 ;; This function is called by:
  1141 ;;		_main
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           	psect	text2
  1146  001048                     __ptext2:
  1147                           	opt stack 0
  1148  001048                     _VerificarMJ:
  1149                           	opt stack 27
  1150                           
  1151                           ;main.c: 356: i = 0;
  1152                           
  1153                           ;incstack = 0
  1154  001048  0E00               	movlw	0
  1155  00104A  6E33               	movwf	_i,c
  1156                           
  1157                           ;main.c: 357: while(MemoriaJ[i] != 50)
  1158  00104C  D036               	goto	l3899
  1159                           
  1160                           ;main.c: 358: {
  1161                           ;main.c: 359: while(FBA == 0)
  1162  00104E  D003               	goto	l3869
  1163  001050                     l3867:
  1164                           
  1165                           ;main.c: 360: {
  1166                           ;main.c: 361: Teclado();
  1167  001050  EC1C  F004         	call	_Teclado	;wreg free
  1168  001054  D000               	goto	l3869
  1169  001056                     l3869:
  1170  001056  5015               	movf	_FBA,w,c
  1171  001058  B4D8               	btfsc	status,2,c
  1172  00105A  D7FA               	goto	l3867
  1173                           
  1174                           ;main.c: 362: }
  1175                           ;main.c: 363: FBA = 0;
  1176  00105C  0E00               	movlw	0
  1177  00105E  6E15               	movwf	_FBA,c
  1178                           
  1179                           ;main.c: 364: if(Tecla == MemoriaJ[i])
  1180  001060  5033               	movf	_i,w,c
  1181  001062  0D01               	mullw	1
  1182  001064  0E60               	movlw	low _MemoriaJ
  1183  001066  24F3               	addwf	prodl,w,c
  1184  001068  6ED9               	movwf	fsr2l,c
  1185  00106A  0E00               	movlw	high _MemoriaJ
  1186  00106C  20F4               	addwfc	prodh,w,c
  1187  00106E  6EDA               	movwf	fsr2h,c
  1188  001070  5030               	movf	_Tecla,w,c
  1189  001072  18DE               	xorwf	postinc2,w,c
  1190  001074  A4D8               	btfss	status,2,c
  1191  001076  D00B               	goto	l396
  1192                           
  1193                           ;main.c: 365: {
  1194                           ;main.c: 366: i++;
  1195  001078  2A33               	incf	_i,f,c
  1196                           
  1197                           ;main.c: 367: LATCbits.LATC6 = 0;
  1198  00107A  9C8B               	bcf	3979,6,c	;volatile
  1199                           
  1200                           ;main.c: 368: Retardo(300);
  1201  00107C  0E01               	movlw	1
  1202  00107E  0100               	movlb	0	; () banked
  1203  001080  6FC9               	movwf	(Retardo@ms+1)& (0+255),b
  1204  001082  0E2C               	movlw	44
  1205  001084  6FC8               	movwf	Retardo@ms& (0+255),b
  1206  001086  EC4A  F009         	call	_Retardo	;wreg free
  1207                           
  1208                           ;main.c: 369: LATCbits.LATC6 = 1;
  1209  00108A  8C8B               	bsf	3979,6,c	;volatile
  1210                           
  1211                           ;main.c: 370: }
  1212  00108C  D016               	goto	l3899
  1213  00108E                     l396:
  1214                           
  1215                           ;main.c: 371: else
  1216                           ;main.c: 372: {
  1217                           ;main.c: 373: LATCbits.LATC7 = 0;
  1218  00108E  9E8B               	bcf	3979,7,c	;volatile
  1219                           
  1220                           ;main.c: 374: LATCbits.LATC0 = 1;
  1221  001090  808B               	bsf	3979,0,c	;volatile
  1222                           
  1223                           ;main.c: 375: Retardo(1000);
  1224  001092  0E03               	movlw	3
  1225  001094  0100               	movlb	0	; () banked
  1226  001096  6FC9               	movwf	(Retardo@ms+1)& (0+255),b
  1227  001098  0EE8               	movlw	232
  1228  00109A  6FC8               	movwf	Retardo@ms& (0+255),b
  1229  00109C  EC4A  F009         	call	_Retardo	;wreg free
  1230                           
  1231                           ;main.c: 376: LATCbits.LATC7 = 1;
  1232  0010A0  8E8B               	bsf	3979,7,c	;volatile
  1233                           
  1234                           ;main.c: 377: ModoJuego = 0;
  1235  0010A2  0E00               	movlw	0
  1236  0010A4  6E2A               	movwf	_ModoJuego,c
  1237                           
  1238                           ;main.c: 378: Disp_Var_1 = PuntajeJuego;
  1239  0010A6  C02E  F001         	movff	_PuntajeJuego,_Disp_Var_1
  1240  0010AA  6A02               	clrf	_Disp_Var_1+1,c
  1241                           
  1242                           ;main.c: 379: PuntajeJuego = 0;
  1243  0010AC  0E00               	movlw	0
  1244  0010AE  6E2E               	movwf	_PuntajeJuego,c
  1245                           
  1246                           ;main.c: 380: LATCbits.LATC0 = 0;
  1247  0010B0  908B               	bcf	3979,0,c	;volatile
  1248                           
  1249                           ;main.c: 381: t_1m = 0;
  1250  0010B2  0E00               	movlw	0
  1251  0010B4  6E38               	movwf	_t_1m,c
  1252                           
  1253                           ;main.c: 382: return;
  1254  0010B6  0012               	return	
  1255  0010B8  D000               	goto	l3899
  1256  0010BA                     l3899:
  1257  0010BA  5033               	movf	_i,w,c
  1258  0010BC  0D01               	mullw	1
  1259  0010BE  0E60               	movlw	low _MemoriaJ
  1260  0010C0  24F3               	addwf	prodl,w,c
  1261  0010C2  6ED9               	movwf	fsr2l,c
  1262  0010C4  0E00               	movlw	high _MemoriaJ
  1263  0010C6  20F4               	addwfc	prodh,w,c
  1264  0010C8  6EDA               	movwf	fsr2h,c
  1265  0010CA  0E32               	movlw	50
  1266  0010CC  18DE               	xorwf	postinc2,w,c
  1267  0010CE  A4D8               	btfss	status,2,c
  1268  0010D0  D7C2               	goto	l3869
  1269                           
  1270                           ;main.c: 383: }
  1271                           ;main.c: 385: }
  1272                           ;main.c: 386: LATCbits.LATC6 = 0;
  1273  0010D2  9C8B               	bcf	3979,6,c	;volatile
  1274                           
  1275                           ;main.c: 388: Retardo(600);
  1276  0010D4  0E02               	movlw	2
  1277  0010D6  0100               	movlb	0	; () banked
  1278  0010D8  6FC9               	movwf	(Retardo@ms+1)& (0+255),b
  1279  0010DA  0E58               	movlw	88
  1280  0010DC  6FC8               	movwf	Retardo@ms& (0+255),b
  1281  0010DE  EC4A  F009         	call	_Retardo	;wreg free
  1282                           
  1283                           ;main.c: 389: LATCbits.LATC6 = 1;
  1284  0010E2  8C8B               	bsf	3979,6,c	;volatile
  1285                           
  1286                           ;main.c: 390: LATCbits.LATC0 = 0;
  1287  0010E4  908B               	bcf	3979,0,c	;volatile
  1288                           
  1289                           ;main.c: 391: PuntajeJuego ++;
  1290  0010E6  2A2E               	incf	_PuntajeJuego,f,c
  1291  0010E8  0012               	return		;funcret
  1292  0010EA                     __end_of_VerificarMJ:
  1293                           	opt stack 0
  1294                           tblptru	equ	0xFF8
  1295                           tblptrh	equ	0xFF7
  1296                           tblptrl	equ	0xFF6
  1297                           tablat	equ	0xFF5
  1298                           prodh	equ	0xFF4
  1299                           prodl	equ	0xFF3
  1300                           intcon	equ	0xFF2
  1301                           postinc0	equ	0xFEE
  1302                           wreg	equ	0xFE8
  1303                           indf2	equ	0xFDF
  1304                           postinc2	equ	0xFDE
  1305                           fsr2h	equ	0xFDA
  1306                           fsr2l	equ	0xFD9
  1307                           status	equ	0xFD8
  1308                           
  1309 ;; *************** function _Teclado *****************
  1310 ;; Defined at:
  1311 ;;		line 718 in file "main.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;		None
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;		None
  1316 ;; Return value:  Size  Location     Type
  1317 ;;		None               void
  1318 ;; Registers used:
  1319 ;;		wreg, status,2, status,0
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1329 ;;Total ram usage:        0 bytes
  1330 ;; Hardware stack levels used:    1
  1331 ;; Hardware stack levels required when called:    2
  1332 ;; This function calls:
  1333 ;;		Nothing
  1334 ;; This function is called by:
  1335 ;;		_main
  1336 ;;		_VerificarMJ
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           	psect	text3
  1341  000838                     __ptext3:
  1342                           	opt stack 0
  1343  000838                     _Teclado:
  1344                           	opt stack 27
  1345                           
  1346                           ;main.c: 720: if(F_10ms == 1)
  1347                           
  1348                           ;incstack = 0
  1349  000838  041C               	decf	_F_10ms,w,c
  1350  00083A  A4D8               	btfss	status,2,c
  1351  00083C  0012               	return	
  1352                           
  1353                           ;main.c: 721: {
  1354                           ;main.c: 722: F_10ms = 0;
  1355  00083E  0E00               	movlw	0
  1356  000840  6E1C               	movwf	_F_10ms,c
  1357                           
  1358                           ;main.c: 723: t_tec ++;
  1359  000842  2A3D               	incf	_t_tec,f,c
  1360                           
  1361                           ;main.c: 724: if(t_tec == 4)
  1362  000844  0E04               	movlw	4
  1363  000846  183D               	xorwf	_t_tec,w,c
  1364  000848  A4D8               	btfss	status,2,c
  1365  00084A  0012               	return	
  1366                           
  1367                           ;main.c: 725: {
  1368                           ;main.c: 726: t_tec = 0;
  1369  00084C  0E00               	movlw	0
  1370  00084E  6E3D               	movwf	_t_tec,c
  1371                           
  1372                           ;main.c: 727: switch (o_tec)
  1373  000850  D087               	goto	l3359
  1374  000852                     l3267:
  1375                           
  1376                           ;main.c: 730: o_tec = 2;
  1377  000852  0E02               	movlw	2
  1378  000854  6E50               	movwf	_o_tec,c
  1379                           
  1380                           ;main.c: 731: if(PORTDbits.RD3 == 1 ){ Tecla = 1; FBA = 1; }
  1381  000856  A683               	btfss	3971,3,c	;volatile
  1382  000858  D005               	goto	l3273
  1383  00085A  0E01               	movlw	1
  1384  00085C  6E30               	movwf	_Tecla,c
  1385  00085E  0E01               	movlw	1
  1386  000860  6E15               	movwf	_FBA,c
  1387  000862  D000               	goto	l3273
  1388  000864                     l3273:
  1389                           
  1390                           ;main.c: 732: if(PORTDbits.RD2 == 1 ){ Tecla = 2; FBA = 1; }
  1391  000864  A483               	btfss	3971,2,c	;volatile
  1392  000866  D005               	goto	l3277
  1393  000868  0E02               	movlw	2
  1394  00086A  6E30               	movwf	_Tecla,c
  1395  00086C  0E01               	movlw	1
  1396  00086E  6E15               	movwf	_FBA,c
  1397  000870  D000               	goto	l3277
  1398  000872                     l3277:
  1399                           
  1400                           ;main.c: 733: if(PORTDbits.RD1 == 1 ){ Tecla = 3; FBA = 1; }
  1401  000872  A283               	btfss	3971,1,c	;volatile
  1402  000874  D005               	goto	l3281
  1403  000876  0E03               	movlw	3
  1404  000878  6E30               	movwf	_Tecla,c
  1405  00087A  0E01               	movlw	1
  1406  00087C  6E15               	movwf	_FBA,c
  1407  00087E  D000               	goto	l3281
  1408  000880                     l3281:
  1409                           
  1410                           ;main.c: 734: if(PORTDbits.RD0 == 1 ){ Tecla = 0x0A; FBA = 1; }
  1411  000880  A083               	btfss	3971,0,c	;volatile
  1412  000882  D005               	goto	l3285
  1413  000884  0E0A               	movlw	10
  1414  000886  6E30               	movwf	_Tecla,c
  1415  000888  0E01               	movlw	1
  1416  00088A  6E15               	movwf	_FBA,c
  1417  00088C  D000               	goto	l3285
  1418  00088E                     l3285:
  1419                           
  1420                           ;main.c: 735: LATDbits.LATD7 = 0;
  1421  00088E  9E8C               	bcf	3980,7,c	;volatile
  1422                           
  1423                           ;main.c: 736: LATDbits.LATD6 = 1;
  1424  000890  8C8C               	bsf	3980,6,c	;volatile
  1425                           
  1426                           ;main.c: 737: break;
  1427  000892  0012               	return	
  1428  000894                     l3289:
  1429                           
  1430                           ;main.c: 740: o_tec = 3;
  1431  000894  0E03               	movlw	3
  1432  000896  6E50               	movwf	_o_tec,c
  1433                           
  1434                           ;main.c: 741: if(PORTDbits.RD3 == 1 ){ Tecla = 4; FBA = 1;}
  1435  000898  A683               	btfss	3971,3,c	;volatile
  1436  00089A  D005               	goto	l3295
  1437  00089C  0E04               	movlw	4
  1438  00089E  6E30               	movwf	_Tecla,c
  1439  0008A0  0E01               	movlw	1
  1440  0008A2  6E15               	movwf	_FBA,c
  1441  0008A4  D000               	goto	l3295
  1442  0008A6                     l3295:
  1443                           
  1444                           ;main.c: 742: if(PORTDbits.RD2 == 1 ){ Tecla = 5; FBA = 1;}
  1445  0008A6  A483               	btfss	3971,2,c	;volatile
  1446  0008A8  D005               	goto	l3299
  1447  0008AA  0E05               	movlw	5
  1448  0008AC  6E30               	movwf	_Tecla,c
  1449  0008AE  0E01               	movlw	1
  1450  0008B0  6E15               	movwf	_FBA,c
  1451  0008B2  D000               	goto	l3299
  1452  0008B4                     l3299:
  1453                           
  1454                           ;main.c: 743: if(PORTDbits.RD1 == 1 ){ Tecla = 6; FBA = 1;}
  1455  0008B4  A283               	btfss	3971,1,c	;volatile
  1456  0008B6  D005               	goto	l3303
  1457  0008B8  0E06               	movlw	6
  1458  0008BA  6E30               	movwf	_Tecla,c
  1459  0008BC  0E01               	movlw	1
  1460  0008BE  6E15               	movwf	_FBA,c
  1461  0008C0  D000               	goto	l3303
  1462  0008C2                     l3303:
  1463                           
  1464                           ;main.c: 744: if(PORTDbits.RD0 == 1 ){ Tecla = 0x0B; FBA = 1;}
  1465  0008C2  A083               	btfss	3971,0,c	;volatile
  1466  0008C4  D005               	goto	l3307
  1467  0008C6  0E0B               	movlw	11
  1468  0008C8  6E30               	movwf	_Tecla,c
  1469  0008CA  0E01               	movlw	1
  1470  0008CC  6E15               	movwf	_FBA,c
  1471  0008CE  D000               	goto	l3307
  1472  0008D0                     l3307:
  1473                           
  1474                           ;main.c: 745: LATDbits.LATD6 = 0;
  1475  0008D0  9C8C               	bcf	3980,6,c	;volatile
  1476                           
  1477                           ;main.c: 746: LATDbits.LATD5 = 1;
  1478  0008D2  8A8C               	bsf	3980,5,c	;volatile
  1479                           
  1480                           ;main.c: 747: break;
  1481  0008D4  0012               	return	
  1482  0008D6                     l3311:
  1483                           
  1484                           ;main.c: 750: o_tec = 4;
  1485  0008D6  0E04               	movlw	4
  1486  0008D8  6E50               	movwf	_o_tec,c
  1487                           
  1488                           ;main.c: 751: if(PORTDbits.RD3 == 1 ){ Tecla = 7; FBA = 1;}
  1489  0008DA  A683               	btfss	3971,3,c	;volatile
  1490  0008DC  D005               	goto	l3317
  1491  0008DE  0E07               	movlw	7
  1492  0008E0  6E30               	movwf	_Tecla,c
  1493  0008E2  0E01               	movlw	1
  1494  0008E4  6E15               	movwf	_FBA,c
  1495  0008E6  D000               	goto	l3317
  1496  0008E8                     l3317:
  1497                           
  1498                           ;main.c: 752: if(PORTDbits.RD2 == 1 ){ Tecla = 8; FBA = 1;}
  1499  0008E8  A483               	btfss	3971,2,c	;volatile
  1500  0008EA  D005               	goto	l3321
  1501  0008EC  0E08               	movlw	8
  1502  0008EE  6E30               	movwf	_Tecla,c
  1503  0008F0  0E01               	movlw	1
  1504  0008F2  6E15               	movwf	_FBA,c
  1505  0008F4  D000               	goto	l3321
  1506  0008F6                     l3321:
  1507                           
  1508                           ;main.c: 753: if(PORTDbits.RD1 == 1 ){ Tecla = 9; FBA = 1;}
  1509  0008F6  A283               	btfss	3971,1,c	;volatile
  1510  0008F8  D005               	goto	l3325
  1511  0008FA  0E09               	movlw	9
  1512  0008FC  6E30               	movwf	_Tecla,c
  1513  0008FE  0E01               	movlw	1
  1514  000900  6E15               	movwf	_FBA,c
  1515  000902  D000               	goto	l3325
  1516  000904                     l3325:
  1517                           
  1518                           ;main.c: 754: if(PORTDbits.RD0 == 1 ){ Tecla = 0x0C; FBA = 1;}
  1519  000904  A083               	btfss	3971,0,c	;volatile
  1520  000906  D005               	goto	l3329
  1521  000908  0E0C               	movlw	12
  1522  00090A  6E30               	movwf	_Tecla,c
  1523  00090C  0E01               	movlw	1
  1524  00090E  6E15               	movwf	_FBA,c
  1525  000910  D000               	goto	l3329
  1526  000912                     l3329:
  1527                           
  1528                           ;main.c: 755: LATDbits.LATD5 = 0;
  1529  000912  9A8C               	bcf	3980,5,c	;volatile
  1530                           
  1531                           ;main.c: 756: LATDbits.LATD4 = 1;
  1532  000914  888C               	bsf	3980,4,c	;volatile
  1533                           
  1534                           ;main.c: 757: break;
  1535  000916  0012               	return	
  1536  000918                     l3333:
  1537                           
  1538                           ;main.c: 760: o_tec = 1;
  1539  000918  0E01               	movlw	1
  1540  00091A  6E50               	movwf	_o_tec,c
  1541                           
  1542                           ;main.c: 761: if(PORTDbits.RD3 == 1 ){ Tecla = 0x0F; FBA = 1;}
  1543  00091C  A683               	btfss	3971,3,c	;volatile
  1544  00091E  D005               	goto	l3339
  1545  000920  0E0F               	movlw	15
  1546  000922  6E30               	movwf	_Tecla,c
  1547  000924  0E01               	movlw	1
  1548  000926  6E15               	movwf	_FBA,c
  1549  000928  D000               	goto	l3339
  1550  00092A                     l3339:
  1551                           
  1552                           ;main.c: 762: if(PORTDbits.RD2 == 1 ){ Tecla = 0; FBA = 1;}
  1553  00092A  A483               	btfss	3971,2,c	;volatile
  1554  00092C  D005               	goto	l3343
  1555  00092E  0E00               	movlw	0
  1556  000930  6E30               	movwf	_Tecla,c
  1557  000932  0E01               	movlw	1
  1558  000934  6E15               	movwf	_FBA,c
  1559  000936  D000               	goto	l3343
  1560  000938                     l3343:
  1561                           
  1562                           ;main.c: 763: if(PORTDbits.RD1 == 1 ){ Tecla = 0x0E; FBA = 1;}
  1563  000938  A283               	btfss	3971,1,c	;volatile
  1564  00093A  D005               	goto	l3347
  1565  00093C  0E0E               	movlw	14
  1566  00093E  6E30               	movwf	_Tecla,c
  1567  000940  0E01               	movlw	1
  1568  000942  6E15               	movwf	_FBA,c
  1569  000944  D000               	goto	l3347
  1570  000946                     l3347:
  1571                           
  1572                           ;main.c: 764: if(PORTDbits.RD0 == 1 ){ Tecla = 0x0D; FBA = 1;}
  1573  000946  A083               	btfss	3971,0,c	;volatile
  1574  000948  D005               	goto	l3351
  1575  00094A  0E0D               	movlw	13
  1576  00094C  6E30               	movwf	_Tecla,c
  1577  00094E  0E01               	movlw	1
  1578  000950  6E15               	movwf	_FBA,c
  1579  000952  D000               	goto	l3351
  1580  000954                     l3351:
  1581                           
  1582                           ;main.c: 765: LATDbits.LATD4 = 0;
  1583  000954  988C               	bcf	3980,4,c	;volatile
  1584                           
  1585                           ;main.c: 766: LATDbits.LATD7 = 1;
  1586  000956  8E8C               	bsf	3980,7,c	;volatile
  1587                           
  1588                           ;main.c: 767: break;
  1589  000958  0012               	return	
  1590  00095A                     l3355:
  1591                           
  1592                           ;main.c: 771: o_tec = 1;
  1593  00095A  0E01               	movlw	1
  1594  00095C  6E50               	movwf	_o_tec,c
  1595                           
  1596                           ;main.c: 773: }
  1597                           
  1598                           ;main.c: 772: break;
  1599  00095E  0012               	return	
  1600  000960                     l3359:
  1601  000960  5050               	movf	_o_tec,w,c
  1602                           
  1603                           ; Switch size 1, requested type "space"
  1604                           ; Number of cases is 4, Range of values is 1 to 4
  1605                           ; switch strategies available:
  1606                           ; Name         Instructions Cycles
  1607                           ; simple_byte           13     7 (average)
  1608                           ;	Chosen strategy is simple_byte
  1609  000962  0A01               	xorlw	1	; case 1
  1610  000964  B4D8               	btfsc	status,2,c
  1611  000966  D775               	goto	l3267
  1612  000968  0A03               	xorlw	3	; case 2
  1613  00096A  B4D8               	btfsc	status,2,c
  1614  00096C  D793               	goto	l3289
  1615  00096E  0A01               	xorlw	1	; case 3
  1616  000970  B4D8               	btfsc	status,2,c
  1617  000972  D7B1               	goto	l3311
  1618  000974  0A07               	xorlw	7	; case 4
  1619  000976  B4D8               	btfsc	status,2,c
  1620  000978  D7CF               	goto	l3333
  1621  00097A  D7EF               	goto	l3355
  1622  00097C  0012               	return	
  1623  00097E  0012               	return		;funcret
  1624  000980                     __end_of_Teclado:
  1625                           	opt stack 0
  1626                           tblptru	equ	0xFF8
  1627                           tblptrh	equ	0xFF7
  1628                           tblptrl	equ	0xFF6
  1629                           tablat	equ	0xFF5
  1630                           prodh	equ	0xFF4
  1631                           prodl	equ	0xFF3
  1632                           intcon	equ	0xFF2
  1633                           postinc0	equ	0xFEE
  1634                           wreg	equ	0xFE8
  1635                           indf2	equ	0xFDF
  1636                           postinc2	equ	0xFDE
  1637                           fsr2h	equ	0xFDA
  1638                           fsr2l	equ	0xFD9
  1639                           status	equ	0xFD8
  1640                           
  1641 ;; *************** function _TecladoJ *****************
  1642 ;; Defined at:
  1643 ;;		line 780 in file "main.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;		None
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;		None
  1648 ;; Return value:  Size  Location     Type
  1649 ;;		None               void
  1650 ;; Registers used:
  1651 ;;		wreg, status,2, status,0
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1661 ;;Total ram usage:        0 bytes
  1662 ;; Hardware stack levels used:    1
  1663 ;; Hardware stack levels required when called:    2
  1664 ;; This function calls:
  1665 ;;		Nothing
  1666 ;; This function is called by:
  1667 ;;		_main
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           	psect	text4
  1672  000980                     __ptext4:
  1673                           	opt stack 0
  1674  000980                     _TecladoJ:
  1675                           	opt stack 28
  1676                           
  1677                           ;main.c: 782: TimeToTeclado ++;
  1678                           
  1679                           ;incstack = 0
  1680  000980  2A31               	incf	_TimeToTeclado,f,c
  1681                           
  1682                           ;main.c: 783: if(TimeToTeclado == 50)
  1683  000982  0E32               	movlw	50
  1684  000984  1831               	xorwf	_TimeToTeclado,w,c
  1685  000986  A4D8               	btfss	status,2,c
  1686  000988  0012               	return	
  1687                           
  1688                           ;main.c: 784: {
  1689                           ;main.c: 785: TimeToTeclado = 0;
  1690  00098A  0E00               	movlw	0
  1691  00098C  6E31               	movwf	_TimeToTeclado,c
  1692                           
  1693                           ;main.c: 786: switch (o_tec)
  1694  00098E  D087               	goto	l3817
  1695  000990                     l3725:
  1696                           
  1697                           ;main.c: 789: o_tec = 2;
  1698  000990  0E02               	movlw	2
  1699  000992  6E50               	movwf	_o_tec,c
  1700                           
  1701                           ;main.c: 790: if(PORTDbits.RD3 == 1 ){ Tecla = 1; FBA = 1; }
  1702  000994  A683               	btfss	3971,3,c	;volatile
  1703  000996  D005               	goto	l3731
  1704  000998  0E01               	movlw	1
  1705  00099A  6E30               	movwf	_Tecla,c
  1706  00099C  0E01               	movlw	1
  1707  00099E  6E15               	movwf	_FBA,c
  1708  0009A0  D000               	goto	l3731
  1709  0009A2                     l3731:
  1710                           
  1711                           ;main.c: 791: if(PORTDbits.RD2 == 1 ){ Tecla = 2; FBA = 1; }
  1712  0009A2  A483               	btfss	3971,2,c	;volatile
  1713  0009A4  D005               	goto	l3735
  1714  0009A6  0E02               	movlw	2
  1715  0009A8  6E30               	movwf	_Tecla,c
  1716  0009AA  0E01               	movlw	1
  1717  0009AC  6E15               	movwf	_FBA,c
  1718  0009AE  D000               	goto	l3735
  1719  0009B0                     l3735:
  1720                           
  1721                           ;main.c: 792: if(PORTDbits.RD1 == 1 ){ Tecla = 3; FBA = 1; }
  1722  0009B0  A283               	btfss	3971,1,c	;volatile
  1723  0009B2  D005               	goto	l3739
  1724  0009B4  0E03               	movlw	3
  1725  0009B6  6E30               	movwf	_Tecla,c
  1726  0009B8  0E01               	movlw	1
  1727  0009BA  6E15               	movwf	_FBA,c
  1728  0009BC  D000               	goto	l3739
  1729  0009BE                     l3739:
  1730                           
  1731                           ;main.c: 793: if(PORTDbits.RD0 == 1 ){ Tecla = 0x0A; FBA = 1; }
  1732  0009BE  A083               	btfss	3971,0,c	;volatile
  1733  0009C0  D005               	goto	l3743
  1734  0009C2  0E0A               	movlw	10
  1735  0009C4  6E30               	movwf	_Tecla,c
  1736  0009C6  0E01               	movlw	1
  1737  0009C8  6E15               	movwf	_FBA,c
  1738  0009CA  D000               	goto	l3743
  1739  0009CC                     l3743:
  1740                           
  1741                           ;main.c: 794: LATDbits.LATD7 = 0;
  1742  0009CC  9E8C               	bcf	3980,7,c	;volatile
  1743                           
  1744                           ;main.c: 795: LATDbits.LATD6 = 1;
  1745  0009CE  8C8C               	bsf	3980,6,c	;volatile
  1746                           
  1747                           ;main.c: 796: break;
  1748  0009D0  0012               	return	
  1749  0009D2                     l3747:
  1750                           
  1751                           ;main.c: 799: o_tec = 3;
  1752  0009D2  0E03               	movlw	3
  1753  0009D4  6E50               	movwf	_o_tec,c
  1754                           
  1755                           ;main.c: 800: if(PORTDbits.RD3 == 1 ){ Tecla = 4; FBA = 1;}
  1756  0009D6  A683               	btfss	3971,3,c	;volatile
  1757  0009D8  D005               	goto	l3753
  1758  0009DA  0E04               	movlw	4
  1759  0009DC  6E30               	movwf	_Tecla,c
  1760  0009DE  0E01               	movlw	1
  1761  0009E0  6E15               	movwf	_FBA,c
  1762  0009E2  D000               	goto	l3753
  1763  0009E4                     l3753:
  1764                           
  1765                           ;main.c: 801: if(PORTDbits.RD2 == 1 ){ Tecla = 5; FBA = 1;}
  1766  0009E4  A483               	btfss	3971,2,c	;volatile
  1767  0009E6  D005               	goto	l3757
  1768  0009E8  0E05               	movlw	5
  1769  0009EA  6E30               	movwf	_Tecla,c
  1770  0009EC  0E01               	movlw	1
  1771  0009EE  6E15               	movwf	_FBA,c
  1772  0009F0  D000               	goto	l3757
  1773  0009F2                     l3757:
  1774                           
  1775                           ;main.c: 802: if(PORTDbits.RD1 == 1 ){ Tecla = 6; FBA = 1;}
  1776  0009F2  A283               	btfss	3971,1,c	;volatile
  1777  0009F4  D005               	goto	l3761
  1778  0009F6  0E06               	movlw	6
  1779  0009F8  6E30               	movwf	_Tecla,c
  1780  0009FA  0E01               	movlw	1
  1781  0009FC  6E15               	movwf	_FBA,c
  1782  0009FE  D000               	goto	l3761
  1783  000A00                     l3761:
  1784                           
  1785                           ;main.c: 803: if(PORTDbits.RD0 == 1 ){ Tecla = 0x0B; FBA = 1;}
  1786  000A00  A083               	btfss	3971,0,c	;volatile
  1787  000A02  D005               	goto	l3765
  1788  000A04  0E0B               	movlw	11
  1789  000A06  6E30               	movwf	_Tecla,c
  1790  000A08  0E01               	movlw	1
  1791  000A0A  6E15               	movwf	_FBA,c
  1792  000A0C  D000               	goto	l3765
  1793  000A0E                     l3765:
  1794                           
  1795                           ;main.c: 804: LATDbits.LATD6 = 0;
  1796  000A0E  9C8C               	bcf	3980,6,c	;volatile
  1797                           
  1798                           ;main.c: 805: LATDbits.LATD5 = 1;
  1799  000A10  8A8C               	bsf	3980,5,c	;volatile
  1800                           
  1801                           ;main.c: 806: break;
  1802  000A12  0012               	return	
  1803  000A14                     l3769:
  1804                           
  1805                           ;main.c: 809: o_tec = 4;
  1806  000A14  0E04               	movlw	4
  1807  000A16  6E50               	movwf	_o_tec,c
  1808                           
  1809                           ;main.c: 810: if(PORTDbits.RD3 == 1 ){ Tecla = 7; FBA = 1;}
  1810  000A18  A683               	btfss	3971,3,c	;volatile
  1811  000A1A  D005               	goto	l3775
  1812  000A1C  0E07               	movlw	7
  1813  000A1E  6E30               	movwf	_Tecla,c
  1814  000A20  0E01               	movlw	1
  1815  000A22  6E15               	movwf	_FBA,c
  1816  000A24  D000               	goto	l3775
  1817  000A26                     l3775:
  1818                           
  1819                           ;main.c: 811: if(PORTDbits.RD2 == 1 ){ Tecla = 8; FBA = 1;}
  1820  000A26  A483               	btfss	3971,2,c	;volatile
  1821  000A28  D005               	goto	l3779
  1822  000A2A  0E08               	movlw	8
  1823  000A2C  6E30               	movwf	_Tecla,c
  1824  000A2E  0E01               	movlw	1
  1825  000A30  6E15               	movwf	_FBA,c
  1826  000A32  D000               	goto	l3779
  1827  000A34                     l3779:
  1828                           
  1829                           ;main.c: 812: if(PORTDbits.RD1 == 1 ){ Tecla = 9; FBA = 1;}
  1830  000A34  A283               	btfss	3971,1,c	;volatile
  1831  000A36  D005               	goto	l3783
  1832  000A38  0E09               	movlw	9
  1833  000A3A  6E30               	movwf	_Tecla,c
  1834  000A3C  0E01               	movlw	1
  1835  000A3E  6E15               	movwf	_FBA,c
  1836  000A40  D000               	goto	l3783
  1837  000A42                     l3783:
  1838                           
  1839                           ;main.c: 813: if(PORTDbits.RD0 == 1 ){ Tecla = 0x0C; FBA = 1;}
  1840  000A42  A083               	btfss	3971,0,c	;volatile
  1841  000A44  D005               	goto	l3787
  1842  000A46  0E0C               	movlw	12
  1843  000A48  6E30               	movwf	_Tecla,c
  1844  000A4A  0E01               	movlw	1
  1845  000A4C  6E15               	movwf	_FBA,c
  1846  000A4E  D000               	goto	l3787
  1847  000A50                     l3787:
  1848                           
  1849                           ;main.c: 814: LATDbits.LATD5 = 0;
  1850  000A50  9A8C               	bcf	3980,5,c	;volatile
  1851                           
  1852                           ;main.c: 815: LATDbits.LATD4 = 1;
  1853  000A52  888C               	bsf	3980,4,c	;volatile
  1854                           
  1855                           ;main.c: 816: break;
  1856  000A54  0012               	return	
  1857  000A56                     l3791:
  1858                           
  1859                           ;main.c: 819: o_tec = 1;
  1860  000A56  0E01               	movlw	1
  1861  000A58  6E50               	movwf	_o_tec,c
  1862                           
  1863                           ;main.c: 820: if(PORTDbits.RD3 == 1 ){ Tecla = 0x0F; FBA = 1;}
  1864  000A5A  A683               	btfss	3971,3,c	;volatile
  1865  000A5C  D005               	goto	l3797
  1866  000A5E  0E0F               	movlw	15
  1867  000A60  6E30               	movwf	_Tecla,c
  1868  000A62  0E01               	movlw	1
  1869  000A64  6E15               	movwf	_FBA,c
  1870  000A66  D000               	goto	l3797
  1871  000A68                     l3797:
  1872                           
  1873                           ;main.c: 821: if(PORTDbits.RD2 == 1 ){ Tecla = 0; FBA = 1;}
  1874  000A68  A483               	btfss	3971,2,c	;volatile
  1875  000A6A  D005               	goto	l3801
  1876  000A6C  0E00               	movlw	0
  1877  000A6E  6E30               	movwf	_Tecla,c
  1878  000A70  0E01               	movlw	1
  1879  000A72  6E15               	movwf	_FBA,c
  1880  000A74  D000               	goto	l3801
  1881  000A76                     l3801:
  1882                           
  1883                           ;main.c: 822: if(PORTDbits.RD1 == 1 ){ Tecla = 0x0E; FBA = 1;}
  1884  000A76  A283               	btfss	3971,1,c	;volatile
  1885  000A78  D005               	goto	l3805
  1886  000A7A  0E0E               	movlw	14
  1887  000A7C  6E30               	movwf	_Tecla,c
  1888  000A7E  0E01               	movlw	1
  1889  000A80  6E15               	movwf	_FBA,c
  1890  000A82  D000               	goto	l3805
  1891  000A84                     l3805:
  1892                           
  1893                           ;main.c: 823: if(PORTDbits.RD0 == 1 ){ Tecla = 0x0D; FBA = 1;}
  1894  000A84  A083               	btfss	3971,0,c	;volatile
  1895  000A86  D005               	goto	l3809
  1896  000A88  0E0D               	movlw	13
  1897  000A8A  6E30               	movwf	_Tecla,c
  1898  000A8C  0E01               	movlw	1
  1899  000A8E  6E15               	movwf	_FBA,c
  1900  000A90  D000               	goto	l3809
  1901  000A92                     l3809:
  1902                           
  1903                           ;main.c: 824: LATDbits.LATD4 = 0;
  1904  000A92  988C               	bcf	3980,4,c	;volatile
  1905                           
  1906                           ;main.c: 825: LATDbits.LATD7 = 1;
  1907  000A94  8E8C               	bsf	3980,7,c	;volatile
  1908                           
  1909                           ;main.c: 826: break;
  1910  000A96  0012               	return	
  1911  000A98                     l3813:
  1912                           
  1913                           ;main.c: 830: o_tec = 1;
  1914  000A98  0E01               	movlw	1
  1915  000A9A  6E50               	movwf	_o_tec,c
  1916                           
  1917                           ;main.c: 832: }
  1918                           
  1919                           ;main.c: 831: break;
  1920  000A9C  0012               	return	
  1921  000A9E                     l3817:
  1922  000A9E  5050               	movf	_o_tec,w,c
  1923                           
  1924                           ; Switch size 1, requested type "space"
  1925                           ; Number of cases is 4, Range of values is 1 to 4
  1926                           ; switch strategies available:
  1927                           ; Name         Instructions Cycles
  1928                           ; simple_byte           13     7 (average)
  1929                           ;	Chosen strategy is simple_byte
  1930  000AA0  0A01               	xorlw	1	; case 1
  1931  000AA2  B4D8               	btfsc	status,2,c
  1932  000AA4  D775               	goto	l3725
  1933  000AA6  0A03               	xorlw	3	; case 2
  1934  000AA8  B4D8               	btfsc	status,2,c
  1935  000AAA  D793               	goto	l3747
  1936  000AAC  0A01               	xorlw	1	; case 3
  1937  000AAE  B4D8               	btfsc	status,2,c
  1938  000AB0  D7B1               	goto	l3769
  1939  000AB2  0A07               	xorlw	7	; case 4
  1940  000AB4  B4D8               	btfsc	status,2,c
  1941  000AB6  D7CF               	goto	l3791
  1942  000AB8  D7EF               	goto	l3813
  1943  000ABA  0012               	return	
  1944  000ABC  0012               	return		;funcret
  1945  000ABE                     __end_of_TecladoJ:
  1946                           	opt stack 0
  1947                           tblptru	equ	0xFF8
  1948                           tblptrh	equ	0xFF7
  1949                           tblptrl	equ	0xFF6
  1950                           tablat	equ	0xFF5
  1951                           prodh	equ	0xFF4
  1952                           prodl	equ	0xFF3
  1953                           intcon	equ	0xFF2
  1954                           postinc0	equ	0xFEE
  1955                           wreg	equ	0xFE8
  1956                           indf2	equ	0xFDF
  1957                           postinc2	equ	0xFDE
  1958                           fsr2h	equ	0xFDA
  1959                           fsr2l	equ	0xFD9
  1960                           status	equ	0xFD8
  1961                           
  1962 ;; *************** function _OpenTimer1 *****************
  1963 ;; Defined at:
  1964 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1open.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  config          1    wreg     unsigned char 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  config          1    0[BANK0 ] unsigned char 
  1969 ;; Return value:  Size  Location     Type
  1970 ;;		None               void
  1971 ;; Registers used:
  1972 ;;		wreg, status,2, status,0
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1979 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1981 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1982 ;;Total ram usage:        1 bytes
  1983 ;; Hardware stack levels used:    1
  1984 ;; Hardware stack levels required when called:    2
  1985 ;; This function calls:
  1986 ;;		Nothing
  1987 ;; This function is called by:
  1988 ;;		_main
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text5
  1993  001260                     __ptext5:
  1994                           	opt stack 0
  1995  001260                     _OpenTimer1:
  1996                           	opt stack 28
  1997                           
  1998                           ;incstack = 0
  1999                           ;OpenTimer1@config stored from wreg
  2000  001260  0100               	movlb	0	; () banked
  2001  001262  6FC8               	movwf	OpenTimer1@config& (0+255),b
  2002                           
  2003                           ; BSR set to: 0
  2004  001264  0100               	movlb	0	; () banked
  2005  001266  51C8               	movf	OpenTimer1@config& (0+255),w,b
  2006  001268  0B7E               	andlw	126
  2007  00126A  6ECD               	movwf	4045,c	;volatile
  2008                           
  2009                           ; BSR set to: 0
  2010  00126C  0100               	movlb	0	; () banked
  2011  00126E  ADC8               	btfss	OpenTimer1@config& (0+255),6,b
  2012  001270  D002               	goto	l637
  2013                           
  2014                           ; BSR set to: 0
  2015  001272  8ECD               	bsf	4045,7,c	;volatile
  2016  001274  D002               	goto	l3487
  2017  001276                     l637:
  2018                           
  2019                           ; BSR set to: 0
  2020  001276  9ECD               	bcf	4045,7,c	;volatile
  2021  001278  D000               	goto	l3487
  2022  00127A                     l3487:
  2023                           
  2024                           ; BSR set to: 0
  2025  00127A  0E00               	movlw	0
  2026  00127C  6ECF               	movwf	4047,c	;volatile
  2027  00127E  0E00               	movlw	0
  2028  001280  6ECE               	movwf	4046,c	;volatile
  2029                           
  2030                           ; BSR set to: 0
  2031  001282  909E               	bcf	3998,0,c	;volatile
  2032                           
  2033                           ; BSR set to: 0
  2034  001284  0100               	movlb	0	; () banked
  2035  001286  AFC8               	btfss	OpenTimer1@config& (0+255),7,b
  2036  001288  D002               	goto	l639
  2037                           
  2038                           ; BSR set to: 0
  2039  00128A  809D               	bsf	3997,0,c	;volatile
  2040  00128C  D001               	goto	l640
  2041  00128E                     l639:
  2042                           
  2043                           ; BSR set to: 0
  2044  00128E  909D               	bcf	3997,0,c	;volatile
  2045  001290                     l640:
  2046                           
  2047                           ; BSR set to: 0
  2048  001290  80CD               	bsf	4045,0,c	;volatile
  2049                           
  2050                           ; BSR set to: 0
  2051  001292  0012               	return		;funcret
  2052  001294                     __end_of_OpenTimer1:
  2053                           	opt stack 0
  2054                           tblptru	equ	0xFF8
  2055                           tblptrh	equ	0xFF7
  2056                           tblptrl	equ	0xFF6
  2057                           tablat	equ	0xFF5
  2058                           prodh	equ	0xFF4
  2059                           prodl	equ	0xFF3
  2060                           intcon	equ	0xFF2
  2061                           postinc0	equ	0xFEE
  2062                           wreg	equ	0xFE8
  2063                           indf2	equ	0xFDF
  2064                           postinc2	equ	0xFDE
  2065                           fsr2h	equ	0xFDA
  2066                           fsr2l	equ	0xFD9
  2067                           status	equ	0xFD8
  2068                           
  2069 ;; *************** function _OpenTimer0 *****************
  2070 ;; Defined at:
  2071 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0open.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;  config          1    wreg     unsigned char 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;  config          1    0[BANK0 ] unsigned char 
  2076 ;; Return value:  Size  Location     Type
  2077 ;;		None               void
  2078 ;; Registers used:
  2079 ;;		wreg, status,2, status,0
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2086 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2088 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;Total ram usage:        1 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; Hardware stack levels required when called:    2
  2092 ;; This function calls:
  2093 ;;		Nothing
  2094 ;; This function is called by:
  2095 ;;		_main
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text6
  2100  0012BE                     __ptext6:
  2101                           	opt stack 0
  2102  0012BE                     _OpenTimer0:
  2103                           	opt stack 28
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;incstack = 0
  2107                           ;OpenTimer0@config stored from wreg
  2108  0012BE  0100               	movlb	0	; () banked
  2109  0012C0  6FC8               	movwf	OpenTimer0@config& (0+255),b
  2110                           
  2111                           ; BSR set to: 0
  2112  0012C2  0100               	movlb	0	; () banked
  2113  0012C4  51C8               	movf	OpenTimer0@config& (0+255),w,b
  2114  0012C6  0B7F               	andlw	127
  2115  0012C8  6ED5               	movwf	4053,c	;volatile
  2116                           
  2117                           ; BSR set to: 0
  2118  0012CA  0E00               	movlw	0
  2119  0012CC  6ED7               	movwf	4055,c	;volatile
  2120                           
  2121                           ; BSR set to: 0
  2122  0012CE  0E00               	movlw	0
  2123  0012D0  6ED6               	movwf	4054,c	;volatile
  2124                           
  2125                           ; BSR set to: 0
  2126  0012D2  94F2               	bcf	intcon,2,c	;volatile
  2127                           
  2128                           ; BSR set to: 0
  2129  0012D4  0100               	movlb	0	; () banked
  2130  0012D6  AFC8               	btfss	OpenTimer0@config& (0+255),7,b
  2131  0012D8  D002               	goto	l620
  2132                           
  2133                           ; BSR set to: 0
  2134  0012DA  8AF2               	bsf	intcon,5,c	;volatile
  2135  0012DC  D001               	goto	l621
  2136  0012DE                     l620:
  2137                           
  2138                           ; BSR set to: 0
  2139  0012DE  9AF2               	bcf	intcon,5,c	;volatile
  2140  0012E0                     l621:
  2141                           
  2142                           ; BSR set to: 0
  2143  0012E0  8ED5               	bsf	4053,7,c	;volatile
  2144                           
  2145                           ; BSR set to: 0
  2146  0012E2  0012               	return		;funcret
  2147  0012E4                     __end_of_OpenTimer0:
  2148                           	opt stack 0
  2149                           tblptru	equ	0xFF8
  2150                           tblptrh	equ	0xFF7
  2151                           tblptrl	equ	0xFF6
  2152                           tablat	equ	0xFF5
  2153                           prodh	equ	0xFF4
  2154                           prodl	equ	0xFF3
  2155                           intcon	equ	0xFF2
  2156                           postinc0	equ	0xFEE
  2157                           wreg	equ	0xFE8
  2158                           indf2	equ	0xFDF
  2159                           postinc2	equ	0xFDE
  2160                           fsr2h	equ	0xFDA
  2161                           fsr2l	equ	0xFD9
  2162                           status	equ	0xFD8
  2163                           
  2164 ;; *************** function _MostrarJ *****************
  2165 ;; Defined at:
  2166 ;;		line 524 in file "main.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;		None
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;		None
  2171 ;; Return value:  Size  Location     Type
  2172 ;;		None               void
  2173 ;; Registers used:
  2174 ;;		wreg, status,2, status,0, cstack
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;Total ram usage:        0 bytes
  2185 ;; Hardware stack levels used:    1
  2186 ;; Hardware stack levels required when called:    3
  2187 ;; This function calls:
  2188 ;;		_Tabla
  2189 ;; This function is called by:
  2190 ;;		_main
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194                           	psect	text7
  2195  000CF8                     __ptext7:
  2196                           	opt stack 0
  2197  000CF8                     _MostrarJ:
  2198                           	opt stack 27
  2199                           
  2200                           ;main.c: 526: if(F_1ms == 1)
  2201                           
  2202                           ; BSR set to: 0
  2203                           ;incstack = 0
  2204  000CF8  041F               	decf	_F_1ms,w,c
  2205  000CFA  A4D8               	btfss	status,2,c
  2206  000CFC  0012               	return	
  2207                           
  2208                           ;main.c: 527: {
  2209                           ;main.c: 528: F_1ms = 0;
  2210  000CFE  0E00               	movlw	0
  2211  000D00  6E1F               	movwf	_F_1ms,c
  2212                           
  2213                           ;main.c: 529: t_mux++;
  2214  000D02  2A3C               	incf	_t_mux,f,c
  2215                           
  2216                           ;main.c: 530: if(t_mux == 4)
  2217  000D04  0E04               	movlw	4
  2218  000D06  183C               	xorwf	_t_mux,w,c
  2219  000D08  A4D8               	btfss	status,2,c
  2220  000D0A  0012               	return	
  2221                           
  2222                           ;main.c: 531: {
  2223                           ;main.c: 532: t_mux = 0;
  2224  000D0C  0E00               	movlw	0
  2225  000D0E  6E3C               	movwf	_t_mux,c
  2226                           
  2227                           ;main.c: 533: switch (o_mux)
  2228  000D10  D056               	goto	l3717
  2229  000D12                     l3665:
  2230                           
  2231                           ;main.c: 536: o_mux = 2;
  2232  000D12  0E02               	movlw	2
  2233  000D14  6E34               	movwf	_o_mux,c
  2234                           
  2235                           ;main.c: 537: LATCbits.LATC4 = 0;
  2236  000D16  988B               	bcf	3979,4,c	;volatile
  2237                           
  2238                           ;main.c: 538: Tabla(Disp_U);
  2239  000D18  500D               	movf	_Disp_U,w,c
  2240  000D1A  ECF2  F006         	call	_Tabla
  2241                           
  2242                           ;main.c: 539: LATAbits.LATA7 = 1;
  2243  000D1E  8E89               	bsf	3977,7,c	;volatile
  2244                           
  2245                           ;main.c: 540: break;
  2246  000D20  0012               	return	
  2247  000D22                     l3673:
  2248                           
  2249                           ;main.c: 543: o_mux = 3;
  2250  000D22  0E03               	movlw	3
  2251  000D24  6E34               	movwf	_o_mux,c
  2252                           
  2253                           ;main.c: 544: LATAbits.LATA7 = 0;
  2254  000D26  9E89               	bcf	3977,7,c	;volatile
  2255                           
  2256                           ;main.c: 545: Tabla(Disp_D);
  2257  000D28  5008               	movf	_Disp_D,w,c
  2258  000D2A  ECF2  F006         	call	_Tabla
  2259                           
  2260                           ;main.c: 546: PORTE = 0b00000100;
  2261  000D2E  0E04               	movlw	4
  2262  000D30  6E84               	movwf	3972,c	;volatile
  2263                           
  2264                           ;main.c: 547: break;
  2265  000D32  0012               	return	
  2266  000D34                     l3681:
  2267                           
  2268                           ;main.c: 550: o_mux = 4;
  2269  000D34  0E04               	movlw	4
  2270  000D36  6E34               	movwf	_o_mux,c
  2271                           
  2272                           ;main.c: 551: PORTE = 0b00000000;
  2273  000D38  0E00               	movlw	0
  2274  000D3A  6E84               	movwf	3972,c	;volatile
  2275                           
  2276                           ;main.c: 552: Tabla(Disp_C);
  2277  000D3C  5007               	movf	_Disp_C,w,c
  2278  000D3E  ECF2  F006         	call	_Tabla
  2279                           
  2280                           ;main.c: 553: PORTE = 0b00000010;
  2281  000D42  0E02               	movlw	2
  2282  000D44  6E84               	movwf	3972,c	;volatile
  2283                           
  2284                           ;main.c: 554: break;
  2285  000D46  0012               	return	
  2286  000D48                     l3687:
  2287                           
  2288                           ;main.c: 557: o_mux = 5;
  2289  000D48  0E05               	movlw	5
  2290  000D4A  6E34               	movwf	_o_mux,c
  2291                           
  2292                           ;main.c: 558: PORTE = 0b00000000;
  2293  000D4C  0E00               	movlw	0
  2294  000D4E  6E84               	movwf	3972,c	;volatile
  2295                           
  2296                           ;main.c: 559: Tabla(Disp_M);
  2297  000D50  500A               	movf	_Disp_M,w,c
  2298  000D52  ECF2  F006         	call	_Tabla
  2299                           
  2300                           ;main.c: 560: PORTE = 0b00000001;
  2301  000D56  0E01               	movlw	1
  2302  000D58  6E84               	movwf	3972,c	;volatile
  2303                           
  2304                           ;main.c: 561: break;
  2305  000D5A  0012               	return	
  2306  000D5C                     l3693:
  2307                           
  2308                           ;main.c: 564: o_mux = 1;
  2309  000D5C  0E01               	movlw	1
  2310  000D5E  6E34               	movwf	_o_mux,c
  2311                           
  2312                           ;main.c: 565: PORTE = 0b00000000;
  2313  000D60  0E00               	movlw	0
  2314  000D62  6E84               	movwf	3972,c	;volatile
  2315                           
  2316                           ;main.c: 566: LATBbits.LATB0 = Led_RB0;
  2317  000D64  B022               	btfsc	_Led_RB0,0,c
  2318  000D66  D002               	bra	u3295
  2319  000D68  908A               	bcf	3978,0,c	;volatile
  2320  000D6A  D001               	bra	u3296
  2321  000D6C                     u3295:
  2322  000D6C  808A               	bsf	3978,0,c	;volatile
  2323  000D6E                     u3296:
  2324                           
  2325                           ;main.c: 567: LATBbits.LATB1 = Led_RB1;
  2326  000D6E  B023               	btfsc	_Led_RB1,0,c
  2327  000D70  D002               	bra	u3305
  2328  000D72  928A               	bcf	3978,1,c	;volatile
  2329  000D74  D001               	bra	u3306
  2330  000D76                     u3305:
  2331  000D76  828A               	bsf	3978,1,c	;volatile
  2332  000D78                     u3306:
  2333                           
  2334                           ;main.c: 568: LATBbits.LATB2 = Led_RB2;
  2335  000D78  B024               	btfsc	_Led_RB2,0,c
  2336  000D7A  D002               	bra	u3315
  2337  000D7C  948A               	bcf	3978,2,c	;volatile
  2338  000D7E  D001               	bra	u3316
  2339  000D80                     u3315:
  2340  000D80  848A               	bsf	3978,2,c	;volatile
  2341  000D82                     u3316:
  2342                           
  2343                           ;main.c: 569: LATBbits.LATB3 = Led_RB3;
  2344  000D82  B025               	btfsc	_Led_RB3,0,c
  2345  000D84  D002               	bra	u3325
  2346  000D86  968A               	bcf	3978,3,c	;volatile
  2347  000D88  D001               	bra	u3326
  2348  000D8A                     u3325:
  2349  000D8A  868A               	bsf	3978,3,c	;volatile
  2350  000D8C                     u3326:
  2351                           
  2352                           ;main.c: 570: LATBbits.LATB4 = Led_RB4;
  2353  000D8C  B026               	btfsc	_Led_RB4,0,c
  2354  000D8E  D002               	bra	u3335
  2355  000D90  988A               	bcf	3978,4,c	;volatile
  2356  000D92  D001               	bra	u3336
  2357  000D94                     u3335:
  2358  000D94  888A               	bsf	3978,4,c	;volatile
  2359  000D96                     u3336:
  2360                           
  2361                           ;main.c: 571: LATBbits.LATB5 = Led_RB5;
  2362  000D96  B027               	btfsc	_Led_RB5,0,c
  2363  000D98  D002               	bra	u3345
  2364  000D9A  9A8A               	bcf	3978,5,c	;volatile
  2365  000D9C  D001               	bra	u3346
  2366  000D9E                     u3345:
  2367  000D9E  8A8A               	bsf	3978,5,c	;volatile
  2368  000DA0                     u3346:
  2369                           
  2370                           ;main.c: 572: LATBbits.LATB6 = Led_RB6;
  2371  000DA0  B028               	btfsc	_Led_RB6,0,c
  2372  000DA2  D002               	bra	u3355
  2373  000DA4  9C8A               	bcf	3978,6,c	;volatile
  2374  000DA6  D001               	bra	u3356
  2375  000DA8                     u3355:
  2376  000DA8  8C8A               	bsf	3978,6,c	;volatile
  2377  000DAA                     u3356:
  2378                           
  2379                           ;main.c: 573: LATBbits.LATB7 = Led_RB7;
  2380  000DAA  B029               	btfsc	_Led_RB7,0,c
  2381  000DAC  D002               	bra	u3365
  2382  000DAE  9E8A               	bcf	3978,7,c	;volatile
  2383  000DB0  D001               	bra	u3366
  2384  000DB2                     u3365:
  2385  000DB2  8E8A               	bsf	3978,7,c	;volatile
  2386  000DB4                     u3366:
  2387                           
  2388                           ;main.c: 574: LATCbits.LATC4 = 1;
  2389  000DB4  888B               	bsf	3979,4,c	;volatile
  2390                           
  2391                           ;main.c: 575: break;
  2392  000DB6  0012               	return	
  2393  000DB8                     l3713:
  2394                           
  2395                           ;main.c: 578: o_mux = 1;
  2396  000DB8  0E01               	movlw	1
  2397  000DBA  6E34               	movwf	_o_mux,c
  2398                           
  2399                           ;main.c: 580: }
  2400                           
  2401                           ;main.c: 579: break;
  2402  000DBC  0012               	return	
  2403  000DBE                     l3717:
  2404  000DBE  5034               	movf	_o_mux,w,c
  2405                           
  2406                           ; Switch size 1, requested type "space"
  2407                           ; Number of cases is 5, Range of values is 1 to 5
  2408                           ; switch strategies available:
  2409                           ; Name         Instructions Cycles
  2410                           ; simple_byte           16     9 (average)
  2411                           ;	Chosen strategy is simple_byte
  2412  000DC0  0A01               	xorlw	1	; case 1
  2413  000DC2  B4D8               	btfsc	status,2,c
  2414  000DC4  D7A6               	goto	l3665
  2415  000DC6  0A03               	xorlw	3	; case 2
  2416  000DC8  B4D8               	btfsc	status,2,c
  2417  000DCA  D7AB               	goto	l3673
  2418  000DCC  0A01               	xorlw	1	; case 3
  2419  000DCE  B4D8               	btfsc	status,2,c
  2420  000DD0  D7B1               	goto	l3681
  2421  000DD2  0A07               	xorlw	7	; case 4
  2422  000DD4  B4D8               	btfsc	status,2,c
  2423  000DD6  D7B8               	goto	l3687
  2424  000DD8  0A01               	xorlw	1	; case 5
  2425  000DDA  B4D8               	btfsc	status,2,c
  2426  000DDC  D7BF               	goto	l3693
  2427  000DDE  D7EC               	goto	l3713
  2428  000DE0  0012               	return	
  2429  000DE2  0012               	return		;funcret
  2430  000DE4                     __end_of_MostrarJ:
  2431                           	opt stack 0
  2432                           tblptru	equ	0xFF8
  2433                           tblptrh	equ	0xFF7
  2434                           tblptrl	equ	0xFF6
  2435                           tablat	equ	0xFF5
  2436                           prodh	equ	0xFF4
  2437                           prodl	equ	0xFF3
  2438                           intcon	equ	0xFF2
  2439                           postinc0	equ	0xFEE
  2440                           wreg	equ	0xFE8
  2441                           indf2	equ	0xFDF
  2442                           postinc2	equ	0xFDE
  2443                           fsr2h	equ	0xFDA
  2444                           fsr2l	equ	0xFD9
  2445                           status	equ	0xFD8
  2446                           
  2447 ;; *************** function _Mostrar *****************
  2448 ;; Defined at:
  2449 ;;		line 431 in file "main.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;		None
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;		None
  2454 ;; Return value:  Size  Location     Type
  2455 ;;		None               void
  2456 ;; Registers used:
  2457 ;;		wreg, status,2, status,0, cstack
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2467 ;;Total ram usage:        0 bytes
  2468 ;; Hardware stack levels used:    1
  2469 ;; Hardware stack levels required when called:    4
  2470 ;; This function calls:
  2471 ;;		_Armar
  2472 ;;		_Tabla
  2473 ;;		_Tabla0
  2474 ;; This function is called by:
  2475 ;;		_main
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           	psect	text8
  2480  000ABE                     __ptext8:
  2481                           	opt stack 0
  2482  000ABE                     _Mostrar:
  2483                           	opt stack 26
  2484                           
  2485                           ;main.c: 433: if(F_1ms == 1)
  2486                           
  2487                           ;incstack = 0
  2488  000ABE  041F               	decf	_F_1ms,w,c
  2489  000AC0  A4D8               	btfss	status,2,c
  2490  000AC2  0012               	return	
  2491                           
  2492                           ;main.c: 434: {
  2493                           ;main.c: 435: Armar();
  2494  000AC4  EC97  F000         	call	_Armar	;wreg free
  2495                           
  2496                           ;main.c: 436: F_1ms = 0;
  2497  000AC8  0E00               	movlw	0
  2498  000ACA  6E1F               	movwf	_F_1ms,c
  2499                           
  2500                           ;main.c: 437: t_mux++;
  2501  000ACC  2A3C               	incf	_t_mux,f,c
  2502                           
  2503                           ;main.c: 438: if(t_mux == 4)
  2504  000ACE  0E04               	movlw	4
  2505  000AD0  183C               	xorwf	_t_mux,w,c
  2506  000AD2  A4D8               	btfss	status,2,c
  2507  000AD4  0012               	return	
  2508                           
  2509                           ;main.c: 439: {
  2510                           ;main.c: 440: t_mux = 0;
  2511  000AD6  0E00               	movlw	0
  2512  000AD8  6E3C               	movwf	_t_mux,c
  2513                           
  2514                           ;main.c: 442: switch (o_mux)
  2515  000ADA  D07A               	goto	l3569
  2516  000ADC                     l3519:
  2517                           
  2518                           ;main.c: 445: o_mux = 2;
  2519  000ADC  0E02               	movlw	2
  2520  000ADE  6E34               	movwf	_o_mux,c
  2521                           
  2522                           ;main.c: 446: LATCbits.LATC4 = 0;
  2523  000AE0  988B               	bcf	3979,4,c	;volatile
  2524                           
  2525                           ;main.c: 447: Tabla(Disp_U);
  2526  000AE2  500D               	movf	_Disp_U,w,c
  2527  000AE4  ECF2  F006         	call	_Tabla
  2528                           
  2529                           ;main.c: 448: LATAbits.LATA7 = 1;
  2530  000AE8  8E89               	bsf	3977,7,c	;volatile
  2531                           
  2532                           ;main.c: 449: break;
  2533  000AEA  0012               	return	
  2534  000AEC                     l3527:
  2535                           
  2536                           ;main.c: 452: o_mux = 3;
  2537  000AEC  0E03               	movlw	3
  2538  000AEE  6E34               	movwf	_o_mux,c
  2539                           
  2540                           ;main.c: 453: LATAbits.LATA7 = 0;
  2541  000AF0  9E89               	bcf	3977,7,c	;volatile
  2542                           
  2543                           ;main.c: 454: if((Disp_D == 0)&(Disp_C == 0)&(Disp_M == 0))
  2544  000AF2  5008               	movf	_Disp_D,w,c
  2545  000AF4  A4D8               	btfss	status,2,c
  2546  000AF6  D009               	goto	l3537
  2547  000AF8  5007               	movf	_Disp_C,w,c
  2548  000AFA  A4D8               	btfss	status,2,c
  2549  000AFC  D006               	goto	l3537
  2550  000AFE  500A               	movf	_Disp_M,w,c
  2551  000B00  A4D8               	btfss	status,2,c
  2552  000B02  D003               	goto	l3537
  2553                           
  2554                           ;main.c: 455: {
  2555                           ;main.c: 456: Tabla0();
  2556  000B04  ECEC  F008         	call	_Tabla0	;wreg free
  2557                           
  2558                           ;main.c: 457: }
  2559  000B08  D004               	goto	l3539
  2560  000B0A                     l3537:
  2561                           
  2562                           ;main.c: 458: else
  2563                           ;main.c: 459: {
  2564                           ;main.c: 460: Tabla(Disp_D);
  2565  000B0A  5008               	movf	_Disp_D,w,c
  2566  000B0C  ECF2  F006         	call	_Tabla
  2567  000B10  D000               	goto	l3539
  2568  000B12                     l3539:
  2569                           
  2570                           ;main.c: 461: }
  2571                           ;main.c: 462: PORTE = 0b00000100;
  2572  000B12  0E04               	movlw	4
  2573  000B14  6E84               	movwf	3972,c	;volatile
  2574                           
  2575                           ;main.c: 463: break;
  2576  000B16  0012               	return	
  2577  000B18                     l3541:
  2578                           
  2579                           ;main.c: 466: o_mux = 4;
  2580  000B18  0E04               	movlw	4
  2581  000B1A  6E34               	movwf	_o_mux,c
  2582                           
  2583                           ;main.c: 467: PORTE = 0b00000000;
  2584  000B1C  0E00               	movlw	0
  2585  000B1E  6E84               	movwf	3972,c	;volatile
  2586                           
  2587                           ;main.c: 468: if((Disp_C == 0)&(Disp_M == 0))
  2588  000B20  5007               	movf	_Disp_C,w,c
  2589  000B22  A4D8               	btfss	status,2,c
  2590  000B24  D006               	goto	l3547
  2591  000B26  500A               	movf	_Disp_M,w,c
  2592  000B28  A4D8               	btfss	status,2,c
  2593  000B2A  D003               	goto	l3547
  2594                           
  2595                           ;main.c: 469: {
  2596                           ;main.c: 470: Tabla0();
  2597  000B2C  ECEC  F008         	call	_Tabla0	;wreg free
  2598                           
  2599                           ;main.c: 471: }
  2600  000B30  D004               	goto	l3549
  2601  000B32                     l3547:
  2602                           
  2603                           ;main.c: 472: else
  2604                           ;main.c: 473: {
  2605                           ;main.c: 474: Tabla(Disp_C);
  2606  000B32  5007               	movf	_Disp_C,w,c
  2607  000B34  ECF2  F006         	call	_Tabla
  2608  000B38  D000               	goto	l3549
  2609  000B3A                     l3549:
  2610                           
  2611                           ;main.c: 475: }
  2612                           ;main.c: 476: PORTE = 0b00000010;
  2613  000B3A  0E02               	movlw	2
  2614  000B3C  6E84               	movwf	3972,c	;volatile
  2615                           
  2616                           ;main.c: 477: break;
  2617  000B3E  0012               	return	
  2618  000B40                     l3551:
  2619                           
  2620                           ;main.c: 480: o_mux = 5;
  2621  000B40  0E05               	movlw	5
  2622  000B42  6E34               	movwf	_o_mux,c
  2623                           
  2624                           ;main.c: 481: PORTE = 0b00000000;
  2625  000B44  0E00               	movlw	0
  2626  000B46  6E84               	movwf	3972,c	;volatile
  2627                           
  2628                           ;main.c: 482: if(Disp_M == 0)
  2629  000B48  500A               	movf	_Disp_M,w,c
  2630  000B4A  A4D8               	btfss	status,2,c
  2631  000B4C  D003               	goto	l3555
  2632                           
  2633                           ;main.c: 483: {
  2634                           ;main.c: 484: Tabla0();
  2635  000B4E  ECEC  F008         	call	_Tabla0	;wreg free
  2636                           
  2637                           ;main.c: 485: }
  2638  000B52  D004               	goto	l3557
  2639  000B54                     l3555:
  2640                           
  2641                           ;main.c: 486: else
  2642                           ;main.c: 487: {
  2643                           ;main.c: 488: Tabla(Disp_M);
  2644  000B54  500A               	movf	_Disp_M,w,c
  2645  000B56  ECF2  F006         	call	_Tabla
  2646  000B5A  D000               	goto	l3557
  2647  000B5C                     l3557:
  2648                           
  2649                           ;main.c: 489: }
  2650                           ;main.c: 490: PORTE = 0b00000001;
  2651  000B5C  0E01               	movlw	1
  2652  000B5E  6E84               	movwf	3972,c	;volatile
  2653                           
  2654                           ;main.c: 491: break;
  2655  000B60  0012               	return	
  2656  000B62                     l3559:
  2657                           
  2658                           ;main.c: 494: o_mux = 1;
  2659  000B62  0E01               	movlw	1
  2660  000B64  6E34               	movwf	_o_mux,c
  2661                           
  2662                           ;main.c: 495: PORTE = 0b00000000;
  2663  000B66  0E00               	movlw	0
  2664  000B68  6E84               	movwf	3972,c	;volatile
  2665                           
  2666                           ;main.c: 496: if(Disp_ModoL == 1)
  2667  000B6A  040C               	decf	_Disp_ModoL,w,c
  2668  000B6C  A4D8               	btfss	status,2,c
  2669  000B6E  D003               	goto	l450
  2670                           
  2671                           ;main.c: 497: {
  2672                           ;main.c: 498: PORTB = Disp_Leds;
  2673  000B70  C009  FF81         	movff	_Disp_Leds,3969	;volatile
  2674                           
  2675                           ;main.c: 499: }
  2676  000B74  D028               	goto	l451
  2677  000B76                     l450:
  2678                           
  2679                           ;main.c: 500: else
  2680                           ;main.c: 501: {
  2681                           ;main.c: 502: LATBbits.LATB0 = Led_RB0;
  2682  000B76  B022               	btfsc	_Led_RB0,0,c
  2683  000B78  D002               	bra	u3075
  2684  000B7A  908A               	bcf	3978,0,c	;volatile
  2685  000B7C  D001               	bra	u3076
  2686  000B7E                     u3075:
  2687  000B7E  808A               	bsf	3978,0,c	;volatile
  2688  000B80                     u3076:
  2689                           
  2690                           ;main.c: 503: LATBbits.LATB1 = Led_RB1;
  2691  000B80  B023               	btfsc	_Led_RB1,0,c
  2692  000B82  D002               	bra	u3085
  2693  000B84  928A               	bcf	3978,1,c	;volatile
  2694  000B86  D001               	bra	u3086
  2695  000B88                     u3085:
  2696  000B88  828A               	bsf	3978,1,c	;volatile
  2697  000B8A                     u3086:
  2698                           
  2699                           ;main.c: 504: LATBbits.LATB2 = Led_RB2;
  2700  000B8A  B024               	btfsc	_Led_RB2,0,c
  2701  000B8C  D002               	bra	u3095
  2702  000B8E  948A               	bcf	3978,2,c	;volatile
  2703  000B90  D001               	bra	u3096
  2704  000B92                     u3095:
  2705  000B92  848A               	bsf	3978,2,c	;volatile
  2706  000B94                     u3096:
  2707                           
  2708                           ;main.c: 505: LATBbits.LATB3 = Led_RB3;
  2709  000B94  B025               	btfsc	_Led_RB3,0,c
  2710  000B96  D002               	bra	u3105
  2711  000B98  968A               	bcf	3978,3,c	;volatile
  2712  000B9A  D001               	bra	u3106
  2713  000B9C                     u3105:
  2714  000B9C  868A               	bsf	3978,3,c	;volatile
  2715  000B9E                     u3106:
  2716                           
  2717                           ;main.c: 506: LATBbits.LATB4 = Led_RB4;
  2718  000B9E  B026               	btfsc	_Led_RB4,0,c
  2719  000BA0  D002               	bra	u3115
  2720  000BA2  988A               	bcf	3978,4,c	;volatile
  2721  000BA4  D001               	bra	u3116
  2722  000BA6                     u3115:
  2723  000BA6  888A               	bsf	3978,4,c	;volatile
  2724  000BA8                     u3116:
  2725                           
  2726                           ;main.c: 507: LATBbits.LATB5 = Led_RB5;
  2727  000BA8  B027               	btfsc	_Led_RB5,0,c
  2728  000BAA  D002               	bra	u3125
  2729  000BAC  9A8A               	bcf	3978,5,c	;volatile
  2730  000BAE  D001               	bra	u3126
  2731  000BB0                     u3125:
  2732  000BB0  8A8A               	bsf	3978,5,c	;volatile
  2733  000BB2                     u3126:
  2734                           
  2735                           ;main.c: 508: LATBbits.LATB6 = Led_RB6;
  2736  000BB2  B028               	btfsc	_Led_RB6,0,c
  2737  000BB4  D002               	bra	u3135
  2738  000BB6  9C8A               	bcf	3978,6,c	;volatile
  2739  000BB8  D001               	bra	u3136
  2740  000BBA                     u3135:
  2741  000BBA  8C8A               	bsf	3978,6,c	;volatile
  2742  000BBC                     u3136:
  2743                           
  2744                           ;main.c: 509: LATBbits.LATB7 = Led_RB7;
  2745  000BBC  B029               	btfsc	_Led_RB7,0,c
  2746  000BBE  D002               	bra	u3145
  2747  000BC0  9E8A               	bcf	3978,7,c	;volatile
  2748  000BC2  D001               	bra	u3146
  2749  000BC4                     u3145:
  2750  000BC4  8E8A               	bsf	3978,7,c	;volatile
  2751  000BC6                     u3146:
  2752  000BC6                     l451:
  2753                           
  2754                           ;main.c: 510: }
  2755                           ;main.c: 511: LATCbits.LATC4 = 1;
  2756  000BC6  888B               	bsf	3979,4,c	;volatile
  2757                           
  2758                           ;main.c: 512: break;
  2759  000BC8  0012               	return	
  2760  000BCA                     l3565:
  2761                           
  2762                           ;main.c: 515: o_mux = 1;
  2763  000BCA  0E01               	movlw	1
  2764  000BCC  6E34               	movwf	_o_mux,c
  2765                           
  2766                           ;main.c: 517: }
  2767                           
  2768                           ;main.c: 516: break;
  2769  000BCE  0012               	return	
  2770  000BD0                     l3569:
  2771  000BD0  5034               	movf	_o_mux,w,c
  2772                           
  2773                           ; Switch size 1, requested type "space"
  2774                           ; Number of cases is 5, Range of values is 1 to 5
  2775                           ; switch strategies available:
  2776                           ; Name         Instructions Cycles
  2777                           ; simple_byte           16     9 (average)
  2778                           ;	Chosen strategy is simple_byte
  2779  000BD2  0A01               	xorlw	1	; case 1
  2780  000BD4  B4D8               	btfsc	status,2,c
  2781  000BD6  D782               	goto	l3519
  2782  000BD8  0A03               	xorlw	3	; case 2
  2783  000BDA  B4D8               	btfsc	status,2,c
  2784  000BDC  D787               	goto	l3527
  2785  000BDE  0A01               	xorlw	1	; case 3
  2786  000BE0  B4D8               	btfsc	status,2,c
  2787  000BE2  D79A               	goto	l3541
  2788  000BE4  0A07               	xorlw	7	; case 4
  2789  000BE6  B4D8               	btfsc	status,2,c
  2790  000BE8  D7AB               	goto	l3551
  2791  000BEA  0A01               	xorlw	1	; case 5
  2792  000BEC  B4D8               	btfsc	status,2,c
  2793  000BEE  D7B9               	goto	l3559
  2794  000BF0  D7EC               	goto	l3565
  2795  000BF2  0012               	return	
  2796  000BF4  0012               	return		;funcret
  2797  000BF6                     __end_of_Mostrar:
  2798                           	opt stack 0
  2799                           tblptru	equ	0xFF8
  2800                           tblptrh	equ	0xFF7
  2801                           tblptrl	equ	0xFF6
  2802                           tablat	equ	0xFF5
  2803                           prodh	equ	0xFF4
  2804                           prodl	equ	0xFF3
  2805                           intcon	equ	0xFF2
  2806                           postinc0	equ	0xFEE
  2807                           wreg	equ	0xFE8
  2808                           indf2	equ	0xFDF
  2809                           postinc2	equ	0xFDE
  2810                           fsr2h	equ	0xFDA
  2811                           fsr2l	equ	0xFD9
  2812                           status	equ	0xFD8
  2813                           
  2814 ;; *************** function _Tabla0 *****************
  2815 ;; Defined at:
  2816 ;;		line 419 in file "main.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;		None
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;		None
  2821 ;; Return value:  Size  Location     Type
  2822 ;;		None               void
  2823 ;; Registers used:
  2824 ;;		wreg, status,2, status,0
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2832 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;Total ram usage:        2 bytes
  2835 ;; Hardware stack levels used:    1
  2836 ;; Hardware stack levels required when called:    2
  2837 ;; This function calls:
  2838 ;;		Nothing
  2839 ;; This function is called by:
  2840 ;;		_Mostrar
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844                           	psect	text9
  2845  0011D8                     __ptext9:
  2846                           	opt stack 0
  2847  0011D8                     _Tabla0:
  2848                           	opt stack 27
  2849                           
  2850                           ;main.c: 421: switch((Disp_Modo)&0x0F)
  2851                           
  2852                           ;incstack = 0
  2853  0011D8  D00F               	goto	l3421
  2854  0011DA                     l3409:
  2855  0011DA  0E01               	movlw	1
  2856  0011DC  6E81               	movwf	3969,c	;volatile
  2857  0011DE  0012               	return	
  2858  0011E0                     l3411:
  2859  0011E0  0E02               	movlw	2
  2860  0011E2  6E81               	movwf	3969,c	;volatile
  2861  0011E4  0012               	return	
  2862  0011E6                     l3413:
  2863  0011E6  0E20               	movlw	32
  2864  0011E8  6E81               	movwf	3969,c	;volatile
  2865  0011EA  0012               	return	
  2866  0011EC                     l3415:
  2867  0011EC  0E10               	movlw	16
  2868  0011EE  6E81               	movwf	3969,c	;volatile
  2869  0011F0  0012               	return	
  2870  0011F2                     l3417:
  2871  0011F2  0E00               	movlw	0
  2872  0011F4  6E81               	movwf	3969,c	;volatile
  2873                           
  2874                           ;main.c: 428: }
  2875  0011F6  0012               	return	
  2876  0011F8                     l3421:
  2877  0011F8  500B               	movf	_Disp_Modo,w,c
  2878  0011FA  0B0F               	andlw	15
  2879  0011FC  0100               	movlb	0	; () banked
  2880  0011FE  6FC8               	movwf	??_Tabla0& (0+255),b
  2881  001200  6BC9               	clrf	(??_Tabla0+1)& (0+255),b
  2882                           
  2883                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2884                           ; Switch size 1, requested type "space"
  2885                           ; Number of cases is 1, Range of values is 0 to 0
  2886                           ; switch strategies available:
  2887                           ; Name         Instructions Cycles
  2888                           ; simple_byte            4     3 (average)
  2889                           ;	Chosen strategy is simple_byte
  2890  001202  0100               	movlb	0	; () banked
  2891  001204  51C9               	movf	(??_Tabla0+1)& (0+255),w,b
  2892  001206  0A00               	xorlw	0	; case 0
  2893  001208  A4D8               	btfss	status,2,c
  2894  00120A  D7F3               	goto	l3417
  2895                           
  2896                           ; BSR set to: 0
  2897                           ; Switch size 1, requested type "space"
  2898                           ; Number of cases is 4, Range of values is 1 to 4
  2899                           ; switch strategies available:
  2900                           ; Name         Instructions Cycles
  2901                           ; simple_byte           13     7 (average)
  2902                           ;	Chosen strategy is simple_byte
  2903  00120C  0100               	movlb	0	; () banked
  2904  00120E  51C8               	movf	??_Tabla0& (0+255),w,b
  2905  001210  0A01               	xorlw	1	; case 1
  2906  001212  B4D8               	btfsc	status,2,c
  2907  001214  D7E2               	goto	l3409
  2908  001216  0A03               	xorlw	3	; case 2
  2909  001218  B4D8               	btfsc	status,2,c
  2910  00121A  D7E2               	goto	l3411
  2911  00121C  0A01               	xorlw	1	; case 3
  2912  00121E  B4D8               	btfsc	status,2,c
  2913  001220  D7E2               	goto	l3413
  2914  001222  0A07               	xorlw	7	; case 4
  2915  001224  B4D8               	btfsc	status,2,c
  2916  001226  D7E2               	goto	l3415
  2917  001228  D7E4               	goto	l3417
  2918                           
  2919                           ; BSR set to: 0
  2920  00122A  0012               	return		;funcret
  2921  00122C                     __end_of_Tabla0:
  2922                           	opt stack 0
  2923                           tblptru	equ	0xFF8
  2924                           tblptrh	equ	0xFF7
  2925                           tblptrl	equ	0xFF6
  2926                           tablat	equ	0xFF5
  2927                           prodh	equ	0xFF4
  2928                           prodl	equ	0xFF3
  2929                           intcon	equ	0xFF2
  2930                           postinc0	equ	0xFEE
  2931                           wreg	equ	0xFE8
  2932                           indf2	equ	0xFDF
  2933                           postinc2	equ	0xFDE
  2934                           fsr2h	equ	0xFDA
  2935                           fsr2l	equ	0xFD9
  2936                           status	equ	0xFD8
  2937                           
  2938 ;; *************** function _Armar *****************
  2939 ;; Defined at:
  2940 ;;		line 587 in file "main.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;		None
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;  Aux             2   11[BANK0 ] unsigned int 
  2945 ;; Return value:  Size  Location     Type
  2946 ;;		None               void
  2947 ;; Registers used:
  2948 ;;		wreg, status,2, status,0, cstack
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2955 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2956 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2957 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2958 ;;Total ram usage:        5 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; Hardware stack levels required when called:    3
  2961 ;; This function calls:
  2962 ;;		___awdiv
  2963 ;;		___awmod
  2964 ;;		___lwdiv
  2965 ;;		___lwmod
  2966 ;; This function is called by:
  2967 ;;		_Mostrar
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           	psect	text10
  2972  00012E                     __ptext10:
  2973                           	opt stack 0
  2974  00012E                     _Armar:
  2975                           	opt stack 26
  2976                           
  2977                           ;main.c: 589: uint16_t Aux;
  2978                           ;main.c: 591: switch(Disp_Var)
  2979                           
  2980                           ;incstack = 0
  2981  00012E  D15C               	goto	l3477
  2982  000130                     l3429:
  2983                           
  2984                           ;main.c: 594: {
  2985                           ;main.c: 595: if((Disp_Modo&0xF0) == 0)
  2986  000130  C00B  F0D0         	movff	_Disp_Modo,??_Armar
  2987  000134  0EF0               	movlw	240
  2988  000136  0100               	movlb	0	; () banked
  2989  000138  17D0               	andwf	??_Armar& (0+255),f,b
  2990  00013A  A4D8               	btfss	status,2,c
  2991  00013C  D049               	goto	l3443
  2992                           
  2993                           ; BSR set to: 0
  2994                           ;main.c: 596: {
  2995                           ;main.c: 597: if(Disp_Var_2H > 99)
  2996  00013E  0E63               	movlw	99
  2997  000140  640F               	cpfsgt	_Disp_Var_2H,c
  2998  000142  D004               	goto	l3435
  2999                           
  3000                           ; BSR set to: 0
  3001                           ;main.c: 598: {
  3002                           ;main.c: 599: Disp_M=0;
  3003  000144  0E00               	movlw	0
  3004  000146  6E0A               	movwf	_Disp_M,c
  3005                           
  3006                           ;main.c: 600: Disp_C=0;
  3007  000148  0E00               	movlw	0
  3008  00014A  D01B               	goto	L1
  3009  00014C                     l3435:
  3010                           
  3011                           ; BSR set to: 0
  3012                           ;main.c: 602: else
  3013                           ;main.c: 603: {
  3014                           ;main.c: 604: Disp_M=Disp_Var_2H/10;
  3015  00014C  C00F  F0C8         	movff	_Disp_Var_2H,___awdiv@dividend
  3016  000150  0100               	movlb	0	; () banked
  3017  000152  6BC9               	clrf	(___awdiv@dividend+1)& (0+255),b
  3018  000154  0E00               	movlw	0
  3019  000156  0100               	movlb	0	; () banked
  3020  000158  6FCB               	movwf	(___awdiv@divisor+1)& (0+255),b
  3021  00015A  0E0A               	movlw	10
  3022  00015C  6FCA               	movwf	___awdiv@divisor& (0+255),b
  3023  00015E  EC62  F007         	call	___awdiv	;wreg free
  3024  000162  0100               	movlb	0	; () banked
  3025  000164  51C8               	movf	?___awdiv& (0+255),w,b
  3026  000166  6E0A               	movwf	_Disp_M,c
  3027                           
  3028                           ;main.c: 605: Disp_C=Disp_Var_2H%10;
  3029  000168  C00F  F0C8         	movff	_Disp_Var_2H,___awmod@dividend
  3030  00016C  0100               	movlb	0	; () banked
  3031  00016E  6BC9               	clrf	(___awmod@dividend+1)& (0+255),b
  3032  000170  0E00               	movlw	0
  3033  000172  0100               	movlb	0	; () banked
  3034  000174  6FCB               	movwf	(___awmod@divisor+1)& (0+255),b
  3035  000176  0E0A               	movlw	10
  3036  000178  6FCA               	movwf	___awmod@divisor& (0+255),b
  3037  00017A  ECCA  F007         	call	___awmod	;wreg free
  3038  00017E  0100               	movlb	0	; () banked
  3039  000180  51C8               	movf	?___awmod& (0+255),w,b
  3040  000182                     L1:
  3041  000182  6E07               	movwf	_Disp_C,c
  3042  000184  D000               	goto	l3437
  3043  000186                     l3437:
  3044                           
  3045                           ; BSR set to: 0
  3046                           ;main.c: 606: }
  3047                           ;main.c: 608: if(Disp_Var_2L > 99)
  3048  000186  0E63               	movlw	99
  3049  000188  6410               	cpfsgt	_Disp_Var_2L,c
  3050  00018A  D005               	goto	l3441
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;main.c: 609: {
  3054                           ;main.c: 610: Disp_D=0;
  3055  00018C  0E00               	movlw	0
  3056  00018E  6E08               	movwf	_Disp_D,c
  3057                           
  3058                           ;main.c: 611: Disp_U=0;
  3059  000190  0E00               	movlw	0
  3060  000192  6E0D               	movwf	_Disp_U,c
  3061                           
  3062                           ;main.c: 612: }
  3063  000194  0012               	return	
  3064  000196                     l3441:
  3065                           
  3066                           ; BSR set to: 0
  3067                           ;main.c: 613: else
  3068                           ;main.c: 614: {
  3069                           ;main.c: 615: Disp_D=Disp_Var_2L/10;
  3070  000196  C010  F0C8         	movff	_Disp_Var_2L,___awdiv@dividend
  3071  00019A  0100               	movlb	0	; () banked
  3072  00019C  6BC9               	clrf	(___awdiv@dividend+1)& (0+255),b
  3073  00019E  0E00               	movlw	0
  3074  0001A0  0100               	movlb	0	; () banked
  3075  0001A2  6FCB               	movwf	(___awdiv@divisor+1)& (0+255),b
  3076  0001A4  0E0A               	movlw	10
  3077  0001A6  6FCA               	movwf	___awdiv@divisor& (0+255),b
  3078  0001A8  EC62  F007         	call	___awdiv	;wreg free
  3079  0001AC  0100               	movlb	0	; () banked
  3080  0001AE  51C8               	movf	?___awdiv& (0+255),w,b
  3081  0001B0  6E08               	movwf	_Disp_D,c
  3082                           
  3083                           ;main.c: 616: Disp_U=Disp_Var_2L%10;
  3084  0001B2  C010  F0C8         	movff	_Disp_Var_2L,___awmod@dividend
  3085  0001B6  0100               	movlb	0	; () banked
  3086  0001B8  6BC9               	clrf	(___awmod@dividend+1)& (0+255),b
  3087  0001BA  0E00               	movlw	0
  3088  0001BC  0100               	movlb	0	; () banked
  3089  0001BE  6FCB               	movwf	(___awmod@divisor+1)& (0+255),b
  3090  0001C0  0E0A               	movlw	10
  3091  0001C2  6FCA               	movwf	___awmod@divisor& (0+255),b
  3092  0001C4  ECCA  F007         	call	___awmod	;wreg free
  3093  0001C8  0100               	movlb	0	; () banked
  3094  0001CA  51C8               	movf	?___awmod& (0+255),w,b
  3095  0001CC  6E0D               	movwf	_Disp_U,c
  3096                           
  3097                           ; BSR set to: 0
  3098                           ;main.c: 617: }
  3099                           ;main.c: 618: }
  3100  0001CE  0012               	return	
  3101  0001D0                     l3443:
  3102                           
  3103                           ; BSR set to: 0
  3104                           ;main.c: 619: else
  3105                           ;main.c: 620: {
  3106                           ;main.c: 621: Disp_M = Disp_Var_2H & 0xF0;
  3107  0001D0  500F               	movf	_Disp_Var_2H,w,c
  3108  0001D2  0BF0               	andlw	240
  3109  0001D4  6E0A               	movwf	_Disp_M,c
  3110                           
  3111                           ;main.c: 622: Disp_M = Disp_M >> 4;
  3112  0001D6  380A               	swapf	_Disp_M,w,c
  3113  0001D8  0B0F               	andlw	15
  3114  0001DA  6E0A               	movwf	_Disp_M,c
  3115                           
  3116                           ;main.c: 623: Disp_C = Disp_Var_2H & 0x0F;
  3117  0001DC  500F               	movf	_Disp_Var_2H,w,c
  3118  0001DE  0B0F               	andlw	15
  3119  0001E0  6E07               	movwf	_Disp_C,c
  3120                           
  3121                           ;main.c: 625: Disp_D = Disp_Var_2L & 0xF0;
  3122  0001E2  5010               	movf	_Disp_Var_2L,w,c
  3123  0001E4  0BF0               	andlw	240
  3124  0001E6  6E08               	movwf	_Disp_D,c
  3125                           
  3126                           ;main.c: 626: Disp_D = Disp_D >> 4;
  3127  0001E8  3808               	swapf	_Disp_D,w,c
  3128  0001EA  0B0F               	andlw	15
  3129  0001EC  6E08               	movwf	_Disp_D,c
  3130                           
  3131                           ;main.c: 627: Disp_U = Disp_Var_2L & 0x0F;
  3132  0001EE  5010               	movf	_Disp_Var_2L,w,c
  3133  0001F0  0B0F               	andlw	15
  3134  0001F2  6E0D               	movwf	_Disp_U,c
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;main.c: 628: }
  3138                           ;main.c: 629: break;
  3139  0001F4  0012               	return	
  3140  0001F6                     l3445:
  3141                           
  3142                           ;main.c: 633: {
  3143                           ;main.c: 634: if((Disp_Modo&0xF0) == 0)
  3144  0001F6  C00B  F0D0         	movff	_Disp_Modo,??_Armar
  3145  0001FA  0EF0               	movlw	240
  3146  0001FC  0100               	movlb	0	; () banked
  3147  0001FE  17D0               	andwf	??_Armar& (0+255),f,b
  3148  000200  A4D8               	btfss	status,2,c
  3149  000202  D024               	goto	l479
  3150                           
  3151                           ; BSR set to: 0
  3152                           ;main.c: 635: {
  3153                           ;main.c: 636: if(Disp_Var_4M > 9)
  3154  000204  0E09               	movlw	9
  3155  000206  6413               	cpfsgt	_Disp_Var_4M,c
  3156  000208  D003               	goto	l480
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;main.c: 637: {
  3160                           ;main.c: 638: Disp_M=0;
  3161  00020A  0E00               	movlw	0
  3162  00020C  6E0A               	movwf	_Disp_M,c
  3163                           
  3164                           ;main.c: 639: }
  3165  00020E  D003               	goto	l3451
  3166  000210                     l480:
  3167                           
  3168                           ; BSR set to: 0
  3169                           ;main.c: 640: else
  3170                           ;main.c: 641: {
  3171                           ;main.c: 642: Disp_M=Disp_Var_4M;
  3172  000210  C013  F00A         	movff	_Disp_Var_4M,_Disp_M
  3173  000214  D000               	goto	l3451
  3174  000216                     l3451:
  3175                           
  3176                           ; BSR set to: 0
  3177                           ;main.c: 643: }
  3178                           ;main.c: 644: if(Disp_Var_4C > 9)
  3179  000216  0E09               	movlw	9
  3180  000218  6411               	cpfsgt	_Disp_Var_4C,c
  3181  00021A  D003               	goto	l482
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;main.c: 645: {
  3185                           ;main.c: 646: Disp_C=0;
  3186  00021C  0E00               	movlw	0
  3187  00021E  6E07               	movwf	_Disp_C,c
  3188                           
  3189                           ;main.c: 647: }
  3190  000220  D003               	goto	l3455
  3191  000222                     l482:
  3192                           
  3193                           ; BSR set to: 0
  3194                           ;main.c: 648: else
  3195                           ;main.c: 649: {
  3196                           ;main.c: 650: Disp_C=Disp_Var_4C;
  3197  000222  C011  F007         	movff	_Disp_Var_4C,_Disp_C
  3198  000226  D000               	goto	l3455
  3199  000228                     l3455:
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;main.c: 651: }
  3203                           ;main.c: 652: if(Disp_Var_4D > 9)
  3204  000228  0E09               	movlw	9
  3205  00022A  6412               	cpfsgt	_Disp_Var_4D,c
  3206  00022C  D003               	goto	l484
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;main.c: 653: {
  3210                           ;main.c: 654: Disp_D=0;
  3211  00022E  0E00               	movlw	0
  3212  000230  6E08               	movwf	_Disp_D,c
  3213                           
  3214                           ;main.c: 655: }
  3215  000232  D003               	goto	l3459
  3216  000234                     l484:
  3217                           
  3218                           ; BSR set to: 0
  3219                           ;main.c: 656: else
  3220                           ;main.c: 657: {
  3221                           ;main.c: 658: Disp_D=Disp_Var_4D;
  3222  000234  C012  F008         	movff	_Disp_Var_4D,_Disp_D
  3223  000238  D000               	goto	l3459
  3224  00023A                     l3459:
  3225                           
  3226                           ; BSR set to: 0
  3227                           ;main.c: 659: }
  3228                           ;main.c: 660: if(Disp_Var_4U > 9)
  3229  00023A  0E09               	movlw	9
  3230  00023C  6414               	cpfsgt	_Disp_Var_4U,c
  3231  00023E  D003               	goto	l486
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;main.c: 661: {
  3235                           ;main.c: 662: Disp_U=0;
  3236  000240  0E00               	movlw	0
  3237  000242  6E0D               	movwf	_Disp_U,c
  3238                           
  3239                           ;main.c: 663: }
  3240  000244  0012               	return	
  3241  000246                     l486:
  3242                           
  3243                           ; BSR set to: 0
  3244                           ;main.c: 664: else
  3245                           ;main.c: 665: {
  3246                           ;main.c: 666: Disp_U=Disp_Var_4U;
  3247  000246  C014  F00D         	movff	_Disp_Var_4U,_Disp_U
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;main.c: 667: }
  3251                           ;main.c: 668: }
  3252  00024A  0012               	return	
  3253  00024C                     l479:
  3254                           
  3255                           ; BSR set to: 0
  3256                           ;main.c: 669: else
  3257                           ;main.c: 670: {
  3258                           ;main.c: 671: Disp_M=Disp_Var_4M;
  3259  00024C  C013  F00A         	movff	_Disp_Var_4M,_Disp_M
  3260                           
  3261                           ;main.c: 672: Disp_C=Disp_Var_4C;
  3262  000250  C011  F007         	movff	_Disp_Var_4C,_Disp_C
  3263                           
  3264                           ;main.c: 673: Disp_D=Disp_Var_4D;
  3265  000254  C012  F008         	movff	_Disp_Var_4D,_Disp_D
  3266                           
  3267                           ;main.c: 674: Disp_U=Disp_Var_4U;
  3268  000258  C014  F00D         	movff	_Disp_Var_4U,_Disp_U
  3269                           
  3270                           ; BSR set to: 0
  3271                           ;main.c: 675: }
  3272                           ;main.c: 676: break;
  3273  00025C  0012               	return	
  3274  00025E                     l3463:
  3275                           
  3276                           ;main.c: 680: {
  3277                           ;main.c: 681: if((Disp_Modo&0xF0) == 0)
  3278  00025E  C00B  F0D0         	movff	_Disp_Modo,??_Armar
  3279  000262  0EF0               	movlw	240
  3280  000264  0100               	movlb	0	; () banked
  3281  000266  17D0               	andwf	??_Armar& (0+255),f,b
  3282  000268  A4D8               	btfss	status,2,c
  3283  00026A  D073               	goto	l490
  3284                           
  3285                           ; BSR set to: 0
  3286                           ;main.c: 682: {
  3287                           ;main.c: 683: if(Disp_Var_1<9999)
  3288  00026C  0E0F               	movlw	15
  3289  00026E  5C01               	subwf	_Disp_Var_1,w,c
  3290  000270  0E27               	movlw	39
  3291  000272  5802               	subwfb	_Disp_Var_1+1,w,c
  3292  000274  B0D8               	btfsc	status,0,c
  3293  000276  0012               	return	
  3294                           
  3295                           ; BSR set to: 0
  3296                           ;main.c: 684: {
  3297                           ;main.c: 685: Aux = Disp_Var_1;
  3298  000278  C001  F0D3         	movff	_Disp_Var_1,Armar@Aux
  3299  00027C  C002  F0D4         	movff	_Disp_Var_1+1,Armar@Aux+1
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;main.c: 686: Disp_U = Aux % 10;
  3303  000280  C0D3  F0C8         	movff	Armar@Aux,___lwmod@dividend
  3304  000284  C0D4  F0C9         	movff	Armar@Aux+1,___lwmod@dividend+1
  3305  000288  0E00               	movlw	0
  3306  00028A  0100               	movlb	0	; () banked
  3307  00028C  6FCB               	movwf	(___lwmod@divisor+1)& (0+255),b
  3308  00028E  0E0A               	movlw	10
  3309  000290  6FCA               	movwf	___lwmod@divisor& (0+255),b
  3310  000292  ECB6  F008         	call	___lwmod	;wreg free
  3311  000296  0100               	movlb	0	; () banked
  3312  000298  51C8               	movf	?___lwmod& (0+255),w,b
  3313  00029A  6E0D               	movwf	_Disp_U,c
  3314                           
  3315                           ;main.c: 687: Aux = Aux / 10;
  3316  00029C  C0D3  F0C8         	movff	Armar@Aux,___lwdiv@dividend
  3317  0002A0  C0D4  F0C9         	movff	Armar@Aux+1,___lwdiv@dividend+1
  3318  0002A4  0E00               	movlw	0
  3319  0002A6  0100               	movlb	0	; () banked
  3320  0002A8  6FCB               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3321  0002AA  0E0A               	movlw	10
  3322  0002AC  6FCA               	movwf	___lwdiv@divisor& (0+255),b
  3323  0002AE  EC75  F008         	call	___lwdiv	;wreg free
  3324  0002B2  C0C8  F0D3         	movff	?___lwdiv,Armar@Aux
  3325  0002B6  C0C9  F0D4         	movff	?___lwdiv+1,Armar@Aux+1
  3326                           
  3327                           ;main.c: 689: Disp_D = Aux % 10;
  3328  0002BA  C0D3  F0C8         	movff	Armar@Aux,___lwmod@dividend
  3329  0002BE  C0D4  F0C9         	movff	Armar@Aux+1,___lwmod@dividend+1
  3330  0002C2  0E00               	movlw	0
  3331  0002C4  0100               	movlb	0	; () banked
  3332  0002C6  6FCB               	movwf	(___lwmod@divisor+1)& (0+255),b
  3333  0002C8  0E0A               	movlw	10
  3334  0002CA  6FCA               	movwf	___lwmod@divisor& (0+255),b
  3335  0002CC  ECB6  F008         	call	___lwmod	;wreg free
  3336  0002D0  0100               	movlb	0	; () banked
  3337  0002D2  51C8               	movf	?___lwmod& (0+255),w,b
  3338  0002D4  6E08               	movwf	_Disp_D,c
  3339                           
  3340                           ;main.c: 690: Aux = Aux / 10;
  3341  0002D6  C0D3  F0C8         	movff	Armar@Aux,___lwdiv@dividend
  3342  0002DA  C0D4  F0C9         	movff	Armar@Aux+1,___lwdiv@dividend+1
  3343  0002DE  0E00               	movlw	0
  3344  0002E0  0100               	movlb	0	; () banked
  3345  0002E2  6FCB               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3346  0002E4  0E0A               	movlw	10
  3347  0002E6  6FCA               	movwf	___lwdiv@divisor& (0+255),b
  3348  0002E8  EC75  F008         	call	___lwdiv	;wreg free
  3349  0002EC  C0C8  F0D3         	movff	?___lwdiv,Armar@Aux
  3350  0002F0  C0C9  F0D4         	movff	?___lwdiv+1,Armar@Aux+1
  3351                           
  3352                           ;main.c: 692: Disp_C = Aux % 10;
  3353  0002F4  C0D3  F0C8         	movff	Armar@Aux,___lwmod@dividend
  3354  0002F8  C0D4  F0C9         	movff	Armar@Aux+1,___lwmod@dividend+1
  3355  0002FC  0E00               	movlw	0
  3356  0002FE  0100               	movlb	0	; () banked
  3357  000300  6FCB               	movwf	(___lwmod@divisor+1)& (0+255),b
  3358  000302  0E0A               	movlw	10
  3359  000304  6FCA               	movwf	___lwmod@divisor& (0+255),b
  3360  000306  ECB6  F008         	call	___lwmod	;wreg free
  3361  00030A  0100               	movlb	0	; () banked
  3362  00030C  51C8               	movf	?___lwmod& (0+255),w,b
  3363  00030E  6E07               	movwf	_Disp_C,c
  3364                           
  3365                           ;main.c: 693: Aux = Aux / 10;
  3366  000310  C0D3  F0C8         	movff	Armar@Aux,___lwdiv@dividend
  3367  000314  C0D4  F0C9         	movff	Armar@Aux+1,___lwdiv@dividend+1
  3368  000318  0E00               	movlw	0
  3369  00031A  0100               	movlb	0	; () banked
  3370  00031C  6FCB               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3371  00031E  0E0A               	movlw	10
  3372  000320  6FCA               	movwf	___lwdiv@divisor& (0+255),b
  3373  000322  EC75  F008         	call	___lwdiv	;wreg free
  3374  000326  C0C8  F0D3         	movff	?___lwdiv,Armar@Aux
  3375  00032A  C0C9  F0D4         	movff	?___lwdiv+1,Armar@Aux+1
  3376                           
  3377                           ;main.c: 695: Disp_M = Aux;
  3378  00032E  C0D3  F00A         	movff	Armar@Aux,_Disp_M
  3379                           
  3380                           ;main.c: 696: Aux = Aux / 10;
  3381  000332  C0D3  F0C8         	movff	Armar@Aux,___lwdiv@dividend
  3382  000336  C0D4  F0C9         	movff	Armar@Aux+1,___lwdiv@dividend+1
  3383  00033A  0E00               	movlw	0
  3384  00033C  0100               	movlb	0	; () banked
  3385  00033E  6FCB               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3386  000340  0E0A               	movlw	10
  3387  000342  6FCA               	movwf	___lwdiv@divisor& (0+255),b
  3388  000344  EC75  F008         	call	___lwdiv	;wreg free
  3389  000348  C0C8  F0D3         	movff	?___lwdiv,Armar@Aux
  3390  00034C  C0C9  F0D4         	movff	?___lwdiv+1,Armar@Aux+1
  3391                           
  3392                           ;main.c: 697: }
  3393                           ;main.c: 699: }
  3394  000350  0012               	return	
  3395  000352                     l490:
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;main.c: 700: else
  3399                           ;main.c: 701: {
  3400                           ;main.c: 702: Aux = Disp_Var_1;
  3401  000352  C001  F0D3         	movff	_Disp_Var_1,Armar@Aux
  3402  000356  C002  F0D4         	movff	_Disp_Var_1+1,Armar@Aux+1
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;main.c: 703: Disp_U = Aux & 0x000F;
  3406  00035A  0100               	movlb	0	; () banked
  3407  00035C  51D3               	movf	Armar@Aux& (0+255),w,b
  3408  00035E  0B0F               	andlw	15
  3409  000360  6E0D               	movwf	_Disp_U,c
  3410                           
  3411                           ;main.c: 704: Aux = Aux >> 4;
  3412  000362  C0D3  F0D0         	movff	Armar@Aux,??_Armar
  3413  000366  C0D4  F0D1         	movff	Armar@Aux+1,??_Armar+1
  3414  00036A  0E04               	movlw	4
  3415  00036C  0100               	movlb	0	; () banked
  3416  00036E  6FD2               	movwf	(??_Armar+2)& (0+255),b
  3417  000370                     u2925:
  3418  000370  0100               	movlb	0	; () banked
  3419  000372  90D8               	bcf	status,0,c
  3420  000374  33D1               	rrcf	(??_Armar+1)& (0+255),f,b
  3421  000376  33D0               	rrcf	??_Armar& (0+255),f,b
  3422  000378  0100               	movlb	0	; () banked
  3423  00037A  2FD2               	decfsz	(??_Armar+2)& (0+255),f,b
  3424  00037C  D7F9               	goto	u2925
  3425  00037E  C0D0  F0D3         	movff	??_Armar,Armar@Aux
  3426  000382  C0D1  F0D4         	movff	??_Armar+1,Armar@Aux+1
  3427                           
  3428                           ;main.c: 705: Disp_D = Aux & 0x000F;
  3429  000386  0100               	movlb	0	; () banked
  3430  000388  51D3               	movf	Armar@Aux& (0+255),w,b
  3431  00038A  0B0F               	andlw	15
  3432  00038C  6E08               	movwf	_Disp_D,c
  3433                           
  3434                           ;main.c: 706: Aux = Aux >> 4;
  3435  00038E  C0D3  F0D0         	movff	Armar@Aux,??_Armar
  3436  000392  C0D4  F0D1         	movff	Armar@Aux+1,??_Armar+1
  3437  000396  0E04               	movlw	4
  3438  000398  0100               	movlb	0	; () banked
  3439  00039A  6FD2               	movwf	(??_Armar+2)& (0+255),b
  3440  00039C                     u2935:
  3441  00039C  0100               	movlb	0	; () banked
  3442  00039E  90D8               	bcf	status,0,c
  3443  0003A0  33D1               	rrcf	(??_Armar+1)& (0+255),f,b
  3444  0003A2  33D0               	rrcf	??_Armar& (0+255),f,b
  3445  0003A4  0100               	movlb	0	; () banked
  3446  0003A6  2FD2               	decfsz	(??_Armar+2)& (0+255),f,b
  3447  0003A8  D7F9               	goto	u2935
  3448  0003AA  C0D0  F0D3         	movff	??_Armar,Armar@Aux
  3449  0003AE  C0D1  F0D4         	movff	??_Armar+1,Armar@Aux+1
  3450                           
  3451                           ;main.c: 707: Disp_C = Aux & 0x000F;
  3452  0003B2  0100               	movlb	0	; () banked
  3453  0003B4  51D3               	movf	Armar@Aux& (0+255),w,b
  3454  0003B6  0B0F               	andlw	15
  3455  0003B8  6E07               	movwf	_Disp_C,c
  3456                           
  3457                           ;main.c: 708: Aux = Aux >> 4;
  3458  0003BA  C0D3  F0D0         	movff	Armar@Aux,??_Armar
  3459  0003BE  C0D4  F0D1         	movff	Armar@Aux+1,??_Armar+1
  3460  0003C2  0E04               	movlw	4
  3461  0003C4  0100               	movlb	0	; () banked
  3462  0003C6  6FD2               	movwf	(??_Armar+2)& (0+255),b
  3463  0003C8                     u2945:
  3464  0003C8  0100               	movlb	0	; () banked
  3465  0003CA  90D8               	bcf	status,0,c
  3466  0003CC  33D1               	rrcf	(??_Armar+1)& (0+255),f,b
  3467  0003CE  33D0               	rrcf	??_Armar& (0+255),f,b
  3468  0003D0  0100               	movlb	0	; () banked
  3469  0003D2  2FD2               	decfsz	(??_Armar+2)& (0+255),f,b
  3470  0003D4  D7F9               	goto	u2945
  3471  0003D6  C0D0  F0D3         	movff	??_Armar,Armar@Aux
  3472  0003DA  C0D1  F0D4         	movff	??_Armar+1,Armar@Aux+1
  3473                           
  3474                           ;main.c: 709: Disp_M = Aux & 0x000F;
  3475  0003DE  0100               	movlb	0	; () banked
  3476  0003E0  51D3               	movf	Armar@Aux& (0+255),w,b
  3477  0003E2  0B0F               	andlw	15
  3478  0003E4  6E0A               	movwf	_Disp_M,c
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;main.c: 712: }
  3482                           ;main.c: 714: }
  3483                           
  3484                           ; BSR set to: 0
  3485                           ;main.c: 710: }
  3486                           ;main.c: 711: break;
  3487  0003E6  0012               	return	
  3488  0003E8                     l3477:
  3489  0003E8  500E               	movf	_Disp_Var,w,c
  3490                           
  3491                           ; Switch size 1, requested type "space"
  3492                           ; Number of cases is 2, Range of values is 1 to 2
  3493                           ; switch strategies available:
  3494                           ; Name         Instructions Cycles
  3495                           ; simple_byte            7     4 (average)
  3496                           ;	Chosen strategy is simple_byte
  3497  0003EA  0A01               	xorlw	1	; case 1
  3498  0003EC  B4D8               	btfsc	status,2,c
  3499  0003EE  D6A0               	goto	l3429
  3500  0003F0  0A03               	xorlw	3	; case 2
  3501  0003F2  B4D8               	btfsc	status,2,c
  3502  0003F4  D700               	goto	l3445
  3503  0003F6  D733               	goto	l3463
  3504  0003F8  0012               	return		;funcret
  3505  0003FA                     __end_of_Armar:
  3506                           	opt stack 0
  3507                           tblptru	equ	0xFF8
  3508                           tblptrh	equ	0xFF7
  3509                           tblptrl	equ	0xFF6
  3510                           tablat	equ	0xFF5
  3511                           prodh	equ	0xFF4
  3512                           prodl	equ	0xFF3
  3513                           intcon	equ	0xFF2
  3514                           postinc0	equ	0xFEE
  3515                           wreg	equ	0xFE8
  3516                           indf2	equ	0xFDF
  3517                           postinc2	equ	0xFDE
  3518                           fsr2h	equ	0xFDA
  3519                           fsr2l	equ	0xFD9
  3520                           status	equ	0xFD8
  3521                           
  3522 ;; *************** function ___lwmod *****************
  3523 ;; Defined at:
  3524 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;  dividend        2    0[BANK0 ] unsigned int 
  3527 ;;  divisor         2    2[BANK0 ] unsigned int 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  counter         1    4[BANK0 ] unsigned char 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  2    0[BANK0 ] unsigned int 
  3532 ;; Registers used:
  3533 ;;		wreg, status,2, status,0
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3539 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3540 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3542 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3543 ;;Total ram usage:        5 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; Hardware stack levels required when called:    2
  3546 ;; This function calls:
  3547 ;;		Nothing
  3548 ;; This function is called by:
  3549 ;;		_Armar
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           	psect	text11
  3554  00116C                     __ptext11:
  3555                           	opt stack 0
  3556  00116C                     ___lwmod:
  3557                           	opt stack 26
  3558                           
  3559                           ;incstack = 0
  3560  00116C  0100               	movlb	0	; () banked
  3561  00116E  51CA               	movf	___lwmod@divisor& (0+255),w,b
  3562  001170  0100               	movlb	0	; () banked
  3563  001172  11CB               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  3564  001174  B4D8               	btfsc	status,2,c
  3565  001176  D02B               	goto	l1186
  3566                           
  3567                           ; BSR set to: 0
  3568  001178  0E01               	movlw	1
  3569  00117A  0100               	movlb	0	; () banked
  3570  00117C  6FCC               	movwf	___lwmod@counter& (0+255),b
  3571  00117E  D007               	goto	l3247
  3572  001180                     l3245:
  3573                           
  3574                           ; BSR set to: 0
  3575  001180  0100               	movlb	0	; () banked
  3576  001182  90D8               	bcf	status,0,c
  3577  001184  37CA               	rlcf	___lwmod@divisor& (0+255),f,b
  3578  001186  37CB               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  3579  001188  0100               	movlb	0	; () banked
  3580  00118A  2BCC               	incf	___lwmod@counter& (0+255),f,b
  3581  00118C  D000               	goto	l3247
  3582  00118E                     l3247:
  3583                           
  3584                           ; BSR set to: 0
  3585  00118E  0100               	movlb	0	; () banked
  3586  001190  BFCB               	btfsc	(___lwmod@divisor+1)& (0+255),7,b
  3587  001192  D002               	goto	l3249
  3588  001194  D7F5               	goto	l3245
  3589                           
  3590                           ; BSR set to: 0
  3591  001196  D000               	goto	l3249
  3592  001198                     l3249:
  3593                           
  3594                           ; BSR set to: 0
  3595  001198  0100               	movlb	0	; () banked
  3596  00119A  51CA               	movf	___lwmod@divisor& (0+255),w,b
  3597  00119C  0100               	movlb	0	; () banked
  3598  00119E  5DC8               	subwf	___lwmod@dividend& (0+255),w,b
  3599  0011A0  0100               	movlb	0	; () banked
  3600  0011A2  51CB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3601  0011A4  0100               	movlb	0	; () banked
  3602  0011A6  59C9               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  3603  0011A8  A0D8               	btfss	status,0,c
  3604  0011AA  D009               	goto	l3253
  3605                           
  3606                           ; BSR set to: 0
  3607  0011AC  0100               	movlb	0	; () banked
  3608  0011AE  51CA               	movf	___lwmod@divisor& (0+255),w,b
  3609  0011B0  0100               	movlb	0	; () banked
  3610  0011B2  5FC8               	subwf	___lwmod@dividend& (0+255),f,b
  3611  0011B4  0100               	movlb	0	; () banked
  3612  0011B6  51CB               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3613  0011B8  0100               	movlb	0	; () banked
  3614  0011BA  5BC9               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  3615  0011BC  D000               	goto	l3253
  3616  0011BE                     l3253:
  3617                           
  3618                           ; BSR set to: 0
  3619  0011BE  0100               	movlb	0	; () banked
  3620  0011C0  90D8               	bcf	status,0,c
  3621  0011C2  33CB               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  3622  0011C4  33CA               	rrcf	___lwmod@divisor& (0+255),f,b
  3623                           
  3624                           ; BSR set to: 0
  3625  0011C6  0100               	movlb	0	; () banked
  3626  0011C8  2FCC               	decfsz	___lwmod@counter& (0+255),f,b
  3627  0011CA  D7E6               	goto	l3249
  3628  0011CC  D000               	goto	l1186
  3629  0011CE                     l1186:
  3630                           
  3631                           ; BSR set to: 0
  3632  0011CE  C0C8  F0C8         	movff	___lwmod@dividend,?___lwmod
  3633  0011D2  C0C9  F0C9         	movff	___lwmod@dividend+1,?___lwmod+1
  3634                           
  3635                           ; BSR set to: 0
  3636  0011D6  0012               	return		;funcret
  3637  0011D8                     __end_of___lwmod:
  3638                           	opt stack 0
  3639                           tblptru	equ	0xFF8
  3640                           tblptrh	equ	0xFF7
  3641                           tblptrl	equ	0xFF6
  3642                           tablat	equ	0xFF5
  3643                           prodh	equ	0xFF4
  3644                           prodl	equ	0xFF3
  3645                           intcon	equ	0xFF2
  3646                           postinc0	equ	0xFEE
  3647                           wreg	equ	0xFE8
  3648                           indf2	equ	0xFDF
  3649                           postinc2	equ	0xFDE
  3650                           fsr2h	equ	0xFDA
  3651                           fsr2l	equ	0xFD9
  3652                           status	equ	0xFD8
  3653                           
  3654 ;; *************** function ___lwdiv *****************
  3655 ;; Defined at:
  3656 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;  dividend        2    0[BANK0 ] unsigned int 
  3659 ;;  divisor         2    2[BANK0 ] unsigned int 
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;  quotient        2    5[BANK0 ] unsigned int 
  3662 ;;  counter         1    4[BANK0 ] unsigned char 
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  2    0[BANK0 ] unsigned int 
  3665 ;; Registers used:
  3666 ;;		wreg, status,2, status,0
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3672 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3673 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3675 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3676 ;;Total ram usage:        7 bytes
  3677 ;; Hardware stack levels used:    1
  3678 ;; Hardware stack levels required when called:    2
  3679 ;; This function calls:
  3680 ;;		Nothing
  3681 ;; This function is called by:
  3682 ;;		_Armar
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text12
  3687  0010EA                     __ptext12:
  3688                           	opt stack 0
  3689  0010EA                     ___lwdiv:
  3690                           	opt stack 26
  3691                           
  3692                           ; BSR set to: 0
  3693                           ;incstack = 0
  3694  0010EA  0E00               	movlw	0
  3695  0010EC  0100               	movlb	0	; () banked
  3696  0010EE  6FCE               	movwf	(___lwdiv@quotient+1)& (0+255),b
  3697  0010F0  0E00               	movlw	0
  3698  0010F2  6FCD               	movwf	___lwdiv@quotient& (0+255),b
  3699                           
  3700                           ; BSR set to: 0
  3701  0010F4  0100               	movlb	0	; () banked
  3702  0010F6  51CA               	movf	___lwdiv@divisor& (0+255),w,b
  3703  0010F8  0100               	movlb	0	; () banked
  3704  0010FA  11CB               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  3705  0010FC  B4D8               	btfsc	status,2,c
  3706  0010FE  D031               	goto	l1176
  3707                           
  3708                           ; BSR set to: 0
  3709  001100  0E01               	movlw	1
  3710  001102  0100               	movlb	0	; () banked
  3711  001104  6FCC               	movwf	___lwdiv@counter& (0+255),b
  3712  001106  D007               	goto	l3227
  3713  001108                     l3225:
  3714                           
  3715                           ; BSR set to: 0
  3716  001108  0100               	movlb	0	; () banked
  3717  00110A  90D8               	bcf	status,0,c
  3718  00110C  37CA               	rlcf	___lwdiv@divisor& (0+255),f,b
  3719  00110E  37CB               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  3720  001110  0100               	movlb	0	; () banked
  3721  001112  2BCC               	incf	___lwdiv@counter& (0+255),f,b
  3722  001114  D000               	goto	l3227
  3723  001116                     l3227:
  3724                           
  3725                           ; BSR set to: 0
  3726  001116  0100               	movlb	0	; () banked
  3727  001118  BFCB               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
  3728  00111A  D002               	goto	l3229
  3729  00111C  D7F5               	goto	l3225
  3730                           
  3731                           ; BSR set to: 0
  3732  00111E  D000               	goto	l3229
  3733  001120                     l3229:
  3734                           
  3735                           ; BSR set to: 0
  3736  001120  0100               	movlb	0	; () banked
  3737  001122  90D8               	bcf	status,0,c
  3738  001124  37CD               	rlcf	___lwdiv@quotient& (0+255),f,b
  3739  001126  37CE               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  3740                           
  3741                           ; BSR set to: 0
  3742  001128  0100               	movlb	0	; () banked
  3743  00112A  51CA               	movf	___lwdiv@divisor& (0+255),w,b
  3744  00112C  0100               	movlb	0	; () banked
  3745  00112E  5DC8               	subwf	___lwdiv@dividend& (0+255),w,b
  3746  001130  0100               	movlb	0	; () banked
  3747  001132  51CB               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3748  001134  0100               	movlb	0	; () banked
  3749  001136  59C9               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  3750  001138  A0D8               	btfss	status,0,c
  3751  00113A  D00B               	goto	l3237
  3752                           
  3753                           ; BSR set to: 0
  3754  00113C  0100               	movlb	0	; () banked
  3755  00113E  51CA               	movf	___lwdiv@divisor& (0+255),w,b
  3756  001140  0100               	movlb	0	; () banked
  3757  001142  5FC8               	subwf	___lwdiv@dividend& (0+255),f,b
  3758  001144  0100               	movlb	0	; () banked
  3759  001146  51CB               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3760  001148  0100               	movlb	0	; () banked
  3761  00114A  5BC9               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  3762                           
  3763                           ; BSR set to: 0
  3764  00114C  0100               	movlb	0	; () banked
  3765  00114E  81CD               	bsf	___lwdiv@quotient& (0+255),0,b
  3766  001150  D000               	goto	l3237
  3767  001152                     l3237:
  3768                           
  3769                           ; BSR set to: 0
  3770  001152  0100               	movlb	0	; () banked
  3771  001154  90D8               	bcf	status,0,c
  3772  001156  33CB               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  3773  001158  33CA               	rrcf	___lwdiv@divisor& (0+255),f,b
  3774                           
  3775                           ; BSR set to: 0
  3776  00115A  0100               	movlb	0	; () banked
  3777  00115C  2FCC               	decfsz	___lwdiv@counter& (0+255),f,b
  3778  00115E  D7E0               	goto	l3229
  3779  001160  D000               	goto	l1176
  3780  001162                     l1176:
  3781                           
  3782                           ; BSR set to: 0
  3783  001162  C0CD  F0C8         	movff	___lwdiv@quotient,?___lwdiv
  3784  001166  C0CE  F0C9         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3785                           
  3786                           ; BSR set to: 0
  3787  00116A  0012               	return		;funcret
  3788  00116C                     __end_of___lwdiv:
  3789                           	opt stack 0
  3790                           tblptru	equ	0xFF8
  3791                           tblptrh	equ	0xFF7
  3792                           tblptrl	equ	0xFF6
  3793                           tablat	equ	0xFF5
  3794                           prodh	equ	0xFF4
  3795                           prodl	equ	0xFF3
  3796                           intcon	equ	0xFF2
  3797                           postinc0	equ	0xFEE
  3798                           wreg	equ	0xFE8
  3799                           indf2	equ	0xFDF
  3800                           postinc2	equ	0xFDE
  3801                           fsr2h	equ	0xFDA
  3802                           fsr2l	equ	0xFD9
  3803                           status	equ	0xFD8
  3804                           
  3805 ;; *************** function ___awdiv *****************
  3806 ;; Defined at:
  3807 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;  dividend        2    0[BANK0 ] int 
  3810 ;;  divisor         2    2[BANK0 ] int 
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;  quotient        2    6[BANK0 ] int 
  3813 ;;  sign            1    5[BANK0 ] unsigned char 
  3814 ;;  counter         1    4[BANK0 ] unsigned char 
  3815 ;; Return value:  Size  Location     Type
  3816 ;;                  2    0[BANK0 ] int 
  3817 ;; Registers used:
  3818 ;;		wreg, status,2, status,0
  3819 ;; Tracked objects:
  3820 ;;		On entry : 0/0
  3821 ;;		On exit  : 0/0
  3822 ;;		Unchanged: 0/0
  3823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3824 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3825 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3827 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3828 ;;Total ram usage:        8 bytes
  3829 ;; Hardware stack levels used:    1
  3830 ;; Hardware stack levels required when called:    2
  3831 ;; This function calls:
  3832 ;;		Nothing
  3833 ;; This function is called by:
  3834 ;;		_Armar
  3835 ;; This function uses a non-reentrant model
  3836 ;;
  3837                           
  3838                           	psect	text13
  3839  000EC4                     __ptext13:
  3840                           	opt stack 0
  3841  000EC4                     ___awdiv:
  3842                           	opt stack 26
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;incstack = 0
  3846  000EC4  0E00               	movlw	0
  3847  000EC6  0100               	movlb	0	; () banked
  3848  000EC8  6FCD               	movwf	___awdiv@sign& (0+255),b
  3849                           
  3850                           ; BSR set to: 0
  3851  000ECA  0100               	movlb	0	; () banked
  3852  000ECC  AFCB               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3853  000ECE  D009               	goto	l3147
  3854                           
  3855                           ; BSR set to: 0
  3856  000ED0  0100               	movlb	0	; () banked
  3857  000ED2  6DCA               	negf	___awdiv@divisor& (0+255),b
  3858  000ED4  1FCB               	comf	(___awdiv@divisor+1)& (0+255),f,b
  3859  000ED6  B0D8               	btfsc	status,0,c
  3860  000ED8  2BCB               	incf	(___awdiv@divisor+1)& (0+255),f,b
  3861                           
  3862                           ; BSR set to: 0
  3863  000EDA  0E01               	movlw	1
  3864  000EDC  0100               	movlb	0	; () banked
  3865  000EDE  6FCD               	movwf	___awdiv@sign& (0+255),b
  3866  000EE0  D000               	goto	l3147
  3867  000EE2                     l3147:
  3868                           
  3869                           ; BSR set to: 0
  3870  000EE2  0100               	movlb	0	; () banked
  3871  000EE4  AFC9               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  3872  000EE6  D009               	goto	l3153
  3873                           
  3874                           ; BSR set to: 0
  3875  000EE8  0100               	movlb	0	; () banked
  3876  000EEA  6DC8               	negf	___awdiv@dividend& (0+255),b
  3877  000EEC  1FC9               	comf	(___awdiv@dividend+1)& (0+255),f,b
  3878  000EEE  B0D8               	btfsc	status,0,c
  3879  000EF0  2BC9               	incf	(___awdiv@dividend+1)& (0+255),f,b
  3880                           
  3881                           ; BSR set to: 0
  3882  000EF2  0E01               	movlw	1
  3883  000EF4  0100               	movlb	0	; () banked
  3884  000EF6  1BCD               	xorwf	___awdiv@sign& (0+255),f,b
  3885  000EF8  D000               	goto	l3153
  3886  000EFA                     l3153:
  3887                           
  3888                           ; BSR set to: 0
  3889  000EFA  0E00               	movlw	0
  3890  000EFC  0100               	movlb	0	; () banked
  3891  000EFE  6FCF               	movwf	(___awdiv@quotient+1)& (0+255),b
  3892  000F00  0E00               	movlw	0
  3893  000F02  6FCE               	movwf	___awdiv@quotient& (0+255),b
  3894                           
  3895                           ; BSR set to: 0
  3896  000F04  0100               	movlb	0	; () banked
  3897  000F06  51CA               	movf	___awdiv@divisor& (0+255),w,b
  3898  000F08  0100               	movlb	0	; () banked
  3899  000F0A  11CB               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  3900  000F0C  B4D8               	btfsc	status,2,c
  3901  000F0E  D031               	goto	l3175
  3902                           
  3903                           ; BSR set to: 0
  3904  000F10  0E01               	movlw	1
  3905  000F12  0100               	movlb	0	; () banked
  3906  000F14  6FCC               	movwf	___awdiv@counter& (0+255),b
  3907  000F16  D007               	goto	l3161
  3908  000F18                     l3159:
  3909                           
  3910                           ; BSR set to: 0
  3911  000F18  0100               	movlb	0	; () banked
  3912  000F1A  90D8               	bcf	status,0,c
  3913  000F1C  37CA               	rlcf	___awdiv@divisor& (0+255),f,b
  3914  000F1E  37CB               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  3915  000F20  0100               	movlb	0	; () banked
  3916  000F22  2BCC               	incf	___awdiv@counter& (0+255),f,b
  3917  000F24  D000               	goto	l3161
  3918  000F26                     l3161:
  3919                           
  3920                           ; BSR set to: 0
  3921  000F26  0100               	movlb	0	; () banked
  3922  000F28  BFCB               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  3923  000F2A  D002               	goto	l3163
  3924  000F2C  D7F5               	goto	l3159
  3925                           
  3926                           ; BSR set to: 0
  3927  000F2E  D000               	goto	l3163
  3928  000F30                     l3163:
  3929                           
  3930                           ; BSR set to: 0
  3931  000F30  0100               	movlb	0	; () banked
  3932  000F32  90D8               	bcf	status,0,c
  3933  000F34  37CE               	rlcf	___awdiv@quotient& (0+255),f,b
  3934  000F36  37CF               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  3935                           
  3936                           ; BSR set to: 0
  3937  000F38  0100               	movlb	0	; () banked
  3938  000F3A  51CA               	movf	___awdiv@divisor& (0+255),w,b
  3939  000F3C  0100               	movlb	0	; () banked
  3940  000F3E  5DC8               	subwf	___awdiv@dividend& (0+255),w,b
  3941  000F40  0100               	movlb	0	; () banked
  3942  000F42  51CB               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3943  000F44  0100               	movlb	0	; () banked
  3944  000F46  59C9               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  3945  000F48  A0D8               	btfss	status,0,c
  3946  000F4A  D00B               	goto	l3171
  3947                           
  3948                           ; BSR set to: 0
  3949  000F4C  0100               	movlb	0	; () banked
  3950  000F4E  51CA               	movf	___awdiv@divisor& (0+255),w,b
  3951  000F50  0100               	movlb	0	; () banked
  3952  000F52  5FC8               	subwf	___awdiv@dividend& (0+255),f,b
  3953  000F54  0100               	movlb	0	; () banked
  3954  000F56  51CB               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3955  000F58  0100               	movlb	0	; () banked
  3956  000F5A  5BC9               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  3957                           
  3958                           ; BSR set to: 0
  3959  000F5C  0100               	movlb	0	; () banked
  3960  000F5E  81CE               	bsf	___awdiv@quotient& (0+255),0,b
  3961  000F60  D000               	goto	l3171
  3962  000F62                     l3171:
  3963                           
  3964                           ; BSR set to: 0
  3965  000F62  0100               	movlb	0	; () banked
  3966  000F64  90D8               	bcf	status,0,c
  3967  000F66  33CB               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  3968  000F68  33CA               	rrcf	___awdiv@divisor& (0+255),f,b
  3969                           
  3970                           ; BSR set to: 0
  3971  000F6A  0100               	movlb	0	; () banked
  3972  000F6C  2FCC               	decfsz	___awdiv@counter& (0+255),f,b
  3973  000F6E  D7E0               	goto	l3163
  3974                           
  3975                           ; BSR set to: 0
  3976  000F70  D000               	goto	l3175
  3977  000F72                     l3175:
  3978                           
  3979                           ; BSR set to: 0
  3980  000F72  0100               	movlb	0	; () banked
  3981  000F74  51CD               	movf	___awdiv@sign& (0+255),w,b
  3982  000F76  0100               	movlb	0	; () banked
  3983  000F78  B4D8               	btfsc	status,2,c
  3984  000F7A  D006               	goto	l3179
  3985                           
  3986                           ; BSR set to: 0
  3987  000F7C  0100               	movlb	0	; () banked
  3988  000F7E  6DCE               	negf	___awdiv@quotient& (0+255),b
  3989  000F80  1FCF               	comf	(___awdiv@quotient+1)& (0+255),f,b
  3990  000F82  B0D8               	btfsc	status,0,c
  3991  000F84  2BCF               	incf	(___awdiv@quotient+1)& (0+255),f,b
  3992  000F86  D000               	goto	l3179
  3993  000F88                     l3179:
  3994                           
  3995                           ; BSR set to: 0
  3996  000F88  C0CE  F0C8         	movff	___awdiv@quotient,?___awdiv
  3997  000F8C  C0CF  F0C9         	movff	___awdiv@quotient+1,?___awdiv+1
  3998  000F90  0012               	return	
  3999                           
  4000                           ; BSR set to: 0
  4001                           
  4002                           ; BSR set to: 0
  4003  000F92  0012               	return		;funcret
  4004  000F94                     __end_of___awdiv:
  4005                           	opt stack 0
  4006                           tblptru	equ	0xFF8
  4007                           tblptrh	equ	0xFF7
  4008                           tblptrl	equ	0xFF6
  4009                           tablat	equ	0xFF5
  4010                           prodh	equ	0xFF4
  4011                           prodl	equ	0xFF3
  4012                           intcon	equ	0xFF2
  4013                           postinc0	equ	0xFEE
  4014                           wreg	equ	0xFE8
  4015                           indf2	equ	0xFDF
  4016                           postinc2	equ	0xFDE
  4017                           fsr2h	equ	0xFDA
  4018                           fsr2l	equ	0xFD9
  4019                           status	equ	0xFD8
  4020                           
  4021 ;; *************** function _GenerarMJ *****************
  4022 ;; Defined at:
  4023 ;;		line 317 in file "main.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;		None
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;		None
  4028 ;; Return value:  Size  Location     Type
  4029 ;;		None               void
  4030 ;; Registers used:
  4031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4039 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4040 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4041 ;;Total ram usage:        1 bytes
  4042 ;; Hardware stack levels used:    1
  4043 ;; Hardware stack levels required when called:    3
  4044 ;; This function calls:
  4045 ;;		_Retardo
  4046 ;;		_Tabla
  4047 ;;		___awmod
  4048 ;; This function is called by:
  4049 ;;		_main
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           	psect	text14
  4054  000BF6                     __ptext14:
  4055                           	opt stack 0
  4056  000BF6                     _GenerarMJ:
  4057                           	opt stack 27
  4058                           
  4059                           ;main.c: 319: i=0;
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;incstack = 0
  4063  000BF6  0E00               	movlw	0
  4064  000BF8  6E33               	movwf	_i,c
  4065                           
  4066                           ;main.c: 320: while(MemoriaJ[i] != 50)
  4067  000BFA  D026               	goto	l3839
  4068  000BFC                     l3821:
  4069                           
  4070                           ;main.c: 321: {
  4071                           ;main.c: 322: Tabla(MemoriaJ[i]);
  4072  000BFC  5033               	movf	_i,w,c
  4073  000BFE  0D01               	mullw	1
  4074  000C00  0E60               	movlw	low _MemoriaJ
  4075  000C02  24F3               	addwf	prodl,w,c
  4076  000C04  6ED9               	movwf	fsr2l,c
  4077  000C06  0E00               	movlw	high _MemoriaJ
  4078  000C08  20F4               	addwfc	prodh,w,c
  4079  000C0A  6EDA               	movwf	fsr2h,c
  4080  000C0C  50DF               	movf	indf2,w,c
  4081  000C0E  ECF2  F006         	call	_Tabla
  4082                           
  4083                           ;main.c: 323: LATAbits.LATA7 = 1;
  4084  000C12  8E89               	bsf	3977,7,c	;volatile
  4085                           
  4086                           ;main.c: 324: LATCbits.LATC0 = 1;
  4087  000C14  808B               	bsf	3979,0,c	;volatile
  4088                           
  4089                           ;main.c: 325: Retardo(60);
  4090  000C16  0E00               	movlw	0
  4091  000C18  0100               	movlb	0	; () banked
  4092  000C1A  6FC9               	movwf	(Retardo@ms+1)& (0+255),b
  4093  000C1C  0E3C               	movlw	60
  4094  000C1E  6FC8               	movwf	Retardo@ms& (0+255),b
  4095  000C20  EC4A  F009         	call	_Retardo	;wreg free
  4096                           
  4097                           ;main.c: 326: LATCbits.LATC0 = 0;
  4098  000C24  908B               	bcf	3979,0,c	;volatile
  4099                           
  4100                           ;main.c: 327: Retardo(400);
  4101  000C26  0E01               	movlw	1
  4102  000C28  0100               	movlb	0	; () banked
  4103  000C2A  6FC9               	movwf	(Retardo@ms+1)& (0+255),b
  4104  000C2C  0E90               	movlw	144
  4105  000C2E  6FC8               	movwf	Retardo@ms& (0+255),b
  4106  000C30  EC4A  F009         	call	_Retardo	;wreg free
  4107                           
  4108                           ;main.c: 328: LATAbits.LATA7 = 0;
  4109  000C34  9E89               	bcf	3977,7,c	;volatile
  4110                           
  4111                           ;main.c: 329: Retardo(300);
  4112  000C36  0E01               	movlw	1
  4113  000C38  0100               	movlb	0	; () banked
  4114  000C3A  6FC9               	movwf	(Retardo@ms+1)& (0+255),b
  4115  000C3C  0E2C               	movlw	44
  4116  000C3E  6FC8               	movwf	Retardo@ms& (0+255),b
  4117  000C40  EC4A  F009         	call	_Retardo	;wreg free
  4118                           
  4119                           ;main.c: 330: i++;
  4120  000C44  2A33               	incf	_i,f,c
  4121  000C46  D000               	goto	l3839
  4122  000C48                     l3839:
  4123  000C48  5033               	movf	_i,w,c
  4124  000C4A  0D01               	mullw	1
  4125  000C4C  0E60               	movlw	low _MemoriaJ
  4126  000C4E  24F3               	addwf	prodl,w,c
  4127  000C50  6ED9               	movwf	fsr2l,c
  4128  000C52  0E00               	movlw	high _MemoriaJ
  4129  000C54  20F4               	addwfc	prodh,w,c
  4130  000C56  6EDA               	movwf	fsr2h,c
  4131  000C58  0E32               	movlw	50
  4132  000C5A  18DE               	xorwf	postinc2,w,c
  4133  000C5C  B4D8               	btfsc	status,2,c
  4134  000C5E  D002               	goto	l3841
  4135  000C60  D7CD               	goto	l3821
  4136  000C62  D000               	goto	l3841
  4137  000C64                     l3841:
  4138                           
  4139                           ;main.c: 333: {
  4140                           ;main.c: 334: NumeroJuego = TMR0L % 10;
  4141  000C64  CFD6 F0C8          	movff	4054,___awmod@dividend	;volatile
  4142  000C68  0100               	movlb	0	; () banked
  4143  000C6A  6BC9               	clrf	(___awmod@dividend+1)& (0+255),b
  4144  000C6C  0E00               	movlw	0
  4145  000C6E  0100               	movlb	0	; () banked
  4146  000C70  6FCB               	movwf	(___awmod@divisor+1)& (0+255),b
  4147  000C72  0E0A               	movlw	10
  4148  000C74  6FCA               	movwf	___awmod@divisor& (0+255),b
  4149  000C76  ECCA  F007         	call	___awmod	;wreg free
  4150  000C7A  0100               	movlb	0	; () banked
  4151  000C7C  51C8               	movf	?___awmod& (0+255),w,b
  4152  000C7E  D002               	goto	L2
  4153  000C80                     l3843:
  4154                           
  4155                           ;main.c: 336: {
  4156                           ;main.c: 337: NumeroJuego = NumeroJuego - 10;
  4157  000C80  502B               	movf	_NumeroJuego,w,c
  4158  000C82  0FF6               	addlw	246
  4159  000C84                     L2:
  4160  000C84  6E2B               	movwf	_NumeroJuego,c
  4161  000C86  0E0A               	movlw	10
  4162  000C88  602B               	cpfslt	_NumeroJuego,c
  4163  000C8A  D7FA               	goto	l3843
  4164  000C8C  D000               	goto	l3845
  4165  000C8E                     l3845:
  4166                           
  4167                           ;main.c: 338: }
  4168                           ;main.c: 339: }while(NumeroJuegoBk == NumeroJuego);
  4169  000C8E  502B               	movf	_NumeroJuego,w,c
  4170  000C90  182C               	xorwf	_NumeroJuegoBk,w,c
  4171  000C92  B4D8               	btfsc	status,2,c
  4172  000C94  D7E7               	goto	l3841
  4173                           
  4174                           ;main.c: 341: NumeroJuegoBk = NumeroJuego;
  4175  000C96  C02B  F02C         	movff	_NumeroJuego,_NumeroJuegoBk
  4176                           
  4177                           ;main.c: 342: MemoriaJ[i] = NumeroJuego;
  4178  000C9A  5033               	movf	_i,w,c
  4179  000C9C  0D01               	mullw	1
  4180  000C9E  0E60               	movlw	low _MemoriaJ
  4181  000CA0  24F3               	addwf	prodl,w,c
  4182  000CA2  6ED9               	movwf	fsr2l,c
  4183  000CA4  0E00               	movlw	high _MemoriaJ
  4184  000CA6  20F4               	addwfc	prodh,w,c
  4185  000CA8  6EDA               	movwf	fsr2h,c
  4186  000CAA  C02B  FFDF         	movff	_NumeroJuego,indf2
  4187                           
  4188                           ;main.c: 343: Tabla(MemoriaJ[i]);
  4189  000CAE  5033               	movf	_i,w,c
  4190  000CB0  0D01               	mullw	1
  4191  000CB2  0E60               	movlw	low _MemoriaJ
  4192  000CB4  24F3               	addwf	prodl,w,c
  4193  000CB6  6ED9               	movwf	fsr2l,c
  4194  000CB8  0E00               	movlw	high _MemoriaJ
  4195  000CBA  20F4               	addwfc	prodh,w,c
  4196  000CBC  6EDA               	movwf	fsr2h,c
  4197  000CBE  50DF               	movf	indf2,w,c
  4198  000CC0  ECF2  F006         	call	_Tabla
  4199                           
  4200                           ;main.c: 344: LATAbits.LATA7 = 1;
  4201  000CC4  8E89               	bsf	3977,7,c	;volatile
  4202                           
  4203                           ;main.c: 345: LATCbits.LATC0 = 1;
  4204  000CC6  808B               	bsf	3979,0,c	;volatile
  4205                           
  4206                           ;main.c: 346: Retardo(400);
  4207  000CC8  0E01               	movlw	1
  4208  000CCA  0100               	movlb	0	; () banked
  4209  000CCC  6FC9               	movwf	(Retardo@ms+1)& (0+255),b
  4210  000CCE  0E90               	movlw	144
  4211  000CD0  6FC8               	movwf	Retardo@ms& (0+255),b
  4212  000CD2  EC4A  F009         	call	_Retardo	;wreg free
  4213                           
  4214                           ;main.c: 347: LATCbits.LATC0 = 0;
  4215  000CD6  908B               	bcf	3979,0,c	;volatile
  4216                           
  4217                           ;main.c: 348: Retardo(100);
  4218  000CD8  0E00               	movlw	0
  4219  000CDA  0100               	movlb	0	; () banked
  4220  000CDC  6FC9               	movwf	(Retardo@ms+1)& (0+255),b
  4221  000CDE  0E64               	movlw	100
  4222  000CE0  6FC8               	movwf	Retardo@ms& (0+255),b
  4223  000CE2  EC4A  F009         	call	_Retardo	;wreg free
  4224                           
  4225                           ;main.c: 349: LATAbits.LATA7 = 0;
  4226  000CE6  9E89               	bcf	3977,7,c	;volatile
  4227                           
  4228                           ;main.c: 350: Retardo(300);
  4229  000CE8  0E01               	movlw	1
  4230  000CEA  0100               	movlb	0	; () banked
  4231  000CEC  6FC9               	movwf	(Retardo@ms+1)& (0+255),b
  4232  000CEE  0E2C               	movlw	44
  4233  000CF0  6FC8               	movwf	Retardo@ms& (0+255),b
  4234  000CF2  EC4A  F009         	call	_Retardo	;wreg free
  4235  000CF6  0012               	return		;funcret
  4236  000CF8                     __end_of_GenerarMJ:
  4237                           	opt stack 0
  4238                           tblptru	equ	0xFF8
  4239                           tblptrh	equ	0xFF7
  4240                           tblptrl	equ	0xFF6
  4241                           tablat	equ	0xFF5
  4242                           prodh	equ	0xFF4
  4243                           prodl	equ	0xFF3
  4244                           intcon	equ	0xFF2
  4245                           postinc0	equ	0xFEE
  4246                           wreg	equ	0xFE8
  4247                           indf2	equ	0xFDF
  4248                           postinc2	equ	0xFDE
  4249                           fsr2h	equ	0xFDA
  4250                           fsr2l	equ	0xFD9
  4251                           status	equ	0xFD8
  4252                           
  4253 ;; *************** function _Tabla *****************
  4254 ;; Defined at:
  4255 ;;		line 394 in file "main.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;  numero          1    wreg     unsigned char 
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;  numero          1    0[BANK0 ] unsigned char 
  4260 ;; Return value:  Size  Location     Type
  4261 ;;		None               void
  4262 ;; Registers used:
  4263 ;;		wreg, status,2, status,0
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4270 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4273 ;;Total ram usage:        1 bytes
  4274 ;; Hardware stack levels used:    1
  4275 ;; Hardware stack levels required when called:    2
  4276 ;; This function calls:
  4277 ;;		Nothing
  4278 ;; This function is called by:
  4279 ;;		_GenerarMJ
  4280 ;;		_Mostrar
  4281 ;;		_MostrarJ
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284                           
  4285                           	psect	text15
  4286  000DE4                     __ptext15:
  4287                           	opt stack 0
  4288  000DE4                     _Tabla:
  4289                           	opt stack 27
  4290                           
  4291                           ;incstack = 0
  4292                           ;Tabla@numero stored from wreg
  4293  000DE4  0100               	movlb	0	; () banked
  4294  000DE6  6FC8               	movwf	Tabla@numero& (0+255),b
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;main.c: 396: switch(numero)
  4298  000DE8  D036               	goto	l3399
  4299  000DEA                     l3363:
  4300                           
  4301                           ; BSR set to: 0
  4302  000DEA  0EDE               	movlw	222
  4303  000DEC  6E81               	movwf	3969,c	;volatile
  4304  000DEE  0012               	return	
  4305  000DF0                     l3365:
  4306                           
  4307                           ; BSR set to: 0
  4308  000DF0  0E88               	movlw	136
  4309  000DF2  6E81               	movwf	3969,c	;volatile
  4310  000DF4  0012               	return	
  4311  000DF6                     l3367:
  4312                           
  4313                           ; BSR set to: 0
  4314  000DF6  0EB6               	movlw	182
  4315  000DF8  6E81               	movwf	3969,c	;volatile
  4316  000DFA  0012               	return	
  4317  000DFC                     l3369:
  4318                           
  4319                           ; BSR set to: 0
  4320  000DFC  0EBA               	movlw	186
  4321  000DFE  6E81               	movwf	3969,c	;volatile
  4322  000E00  0012               	return	
  4323  000E02                     l3371:
  4324                           
  4325                           ; BSR set to: 0
  4326  000E02  0EE8               	movlw	232
  4327  000E04  6E81               	movwf	3969,c	;volatile
  4328  000E06  0012               	return	
  4329  000E08                     l3373:
  4330                           
  4331                           ; BSR set to: 0
  4332  000E08  0E7A               	movlw	122
  4333  000E0A  6E81               	movwf	3969,c	;volatile
  4334  000E0C  0012               	return	
  4335  000E0E                     l3375:
  4336                           
  4337                           ; BSR set to: 0
  4338  000E0E  0E7E               	movlw	126
  4339  000E10  6E81               	movwf	3969,c	;volatile
  4340  000E12  0012               	return	
  4341  000E14                     l3377:
  4342                           
  4343                           ; BSR set to: 0
  4344  000E14  0E98               	movlw	152
  4345  000E16  6E81               	movwf	3969,c	;volatile
  4346  000E18  0012               	return	
  4347  000E1A                     l3379:
  4348                           
  4349                           ; BSR set to: 0
  4350  000E1A  0EFE               	movlw	254
  4351  000E1C  6E81               	movwf	3969,c	;volatile
  4352  000E1E  0012               	return	
  4353  000E20                     l3381:
  4354                           
  4355                           ; BSR set to: 0
  4356  000E20  0EF8               	movlw	248
  4357  000E22  6E81               	movwf	3969,c	;volatile
  4358  000E24  0012               	return	
  4359  000E26                     l3383:
  4360                           
  4361                           ; BSR set to: 0
  4362  000E26  0EFC               	movlw	252
  4363  000E28  6E81               	movwf	3969,c	;volatile
  4364  000E2A  0012               	return	
  4365  000E2C                     l3385:
  4366                           
  4367                           ; BSR set to: 0
  4368  000E2C  0E6E               	movlw	110
  4369  000E2E  6E81               	movwf	3969,c	;volatile
  4370  000E30  0012               	return	
  4371  000E32                     l3387:
  4372                           
  4373                           ; BSR set to: 0
  4374  000E32  0E56               	movlw	86
  4375  000E34  6E81               	movwf	3969,c	;volatile
  4376  000E36  0012               	return	
  4377  000E38                     l3389:
  4378                           
  4379                           ; BSR set to: 0
  4380  000E38  0EAE               	movlw	174
  4381  000E3A  6E81               	movwf	3969,c	;volatile
  4382  000E3C  0012               	return	
  4383  000E3E                     l3391:
  4384                           
  4385                           ; BSR set to: 0
  4386  000E3E  0E76               	movlw	118
  4387  000E40  6E81               	movwf	3969,c	;volatile
  4388  000E42  0012               	return	
  4389  000E44                     l3393:
  4390                           
  4391                           ; BSR set to: 0
  4392  000E44  0E74               	movlw	116
  4393  000E46  6E81               	movwf	3969,c	;volatile
  4394  000E48  0012               	return	
  4395  000E4A                     l3395:
  4396                           
  4397                           ; BSR set to: 0
  4398  000E4A  0E00               	movlw	0
  4399  000E4C  6E81               	movwf	3969,c	;volatile
  4400  000E4E  0012               	return	
  4401  000E50                     l3397:
  4402                           
  4403                           ; BSR set to: 0
  4404  000E50  0E00               	movlw	0
  4405  000E52  6E81               	movwf	3969,c	;volatile
  4406                           
  4407                           ;main.c: 416: }
  4408  000E54  0012               	return	
  4409  000E56                     l3399:
  4410                           
  4411                           ; BSR set to: 0
  4412  000E56  0100               	movlb	0	; () banked
  4413  000E58  51C8               	movf	Tabla@numero& (0+255),w,b
  4414                           
  4415                           ; Switch size 1, requested type "space"
  4416                           ; Number of cases is 17, Range of values is 0 to 20
  4417                           ; switch strategies available:
  4418                           ; Name         Instructions Cycles
  4419                           ; simple_byte           52    27 (average)
  4420                           ;	Chosen strategy is simple_byte
  4421  000E5A  0A00               	xorlw	0	; case 0
  4422  000E5C  B4D8               	btfsc	status,2,c
  4423  000E5E  D7C5               	goto	l3363
  4424  000E60  0A01               	xorlw	1	; case 1
  4425  000E62  B4D8               	btfsc	status,2,c
  4426  000E64  D7C5               	goto	l3365
  4427  000E66  0A03               	xorlw	3	; case 2
  4428  000E68  B4D8               	btfsc	status,2,c
  4429  000E6A  D7C5               	goto	l3367
  4430  000E6C  0A01               	xorlw	1	; case 3
  4431  000E6E  B4D8               	btfsc	status,2,c
  4432  000E70  D7C5               	goto	l3369
  4433  000E72  0A07               	xorlw	7	; case 4
  4434  000E74  B4D8               	btfsc	status,2,c
  4435  000E76  D7C5               	goto	l3371
  4436  000E78  0A01               	xorlw	1	; case 5
  4437  000E7A  B4D8               	btfsc	status,2,c
  4438  000E7C  D7C5               	goto	l3373
  4439  000E7E  0A03               	xorlw	3	; case 6
  4440  000E80  B4D8               	btfsc	status,2,c
  4441  000E82  D7C5               	goto	l3375
  4442  000E84  0A01               	xorlw	1	; case 7
  4443  000E86  B4D8               	btfsc	status,2,c
  4444  000E88  D7C5               	goto	l3377
  4445  000E8A  0A0F               	xorlw	15	; case 8
  4446  000E8C  B4D8               	btfsc	status,2,c
  4447  000E8E  D7C5               	goto	l3379
  4448  000E90  0A01               	xorlw	1	; case 9
  4449  000E92  B4D8               	btfsc	status,2,c
  4450  000E94  D7C5               	goto	l3381
  4451  000E96  0A03               	xorlw	3	; case 10
  4452  000E98  B4D8               	btfsc	status,2,c
  4453  000E9A  D7C5               	goto	l3383
  4454  000E9C  0A01               	xorlw	1	; case 11
  4455  000E9E  B4D8               	btfsc	status,2,c
  4456  000EA0  D7C5               	goto	l3385
  4457  000EA2  0A07               	xorlw	7	; case 12
  4458  000EA4  B4D8               	btfsc	status,2,c
  4459  000EA6  D7C5               	goto	l3387
  4460  000EA8  0A01               	xorlw	1	; case 13
  4461  000EAA  B4D8               	btfsc	status,2,c
  4462  000EAC  D7C5               	goto	l3389
  4463  000EAE  0A03               	xorlw	3	; case 14
  4464  000EB0  B4D8               	btfsc	status,2,c
  4465  000EB2  D7C5               	goto	l3391
  4466  000EB4  0A01               	xorlw	1	; case 15
  4467  000EB6  B4D8               	btfsc	status,2,c
  4468  000EB8  D7C5               	goto	l3393
  4469  000EBA  0A1B               	xorlw	27	; case 20
  4470  000EBC  B4D8               	btfsc	status,2,c
  4471  000EBE  D7C5               	goto	l3395
  4472  000EC0  D7C7               	goto	l3397
  4473                           
  4474                           ; BSR set to: 0
  4475                           
  4476                           ; BSR set to: 0
  4477  000EC2  0012               	return		;funcret
  4478  000EC4                     __end_of_Tabla:
  4479                           	opt stack 0
  4480                           tblptru	equ	0xFF8
  4481                           tblptrh	equ	0xFF7
  4482                           tblptrl	equ	0xFF6
  4483                           tablat	equ	0xFF5
  4484                           prodh	equ	0xFF4
  4485                           prodl	equ	0xFF3
  4486                           intcon	equ	0xFF2
  4487                           postinc0	equ	0xFEE
  4488                           wreg	equ	0xFE8
  4489                           indf2	equ	0xFDF
  4490                           postinc2	equ	0xFDE
  4491                           fsr2h	equ	0xFDA
  4492                           fsr2l	equ	0xFD9
  4493                           status	equ	0xFD8
  4494                           
  4495 ;; *************** function _Retardo *****************
  4496 ;; Defined at:
  4497 ;;		line 869 in file "main.c"
  4498 ;; Parameters:    Size  Location     Type
  4499 ;;  ms              2    0[BANK0 ] unsigned int 
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;		None
  4502 ;; Return value:  Size  Location     Type
  4503 ;;		None               void
  4504 ;; Registers used:
  4505 ;;		wreg, status,2, status,0
  4506 ;; Tracked objects:
  4507 ;;		On entry : 0/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4511 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4513 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4514 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4515 ;;Total ram usage:        3 bytes
  4516 ;; Hardware stack levels used:    1
  4517 ;; Hardware stack levels required when called:    2
  4518 ;; This function calls:
  4519 ;;		Nothing
  4520 ;; This function is called by:
  4521 ;;		_GenerarMJ
  4522 ;;		_VerificarMJ
  4523 ;;		_Botones
  4524 ;; This function uses a non-reentrant model
  4525 ;;
  4526                           
  4527                           	psect	text16
  4528  001294                     __ptext16:
  4529                           	opt stack 0
  4530  001294                     _Retardo:
  4531                           	opt stack 27
  4532                           
  4533                           ;main.c: 871: while(ms!=0)
  4534                           
  4535                           ; BSR set to: 0
  4536                           ;incstack = 0
  4537  001294  D00D               	goto	l557
  4538  001296                     l3403:
  4539                           
  4540                           ;main.c: 872: {
  4541                           ;main.c: 873: _delay((unsigned long)((1)*(16000000/4000.0)));
  4542  001296  0E06               	movlw	6
  4543  001298  0100               	movlb	0	; () banked
  4544  00129A  6FCA               	movwf	??_Retardo& (0+255),b
  4545  00129C  0E30               	movlw	48
  4546  00129E                     u3977:
  4547  00129E  2EE8               	decfsz	wreg,f,c
  4548  0012A0  D7FE               	goto	u3977
  4549  0012A2  2FCA               	decfsz	??_Retardo& (0+255),f,b
  4550  0012A4  D7FC               	goto	u3977
  4551  0012A6  D000               	nop2	
  4552                           
  4553                           ;main.c: 874: ms--;
  4554  0012A8  0100               	movlb	0	; () banked
  4555  0012AA  07C8               	decf	Retardo@ms& (0+255),f,b
  4556  0012AC  A0D8               	btfss	status,0,c
  4557  0012AE  07C9               	decf	(Retardo@ms+1)& (0+255),f,b
  4558  0012B0                     l557:
  4559  0012B0  0100               	movlb	0	; () banked
  4560  0012B2  51C8               	movf	Retardo@ms& (0+255),w,b
  4561  0012B4  0100               	movlb	0	; () banked
  4562  0012B6  11C9               	iorwf	(Retardo@ms+1)& (0+255),w,b
  4563  0012B8  A4D8               	btfss	status,2,c
  4564  0012BA  D7ED               	goto	l3403
  4565                           
  4566                           ; BSR set to: 0
  4567                           
  4568                           ; BSR set to: 0
  4569  0012BC  0012               	return		;funcret
  4570  0012BE                     __end_of_Retardo:
  4571                           	opt stack 0
  4572                           tblptru	equ	0xFF8
  4573                           tblptrh	equ	0xFF7
  4574                           tblptrl	equ	0xFF6
  4575                           tablat	equ	0xFF5
  4576                           prodh	equ	0xFF4
  4577                           prodl	equ	0xFF3
  4578                           intcon	equ	0xFF2
  4579                           postinc0	equ	0xFEE
  4580                           wreg	equ	0xFE8
  4581                           indf2	equ	0xFDF
  4582                           postinc2	equ	0xFDE
  4583                           fsr2h	equ	0xFDA
  4584                           fsr2l	equ	0xFD9
  4585                           status	equ	0xFD8
  4586                           
  4587 ;; *************** function _Desplazar *****************
  4588 ;; Defined at:
  4589 ;;		line 952 in file "main.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;		None
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;		None
  4594 ;; Return value:  Size  Location     Type
  4595 ;;		None               void
  4596 ;; Registers used:
  4597 ;;		wreg, status,2, status,0, cstack
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4605 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4606 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4607 ;;Total ram usage:        1 bytes
  4608 ;; Hardware stack levels used:    1
  4609 ;; Hardware stack levels required when called:    3
  4610 ;; This function calls:
  4611 ;;		___awmod
  4612 ;; This function is called by:
  4613 ;;		_main
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617                           	psect	text17
  4618  000646                     __ptext17:
  4619                           	opt stack 0
  4620  000646                     _Desplazar:
  4621                           	opt stack 27
  4622                           
  4623                           ;main.c: 954: if(FTimeToShift == 1)
  4624                           
  4625                           ; BSR set to: 0
  4626                           ;incstack = 0
  4627  000646  041A               	decf	_FTimeToShift,w,c
  4628  000648  A4D8               	btfss	status,2,c
  4629  00064A  0012               	return	
  4630                           
  4631                           ;main.c: 955: {
  4632                           ;main.c: 956: FTimeToShift = 0;
  4633  00064C  0E00               	movlw	0
  4634  00064E  6E1A               	movwf	_FTimeToShift,c
  4635                           
  4636                           ;main.c: 957: switch(ShiftOrder)
  4637  000650  D0E0               	goto	l3653
  4638  000652                     l3575:
  4639                           
  4640                           ;main.c: 960: {
  4641                           ;main.c: 961: ShiftOrder = 2;
  4642  000652  0E02               	movlw	2
  4643  000654  6E2F               	movwf	_ShiftOrder,c
  4644  000656  D000               	goto	l3577
  4645  000658                     l3577:
  4646                           
  4647                           ;main.c: 963: {
  4648                           ;main.c: 964: NumeroJuego = TMR0L % 10;
  4649  000658  CFD6 F0C8          	movff	4054,___awmod@dividend	;volatile
  4650  00065C  0100               	movlb	0	; () banked
  4651  00065E  6BC9               	clrf	(___awmod@dividend+1)& (0+255),b
  4652  000660  0E00               	movlw	0
  4653  000662  0100               	movlb	0	; () banked
  4654  000664  6FCB               	movwf	(___awmod@divisor+1)& (0+255),b
  4655  000666  0E0A               	movlw	10
  4656  000668  6FCA               	movwf	___awmod@divisor& (0+255),b
  4657  00066A  ECCA  F007         	call	___awmod	;wreg free
  4658  00066E  0100               	movlb	0	; () banked
  4659  000670  51C8               	movf	?___awmod& (0+255),w,b
  4660  000672  D002               	goto	L3
  4661  000674                     l3579:
  4662                           
  4663                           ;main.c: 966: {
  4664                           ;main.c: 967: NumeroJuego = NumeroJuego - 10;
  4665  000674  502B               	movf	_NumeroJuego,w,c
  4666  000676  0FF6               	addlw	246
  4667  000678                     L3:
  4668  000678  6E2B               	movwf	_NumeroJuego,c
  4669  00067A  0E0A               	movlw	10
  4670  00067C  602B               	cpfslt	_NumeroJuego,c
  4671  00067E  D7FA               	goto	l3579
  4672  000680  D000               	goto	l3581
  4673  000682                     l3581:
  4674                           
  4675                           ;main.c: 968: }
  4676                           ;main.c: 969: }while(NumeroJuegoBk == NumeroJuego);
  4677  000682  502B               	movf	_NumeroJuego,w,c
  4678  000684  182C               	xorwf	_NumeroJuegoBk,w,c
  4679  000686  B4D8               	btfsc	status,2,c
  4680  000688  D7E7               	goto	l3577
  4681                           
  4682                           ;main.c: 971: NumeroJuegoBk = NumeroJuego;
  4683  00068A  C02B  F02C         	movff	_NumeroJuego,_NumeroJuegoBk
  4684                           
  4685                           ;main.c: 972: Disp_M = NumeroJuego;
  4686  00068E  C02B  F00A         	movff	_NumeroJuego,_Disp_M
  4687                           
  4688                           ;main.c: 973: Disp_C = 20;
  4689  000692  0E14               	movlw	20
  4690  000694  6E07               	movwf	_Disp_C,c
  4691                           
  4692                           ;main.c: 974: Disp_D = 20;
  4693  000696  0E14               	movlw	20
  4694  000698  6E08               	movwf	_Disp_D,c
  4695                           
  4696                           ;main.c: 975: Disp_U = 20;
  4697  00069A  0E14               	movlw	20
  4698  00069C  6E0D               	movwf	_Disp_U,c
  4699                           
  4700                           ;main.c: 976: break;
  4701  00069E  0012               	return	
  4702  0006A0                     l3585:
  4703                           
  4704                           ;main.c: 980: {
  4705                           ;main.c: 981: ShiftOrder = 3;
  4706  0006A0  0E03               	movlw	3
  4707  0006A2  6E2F               	movwf	_ShiftOrder,c
  4708                           
  4709                           ;main.c: 982: Disp_M = 20;
  4710  0006A4  0E14               	movlw	20
  4711  0006A6  6E0A               	movwf	_Disp_M,c
  4712                           
  4713                           ;main.c: 983: Disp_C = NumeroJuego;
  4714  0006A8  C02B  F007         	movff	_NumeroJuego,_Disp_C
  4715                           
  4716                           ;main.c: 984: Disp_D = 20;
  4717  0006AC  0E14               	movlw	20
  4718  0006AE  6E08               	movwf	_Disp_D,c
  4719                           
  4720                           ;main.c: 985: Disp_U = 20;
  4721  0006B0  0E14               	movlw	20
  4722  0006B2  6E0D               	movwf	_Disp_U,c
  4723                           
  4724                           ;main.c: 986: LATCbits.LATC6 = 1;
  4725  0006B4  8C8B               	bsf	3979,6,c	;volatile
  4726                           
  4727                           ;main.c: 987: LATCbits.LATC7 = 1;
  4728  0006B6  8E8B               	bsf	3979,7,c	;volatile
  4729                           
  4730                           ;main.c: 988: break;
  4731  0006B8  0012               	return	
  4732  0006BA                     l3593:
  4733                           
  4734                           ;main.c: 992: {
  4735                           ;main.c: 993: ShiftOrder = 4;
  4736  0006BA  0E04               	movlw	4
  4737  0006BC  6E2F               	movwf	_ShiftOrder,c
  4738                           
  4739                           ;main.c: 994: Disp_M = 20;
  4740  0006BE  0E14               	movlw	20
  4741  0006C0  6E0A               	movwf	_Disp_M,c
  4742                           
  4743                           ;main.c: 995: Disp_C = 20;
  4744  0006C2  0E14               	movlw	20
  4745  0006C4  6E07               	movwf	_Disp_C,c
  4746                           
  4747                           ;main.c: 996: Disp_D = NumeroJuego;
  4748  0006C6  C02B  F008         	movff	_NumeroJuego,_Disp_D
  4749                           
  4750                           ;main.c: 997: Disp_U = 20;
  4751  0006CA  0E14               	movlw	20
  4752  0006CC  6E0D               	movwf	_Disp_U,c
  4753                           
  4754                           ;main.c: 998: break;
  4755  0006CE  0012               	return	
  4756  0006D0                     l3597:
  4757                           
  4758                           ;main.c: 1002: {
  4759                           ;main.c: 1003: ShiftOrder = 5;
  4760  0006D0  0E05               	movlw	5
  4761  0006D2  6E2F               	movwf	_ShiftOrder,c
  4762                           
  4763                           ;main.c: 1004: Disp_M = 20;
  4764  0006D4  0E14               	movlw	20
  4765  0006D6  6E0A               	movwf	_Disp_M,c
  4766                           
  4767                           ;main.c: 1005: Disp_C = 20;
  4768  0006D8  0E14               	movlw	20
  4769  0006DA  6E07               	movwf	_Disp_C,c
  4770                           
  4771                           ;main.c: 1006: Disp_D = 20;
  4772  0006DC  0E14               	movlw	20
  4773  0006DE  6E08               	movwf	_Disp_D,c
  4774                           
  4775                           ;main.c: 1007: Disp_U = NumeroJuego;
  4776  0006E0  C02B  F00D         	movff	_NumeroJuego,_Disp_U
  4777                           
  4778                           ;main.c: 1008: FBA = 0;
  4779  0006E4  0E00               	movlw	0
  4780  0006E6  6E15               	movwf	_FBA,c
  4781                           
  4782                           ;main.c: 1009: break;
  4783  0006E8  0012               	return	
  4784  0006EA                     l3601:
  4785                           
  4786                           ;main.c: 1012: {
  4787                           ;main.c: 1013: ShiftOrder = 1;
  4788  0006EA  0E01               	movlw	1
  4789  0006EC  6E2F               	movwf	_ShiftOrder,c
  4790                           
  4791                           ;main.c: 1014: if(msJL >= 400 )
  4792  0006EE  0E90               	movlw	144
  4793  0006F0  5C05               	subwf	_msJL,w,c
  4794  0006F2  0E01               	movlw	1
  4795  0006F4  5806               	subwfb	_msJL+1,w,c
  4796  0006F6  A0D8               	btfss	status,0,c
  4797  0006F8  D002               	goto	l3607
  4798                           
  4799                           ;main.c: 1015: {
  4800                           ;main.c: 1016: msJL = msJL - 50;
  4801  0006FA  0ECE               	movlw	206
  4802  0006FC  D00F               	goto	L5
  4803  0006FE                     l3607:
  4804                           
  4805                           ;main.c: 1018: else
  4806                           ;main.c: 1019: {
  4807                           ;main.c: 1020: if(msJL > 300)
  4808  0006FE  0E2D               	movlw	45
  4809  000700  5C05               	subwf	_msJL,w,c
  4810  000702  0E01               	movlw	1
  4811  000704  5806               	subwfb	_msJL+1,w,c
  4812  000706  A0D8               	btfss	status,0,c
  4813  000708  D002               	goto	l3611
  4814                           
  4815                           ;main.c: 1021: {
  4816                           ;main.c: 1022: msJL = msJL - 15;
  4817  00070A  0EF1               	movlw	241
  4818  00070C  D007               	goto	L5
  4819  00070E                     l3611:
  4820                           
  4821                           ;main.c: 1024: else
  4822                           ;main.c: 1025: {
  4823                           ;main.c: 1026: if(msJL > 150)
  4824  00070E  5006               	movf	_msJL+1,w,c
  4825  000710  E104               	bnz	u3200
  4826  000712  0E97               	movlw	151
  4827  000714  5C05               	subwf	_msJL,w,c
  4828  000716  A0D8               	btfss	status,0,c
  4829  000718  D007               	goto	l589
  4830  00071A                     u3200:
  4831                           
  4832                           ;main.c: 1027: {
  4833                           ;main.c: 1028: msJL = msJL - 10;
  4834  00071A  0EF6               	movlw	246
  4835  00071C                     L5:
  4836  00071C  2405               	addwf	_msJL,w,c
  4837  00071E  6E05               	movwf	_msJL,c
  4838  000720  0EFF               	movlw	255
  4839  000722  2006               	addwfc	_msJL+1,w,c
  4840  000724  6E06               	movwf	_msJL+1,c
  4841  000726  D000               	goto	l589
  4842  000728                     l589:
  4843                           
  4844                           ;main.c: 1029: }
  4845                           ;main.c: 1030: }
  4846                           ;main.c: 1032: }
  4847                           ;main.c: 1034: if(FBA == 1)
  4848  000728  0415               	decf	_FBA,w,c
  4849  00072A  A4D8               	btfss	status,2,c
  4850  00072C  D009               	goto	l596
  4851                           
  4852                           ;main.c: 1035: {
  4853                           ;main.c: 1036: if(Tecla == NumeroJuego)
  4854  00072E  502B               	movf	_NumeroJuego,w,c
  4855  000730  1830               	xorwf	_Tecla,w,c
  4856  000732  A4D8               	btfss	status,2,c
  4857  000734  D005               	goto	l596
  4858                           
  4859                           ;main.c: 1037: {
  4860                           ;main.c: 1038: LATCbits.LATC6 = 0;
  4861  000736  9C8B               	bcf	3979,6,c	;volatile
  4862                           
  4863                           ;main.c: 1039: PuntajeJuego++;
  4864  000738  2A2E               	incf	_PuntajeJuego,f,c
  4865                           
  4866                           ;main.c: 1040: }
  4867  00073A  0012               	return	
  4868                           
  4869                           ;main.c: 1041: else
  4870                           ;main.c: 1042: {
  4871                           ;main.c: 1043: goto MAL;
  4872  00073C  D001               	goto	l596
  4873                           
  4874                           ;main.c: 1044: }
  4875                           ;main.c: 1045: }
  4876  00073E  0012               	return	
  4877  000740                     l596:
  4878  000740  9E8B               	bcf	3979,7,c	;volatile
  4879                           
  4880                           ;main.c: 1049: if(Led_RB3 == 1)
  4881  000742  0425               	decf	_Led_RB3,w,c
  4882  000744  A4D8               	btfss	status,2,c
  4883  000746  D003               	goto	l3625
  4884                           
  4885                           ;main.c: 1050: {
  4886                           ;main.c: 1051: Led_RB3 = 0;
  4887  000748  0E00               	movlw	0
  4888  00074A  6E25               	movwf	_Led_RB3,c
  4889                           
  4890                           ;main.c: 1052: }
  4891  00074C  0012               	return	
  4892  00074E                     l3625:
  4893                           
  4894                           ;main.c: 1053: else
  4895                           ;main.c: 1054: {
  4896                           ;main.c: 1055: if(Led_RB2 == 1)
  4897  00074E  0424               	decf	_Led_RB2,w,c
  4898  000750  A4D8               	btfss	status,2,c
  4899  000752  D003               	goto	l3629
  4900                           
  4901                           ;main.c: 1056: {
  4902                           ;main.c: 1057: Led_RB2 = 0;
  4903  000754  0E00               	movlw	0
  4904  000756  6E24               	movwf	_Led_RB2,c
  4905                           
  4906                           ;main.c: 1058: }
  4907  000758  0012               	return	
  4908  00075A                     l3629:
  4909                           
  4910                           ;main.c: 1059: else
  4911                           ;main.c: 1060: {
  4912                           ;main.c: 1061: if(Led_RB1 == 1)
  4913  00075A  0423               	decf	_Led_RB1,w,c
  4914  00075C  A4D8               	btfss	status,2,c
  4915  00075E  D003               	goto	l3633
  4916                           
  4917                           ;main.c: 1062: {
  4918                           ;main.c: 1063: Led_RB1 = 0;
  4919  000760  0E00               	movlw	0
  4920  000762  6E23               	movwf	_Led_RB1,c
  4921                           
  4922                           ;main.c: 1064: }
  4923  000764  0012               	return	
  4924  000766                     l3633:
  4925                           
  4926                           ;main.c: 1065: else
  4927                           ;main.c: 1066: {
  4928                           ;main.c: 1067: if(Led_RB0 == 1)
  4929  000766  0422               	decf	_Led_RB0,w,c
  4930  000768  A4D8               	btfss	status,2,c
  4931  00076A  D003               	goto	l604
  4932                           
  4933                           ;main.c: 1068: {
  4934                           ;main.c: 1069: Led_RB0 = 0;
  4935  00076C  0E00               	movlw	0
  4936  00076E  6E22               	movwf	_Led_RB0,c
  4937                           
  4938                           ;main.c: 1070: }
  4939  000770  0012               	return	
  4940  000772                     l604:
  4941                           
  4942                           ;main.c: 1071: else
  4943                           ;main.c: 1072: {
  4944                           ;main.c: 1073: LATCbits.LATC0 = 1;
  4945  000772  808B               	bsf	3979,0,c	;volatile
  4946                           
  4947                           ;main.c: 1074: _delay((unsigned long)((40)*(16000000/4000.0)));
  4948  000774  0ED0               	movlw	208
  4949  000776  0100               	movlb	0	; () banked
  4950  000778  6FCE               	movwf	??_Desplazar& (0+255),b
  4951  00077A  0ECA               	movlw	202
  4952  00077C                     u3987:
  4953  00077C  2EE8               	decfsz	wreg,f,c
  4954  00077E  D7FE               	goto	u3987
  4955  000780  2FCE               	decfsz	??_Desplazar& (0+255),f,b
  4956  000782  D7FC               	goto	u3987
  4957                           
  4958                           ;main.c: 1075: _delay((unsigned long)((40)*(16000000/4000.0)));
  4959  000784  0ED0               	movlw	208
  4960  000786  0100               	movlb	0	; () banked
  4961  000788  6FCE               	movwf	??_Desplazar& (0+255),b
  4962  00078A  0ECA               	movlw	202
  4963  00078C                     u3997:
  4964  00078C  2EE8               	decfsz	wreg,f,c
  4965  00078E  D7FE               	goto	u3997
  4966  000790  2FCE               	decfsz	??_Desplazar& (0+255),f,b
  4967  000792  D7FC               	goto	u3997
  4968                           
  4969                           ;main.c: 1076: _delay((unsigned long)((40)*(16000000/4000.0)));
  4970  000794  0ED0               	movlw	208
  4971  000796  0100               	movlb	0	; () banked
  4972  000798  6FCE               	movwf	??_Desplazar& (0+255),b
  4973  00079A  0ECA               	movlw	202
  4974  00079C                     u4007:
  4975  00079C  2EE8               	decfsz	wreg,f,c
  4976  00079E  D7FE               	goto	u4007
  4977  0007A0  2FCE               	decfsz	??_Desplazar& (0+255),f,b
  4978  0007A2  D7FC               	goto	u4007
  4979                           
  4980                           ;main.c: 1077: _delay((unsigned long)((40)*(16000000/4000.0)));
  4981  0007A4  0ED0               	movlw	208
  4982  0007A6  0100               	movlb	0	; () banked
  4983  0007A8  6FCE               	movwf	??_Desplazar& (0+255),b
  4984  0007AA  0ECA               	movlw	202
  4985  0007AC                     u4017:
  4986  0007AC  2EE8               	decfsz	wreg,f,c
  4987  0007AE  D7FE               	goto	u4017
  4988  0007B0  2FCE               	decfsz	??_Desplazar& (0+255),f,b
  4989  0007B2  D7FC               	goto	u4017
  4990                           
  4991                           ;main.c: 1078: _delay((unsigned long)((40)*(16000000/4000.0)));
  4992  0007B4  0ED0               	movlw	208
  4993  0007B6  0100               	movlb	0	; () banked
  4994  0007B8  6FCE               	movwf	??_Desplazar& (0+255),b
  4995  0007BA  0ECA               	movlw	202
  4996  0007BC                     u4027:
  4997  0007BC  2EE8               	decfsz	wreg,f,c
  4998  0007BE  D7FE               	goto	u4027
  4999  0007C0  2FCE               	decfsz	??_Desplazar& (0+255),f,b
  5000  0007C2  D7FC               	goto	u4027
  5001                           
  5002                           ;main.c: 1079: _delay((unsigned long)((40)*(16000000/4000.0)));
  5003  0007C4  0ED0               	movlw	208
  5004  0007C6  0100               	movlb	0	; () banked
  5005  0007C8  6FCE               	movwf	??_Desplazar& (0+255),b
  5006  0007CA  0ECA               	movlw	202
  5007  0007CC                     u4037:
  5008  0007CC  2EE8               	decfsz	wreg,f,c
  5009  0007CE  D7FE               	goto	u4037
  5010  0007D0  2FCE               	decfsz	??_Desplazar& (0+255),f,b
  5011  0007D2  D7FC               	goto	u4037
  5012                           
  5013                           ;main.c: 1080: _delay((unsigned long)((40)*(16000000/4000.0)));
  5014  0007D4  0ED0               	movlw	208
  5015  0007D6  0100               	movlb	0	; () banked
  5016  0007D8  6FCE               	movwf	??_Desplazar& (0+255),b
  5017  0007DA  0ECA               	movlw	202
  5018  0007DC                     u4047:
  5019  0007DC  2EE8               	decfsz	wreg,f,c
  5020  0007DE  D7FE               	goto	u4047
  5021  0007E0  2FCE               	decfsz	??_Desplazar& (0+255),f,b
  5022  0007E2  D7FC               	goto	u4047
  5023                           
  5024                           ;main.c: 1081: _delay((unsigned long)((40)*(16000000/4000.0)));
  5025  0007E4  0ED0               	movlw	208
  5026  0007E6  0100               	movlb	0	; () banked
  5027  0007E8  6FCE               	movwf	??_Desplazar& (0+255),b
  5028  0007EA  0ECA               	movlw	202
  5029  0007EC                     u4057:
  5030  0007EC  2EE8               	decfsz	wreg,f,c
  5031  0007EE  D7FE               	goto	u4057
  5032  0007F0  2FCE               	decfsz	??_Desplazar& (0+255),f,b
  5033  0007F2  D7FC               	goto	u4057
  5034                           
  5035                           ;main.c: 1082: LATCbits.LATC0 = 0;
  5036  0007F4  908B               	bcf	3979,0,c	;volatile
  5037                           
  5038                           ;main.c: 1083: ModoJuego = 0;
  5039  0007F6  0E00               	movlw	0
  5040  0007F8  6E2A               	movwf	_ModoJuego,c
  5041                           
  5042                           ;main.c: 1084: Disp_Var_1 = PuntajeJuego;
  5043  0007FA  C02E  F001         	movff	_PuntajeJuego,_Disp_Var_1
  5044  0007FE  6A02               	clrf	_Disp_Var_1+1,c
  5045                           
  5046                           ;main.c: 1085: PuntajeJuego = 0;
  5047  000800  0E00               	movlw	0
  5048  000802  6E2E               	movwf	_PuntajeJuego,c
  5049                           
  5050                           ;main.c: 1086: t_1m = 0;
  5051  000804  0E00               	movlw	0
  5052  000806  6E38               	movwf	_t_1m,c
  5053                           
  5054                           ;main.c: 1087: LATCbits.LATC7 = 1;
  5055  000808  8E8B               	bsf	3979,7,c	;volatile
  5056                           
  5057                           ;main.c: 1088: }
  5058                           ;main.c: 1089: }
  5059                           ;main.c: 1090: }
  5060                           ;main.c: 1091: }
  5061                           ;main.c: 1092: }
  5062                           ;main.c: 1095: break;
  5063  00080A  0012               	return	
  5064  00080C                     l3651:
  5065                           
  5066                           ;main.c: 1098: {
  5067                           ;main.c: 1099: ShiftOrder = 1;
  5068  00080C  0E01               	movlw	1
  5069  00080E  6E2F               	movwf	_ShiftOrder,c
  5070                           
  5071                           ;main.c: 1100: }
  5072                           ;main.c: 1102: }
  5073  000810  0012               	return	
  5074  000812                     l3653:
  5075  000812  502F               	movf	_ShiftOrder,w,c
  5076                           
  5077                           ; Switch size 1, requested type "space"
  5078                           ; Number of cases is 5, Range of values is 1 to 5
  5079                           ; switch strategies available:
  5080                           ; Name         Instructions Cycles
  5081                           ; simple_byte           16     9 (average)
  5082                           ;	Chosen strategy is simple_byte
  5083  000814  0A01               	xorlw	1	; case 1
  5084  000816  B4D8               	btfsc	status,2,c
  5085  000818  D71C               	goto	l3575
  5086  00081A  0A03               	xorlw	3	; case 2
  5087  00081C  B4D8               	btfsc	status,2,c
  5088  00081E  D740               	goto	l3585
  5089  000820  0A01               	xorlw	1	; case 3
  5090  000822  B4D8               	btfsc	status,2,c
  5091  000824  D74A               	goto	l3593
  5092  000826  0A07               	xorlw	7	; case 4
  5093  000828  B4D8               	btfsc	status,2,c
  5094  00082A  D752               	goto	l3597
  5095  00082C  0A01               	xorlw	1	; case 5
  5096  00082E  B4D8               	btfsc	status,2,c
  5097  000830  D75C               	goto	l3601
  5098  000832  D7EC               	goto	l3651
  5099  000834  0012               	return	
  5100  000836  0012               	return		;funcret
  5101  000838                     __end_of_Desplazar:
  5102                           	opt stack 0
  5103                           tblptru	equ	0xFF8
  5104                           tblptrh	equ	0xFF7
  5105                           tblptrl	equ	0xFF6
  5106                           tablat	equ	0xFF5
  5107                           prodh	equ	0xFF4
  5108                           prodl	equ	0xFF3
  5109                           intcon	equ	0xFF2
  5110                           postinc0	equ	0xFEE
  5111                           wreg	equ	0xFE8
  5112                           indf2	equ	0xFDF
  5113                           postinc2	equ	0xFDE
  5114                           fsr2h	equ	0xFDA
  5115                           fsr2l	equ	0xFD9
  5116                           status	equ	0xFD8
  5117                           
  5118 ;; *************** function ___awmod *****************
  5119 ;; Defined at:
  5120 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;  dividend        2    0[BANK0 ] int 
  5123 ;;  divisor         2    2[BANK0 ] int 
  5124 ;; Auto vars:     Size  Location     Type
  5125 ;;  sign            1    5[BANK0 ] unsigned char 
  5126 ;;  counter         1    4[BANK0 ] unsigned char 
  5127 ;; Return value:  Size  Location     Type
  5128 ;;                  2    0[BANK0 ] int 
  5129 ;; Registers used:
  5130 ;;		wreg, status,2, status,0
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5136 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5137 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5139 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5140 ;;Total ram usage:        6 bytes
  5141 ;; Hardware stack levels used:    1
  5142 ;; Hardware stack levels required when called:    2
  5143 ;; This function calls:
  5144 ;;		Nothing
  5145 ;; This function is called by:
  5146 ;;		_GenerarMJ
  5147 ;;		_Armar
  5148 ;;		_Desplazar
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152                           	psect	text18
  5153  000F94                     __ptext18:
  5154                           	opt stack 0
  5155  000F94                     ___awmod:
  5156                           	opt stack 26
  5157                           
  5158                           ;incstack = 0
  5159  000F94  0E00               	movlw	0
  5160  000F96  0100               	movlb	0	; () banked
  5161  000F98  6FCD               	movwf	___awmod@sign& (0+255),b
  5162                           
  5163                           ; BSR set to: 0
  5164  000F9A  0100               	movlb	0	; () banked
  5165  000F9C  AFC9               	btfss	(___awmod@dividend+1)& (0+255),7,b
  5166  000F9E  D009               	goto	l3191
  5167                           
  5168                           ; BSR set to: 0
  5169  000FA0  0100               	movlb	0	; () banked
  5170  000FA2  6DC8               	negf	___awmod@dividend& (0+255),b
  5171  000FA4  1FC9               	comf	(___awmod@dividend+1)& (0+255),f,b
  5172  000FA6  B0D8               	btfsc	status,0,c
  5173  000FA8  2BC9               	incf	(___awmod@dividend+1)& (0+255),f,b
  5174                           
  5175                           ; BSR set to: 0
  5176  000FAA  0E01               	movlw	1
  5177  000FAC  0100               	movlb	0	; () banked
  5178  000FAE  6FCD               	movwf	___awmod@sign& (0+255),b
  5179  000FB0  D000               	goto	l3191
  5180  000FB2                     l3191:
  5181                           
  5182                           ; BSR set to: 0
  5183  000FB2  0100               	movlb	0	; () banked
  5184  000FB4  AFCB               	btfss	(___awmod@divisor+1)& (0+255),7,b
  5185  000FB6  D006               	goto	l3195
  5186                           
  5187                           ; BSR set to: 0
  5188  000FB8  0100               	movlb	0	; () banked
  5189  000FBA  6DCA               	negf	___awmod@divisor& (0+255),b
  5190  000FBC  1FCB               	comf	(___awmod@divisor+1)& (0+255),f,b
  5191  000FBE  B0D8               	btfsc	status,0,c
  5192  000FC0  2BCB               	incf	(___awmod@divisor+1)& (0+255),f,b
  5193  000FC2  D000               	goto	l3195
  5194  000FC4                     l3195:
  5195                           
  5196                           ; BSR set to: 0
  5197  000FC4  0100               	movlb	0	; () banked
  5198  000FC6  51CA               	movf	___awmod@divisor& (0+255),w,b
  5199  000FC8  0100               	movlb	0	; () banked
  5200  000FCA  11CB               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  5201  000FCC  B4D8               	btfsc	status,2,c
  5202  000FCE  D02B               	goto	l3211
  5203                           
  5204                           ; BSR set to: 0
  5205  000FD0  0E01               	movlw	1
  5206  000FD2  0100               	movlb	0	; () banked
  5207  000FD4  6FCC               	movwf	___awmod@counter& (0+255),b
  5208  000FD6  D007               	goto	l3201
  5209  000FD8                     l3199:
  5210                           
  5211                           ; BSR set to: 0
  5212  000FD8  0100               	movlb	0	; () banked
  5213  000FDA  90D8               	bcf	status,0,c
  5214  000FDC  37CA               	rlcf	___awmod@divisor& (0+255),f,b
  5215  000FDE  37CB               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  5216  000FE0  0100               	movlb	0	; () banked
  5217  000FE2  2BCC               	incf	___awmod@counter& (0+255),f,b
  5218  000FE4  D000               	goto	l3201
  5219  000FE6                     l3201:
  5220                           
  5221                           ; BSR set to: 0
  5222  000FE6  0100               	movlb	0	; () banked
  5223  000FE8  BFCB               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  5224  000FEA  D002               	goto	l3203
  5225  000FEC  D7F5               	goto	l3199
  5226                           
  5227                           ; BSR set to: 0
  5228  000FEE  D000               	goto	l3203
  5229  000FF0                     l3203:
  5230                           
  5231                           ; BSR set to: 0
  5232  000FF0  0100               	movlb	0	; () banked
  5233  000FF2  51CA               	movf	___awmod@divisor& (0+255),w,b
  5234  000FF4  0100               	movlb	0	; () banked
  5235  000FF6  5DC8               	subwf	___awmod@dividend& (0+255),w,b
  5236  000FF8  0100               	movlb	0	; () banked
  5237  000FFA  51CB               	movf	(___awmod@divisor+1)& (0+255),w,b
  5238  000FFC  0100               	movlb	0	; () banked
  5239  000FFE  59C9               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  5240  001000  A0D8               	btfss	status,0,c
  5241  001002  D009               	goto	l3207
  5242                           
  5243                           ; BSR set to: 0
  5244  001004  0100               	movlb	0	; () banked
  5245  001006  51CA               	movf	___awmod@divisor& (0+255),w,b
  5246  001008  0100               	movlb	0	; () banked
  5247  00100A  5FC8               	subwf	___awmod@dividend& (0+255),f,b
  5248  00100C  0100               	movlb	0	; () banked
  5249  00100E  51CB               	movf	(___awmod@divisor+1)& (0+255),w,b
  5250  001010  0100               	movlb	0	; () banked
  5251  001012  5BC9               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  5252  001014  D000               	goto	l3207
  5253  001016                     l3207:
  5254                           
  5255                           ; BSR set to: 0
  5256  001016  0100               	movlb	0	; () banked
  5257  001018  90D8               	bcf	status,0,c
  5258  00101A  33CB               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  5259  00101C  33CA               	rrcf	___awmod@divisor& (0+255),f,b
  5260                           
  5261                           ; BSR set to: 0
  5262  00101E  0100               	movlb	0	; () banked
  5263  001020  2FCC               	decfsz	___awmod@counter& (0+255),f,b
  5264  001022  D7E6               	goto	l3203
  5265                           
  5266                           ; BSR set to: 0
  5267  001024  D000               	goto	l3211
  5268  001026                     l3211:
  5269                           
  5270                           ; BSR set to: 0
  5271  001026  0100               	movlb	0	; () banked
  5272  001028  51CD               	movf	___awmod@sign& (0+255),w,b
  5273  00102A  0100               	movlb	0	; () banked
  5274  00102C  B4D8               	btfsc	status,2,c
  5275  00102E  D006               	goto	l3215
  5276                           
  5277                           ; BSR set to: 0
  5278  001030  0100               	movlb	0	; () banked
  5279  001032  6DC8               	negf	___awmod@dividend& (0+255),b
  5280  001034  1FC9               	comf	(___awmod@dividend+1)& (0+255),f,b
  5281  001036  B0D8               	btfsc	status,0,c
  5282  001038  2BC9               	incf	(___awmod@dividend+1)& (0+255),f,b
  5283  00103A  D000               	goto	l3215
  5284  00103C                     l3215:
  5285                           
  5286                           ; BSR set to: 0
  5287  00103C  C0C8  F0C8         	movff	___awmod@dividend,?___awmod
  5288  001040  C0C9  F0C9         	movff	___awmod@dividend+1,?___awmod+1
  5289  001044  0012               	return	
  5290                           
  5291                           ; BSR set to: 0
  5292                           
  5293                           ; BSR set to: 0
  5294  001046  0012               	return		;funcret
  5295  001048                     __end_of___awmod:
  5296                           	opt stack 0
  5297                           tblptru	equ	0xFF8
  5298                           tblptrh	equ	0xFF7
  5299                           tblptrl	equ	0xFF6
  5300                           tablat	equ	0xFF5
  5301                           prodh	equ	0xFF4
  5302                           prodl	equ	0xFF3
  5303                           intcon	equ	0xFF2
  5304                           postinc0	equ	0xFEE
  5305                           wreg	equ	0xFE8
  5306                           indf2	equ	0xFDF
  5307                           postinc2	equ	0xFDE
  5308                           fsr2h	equ	0xFDA
  5309                           fsr2l	equ	0xFD9
  5310                           status	equ	0xFD8
  5311                           
  5312 ;; *************** function _Interrupciones *****************
  5313 ;; Defined at:
  5314 ;;		line 878 in file "main.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;		None
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;		None
  5319 ;; Return value:  Size  Location     Type
  5320 ;;		None               void
  5321 ;; Registers used:
  5322 ;;		wreg, status,2, status,0, cstack
  5323 ;; Tracked objects:
  5324 ;;		On entry : 0/0
  5325 ;;		On exit  : 0/0
  5326 ;;		Unchanged: 0/0
  5327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5330 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5331 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5332 ;;Total ram usage:       14 bytes
  5333 ;; Hardware stack levels used:    1
  5334 ;; Hardware stack levels required when called:    1
  5335 ;; This function calls:
  5336 ;;		i2_WriteTimer1
  5337 ;; This function is called by:
  5338 ;;		Interrupt level 2
  5339 ;; This function uses a non-reentrant model
  5340 ;;
  5341                           
  5342                           	psect	intcode
  5343  000008                     __pintcode:
  5344                           	opt stack 0
  5345  000008                     _Interrupciones:
  5346                           	opt stack 26
  5347                           
  5348                           ; BSR set to: 0
  5349                           ;incstack = 0
  5350  000008  CFFA F042          	movff	pclath,??_Interrupciones
  5351  00000C  CFFB F043          	movff	pclatu,??_Interrupciones+1
  5352  000010  CFE9 F044          	movff	fsr0l,??_Interrupciones+2
  5353  000014  CFEA F045          	movff	fsr0h,??_Interrupciones+3
  5354  000018  CFE1 F046          	movff	fsr1l,??_Interrupciones+4
  5355  00001C  CFE2 F047          	movff	fsr1h,??_Interrupciones+5
  5356  000020  CFD9 F048          	movff	fsr2l,??_Interrupciones+6
  5357  000024  CFDA F049          	movff	fsr2h,??_Interrupciones+7
  5358  000028  CFF3 F04A          	movff	prodl,??_Interrupciones+8
  5359  00002C  CFF4 F04B          	movff	prodh,??_Interrupciones+9
  5360  000030  CFF6 F04C          	movff	tblptrl,??_Interrupciones+10
  5361  000034  CFF7 F04D          	movff	tblptrh,??_Interrupciones+11
  5362  000038  CFF8 F04E          	movff	tblptru,??_Interrupciones+12
  5363  00003C  CFF5 F04F          	movff	tablat,??_Interrupciones+13
  5364                           
  5365                           ;main.c: 882: if(TMR1IE==1 && TMR1IF==1)
  5366  000040  B09D               	btfsc	3997,0,c	;volatile
  5367  000042  A09E               	btfss	3998,0,c	;volatile
  5368  000044  D04E               	goto	i2l4121
  5369                           
  5370                           ;main.c: 883: {
  5371                           ;main.c: 885: TMR1IF = 0;
  5372  000046  909E               	bcf	3998,0,c	;volatile
  5373                           
  5374                           ;main.c: 886: WriteTimer1(0xF05F);
  5375  000048  0EF0               	movlw	240
  5376  00004A  6E3F               	movwf	i2WriteTimer1@timer1+1,c
  5377  00004C  0E5F               	movlw	95
  5378  00004E  6E3E               	movwf	i2WriteTimer1@timer1,c
  5379  000050  EC7B  F009         	call	i2_WriteTimer1	;wreg free
  5380                           
  5381                           ;main.c: 889: F_1ms = 1;
  5382  000054  0E01               	movlw	1
  5383  000056  6E1F               	movwf	_F_1ms,c
  5384                           
  5385                           ;main.c: 890: t_1ms ++;
  5386  000058  2A39               	incf	_t_1ms,f,c
  5387                           
  5388                           ;main.c: 891: if(t_1ms == 10)
  5389  00005A  0E0A               	movlw	10
  5390  00005C  1839               	xorwf	_t_1ms,w,c
  5391  00005E  A4D8               	btfss	status,2,c
  5392  000060  D030               	goto	i2l4115
  5393                           
  5394                           ;main.c: 892: {
  5395                           ;main.c: 893: t_1ms = 0;
  5396  000062  0E00               	movlw	0
  5397  000064  6E39               	movwf	_t_1ms,c
  5398                           
  5399                           ;main.c: 894: F_10ms = 1;
  5400  000066  0E01               	movlw	1
  5401  000068  6E1C               	movwf	_F_10ms,c
  5402                           
  5403                           ;main.c: 895: t_10ms ++;
  5404  00006A  2A36               	incf	_t_10ms,f,c
  5405                           
  5406                           ;main.c: 896: if(t_10ms == 10)
  5407  00006C  0E0A               	movlw	10
  5408  00006E  1836               	xorwf	_t_10ms,w,c
  5409  000070  A4D8               	btfss	status,2,c
  5410  000072  D027               	goto	i2l4115
  5411                           
  5412                           ;main.c: 897: {
  5413                           ;main.c: 898: t_10ms = 0;
  5414  000074  0E00               	movlw	0
  5415  000076  6E36               	movwf	_t_10ms,c
  5416                           
  5417                           ;main.c: 899: F_100ms = 1;
  5418  000078  0E01               	movlw	1
  5419  00007A  6E1B               	movwf	_F_100ms,c
  5420                           
  5421                           ;main.c: 900: t_100ms ++;
  5422  00007C  2A35               	incf	_t_100ms,f,c
  5423                           
  5424                           ;main.c: 901: if(t_100ms == 10)
  5425  00007E  0E0A               	movlw	10
  5426  000080  1835               	xorwf	_t_100ms,w,c
  5427  000082  A4D8               	btfss	status,2,c
  5428  000084  D01E               	goto	i2l4115
  5429                           
  5430                           ;main.c: 902: {
  5431                           ;main.c: 903: t_100ms = 0;
  5432  000086  0E00               	movlw	0
  5433  000088  6E35               	movwf	_t_100ms,c
  5434                           
  5435                           ;main.c: 904: F_1s = 1;
  5436  00008A  0E01               	movlw	1
  5437  00008C  6E20               	movwf	_F_1s,c
  5438                           
  5439                           ;main.c: 905: t_1s ++;
  5440  00008E  2A3A               	incf	_t_1s,f,c
  5441                           
  5442                           ;main.c: 906: if(t_1s == 60)
  5443  000090  0E3C               	movlw	60
  5444  000092  183A               	xorwf	_t_1s,w,c
  5445  000094  A4D8               	btfss	status,2,c
  5446  000096  D015               	goto	i2l4115
  5447                           
  5448                           ;main.c: 907: {
  5449                           ;main.c: 908: t_1s = 0;
  5450  000098  0E00               	movlw	0
  5451  00009A  6E3A               	movwf	_t_1s,c
  5452                           
  5453                           ;main.c: 909: F_1m = 1;
  5454  00009C  0E01               	movlw	1
  5455  00009E  6E1E               	movwf	_F_1m,c
  5456                           
  5457                           ;main.c: 910: t_1m ++;
  5458  0000A0  2A38               	incf	_t_1m,f,c
  5459                           
  5460                           ;main.c: 911: if(t_1m == 60)
  5461  0000A2  0E3C               	movlw	60
  5462  0000A4  1838               	xorwf	_t_1m,w,c
  5463  0000A6  A4D8               	btfss	status,2,c
  5464  0000A8  D00C               	goto	i2l4115
  5465                           
  5466                           ;main.c: 912: {
  5467                           ;main.c: 913: t_1m = 0;
  5468  0000AA  0E00               	movlw	0
  5469  0000AC  6E38               	movwf	_t_1m,c
  5470                           
  5471                           ;main.c: 914: F_1h = 1;
  5472  0000AE  0E01               	movlw	1
  5473  0000B0  6E1D               	movwf	_F_1h,c
  5474                           
  5475                           ;main.c: 915: t_1h ++;
  5476  0000B2  2A37               	incf	_t_1h,f,c
  5477                           
  5478                           ;main.c: 916: if(t_1h == 24)
  5479  0000B4  0E18               	movlw	24
  5480  0000B6  1837               	xorwf	_t_1h,w,c
  5481  0000B8  A4D8               	btfss	status,2,c
  5482  0000BA  D003               	goto	i2l4115
  5483                           
  5484                           ;main.c: 917: {
  5485                           ;main.c: 918: t_1h = 0;
  5486  0000BC  0E00               	movlw	0
  5487  0000BE  6E37               	movwf	_t_1h,c
  5488  0000C0  D000               	goto	i2l4115
  5489  0000C2                     i2l4115:
  5490                           
  5491                           ;main.c: 919: }
  5492                           ;main.c: 920: }
  5493                           ;main.c: 921: }
  5494                           ;main.c: 922: }
  5495                           ;main.c: 923: }
  5496                           ;main.c: 924: }
  5497                           ;main.c: 927: msJ++;
  5498  0000C2  4A03               	infsnz	_msJ,f,c
  5499  0000C4  2A04               	incf	_msJ+1,f,c
  5500                           
  5501                           ;main.c: 928: if(msJ == msJL)
  5502  0000C6  5005               	movf	_msJL,w,c
  5503  0000C8  1803               	xorwf	_msJ,w,c
  5504  0000CA  E10B               	bnz	i2l4121
  5505  0000CC  5006               	movf	_msJL+1,w,c
  5506  0000CE  1804               	xorwf	_msJ+1,w,c
  5507  0000D0  A4D8               	btfss	status,2,c
  5508  0000D2  D007               	goto	i2l4121
  5509                           
  5510                           ;main.c: 929: {
  5511                           ;main.c: 930: msJ = 0;
  5512  0000D4  0E00               	movlw	0
  5513  0000D6  6E04               	movwf	_msJ+1,c
  5514  0000D8  0E00               	movlw	0
  5515  0000DA  6E03               	movwf	_msJ,c
  5516                           
  5517                           ;main.c: 931: FTimeToShift = 1;
  5518  0000DC  0E01               	movlw	1
  5519  0000DE  6E1A               	movwf	_FTimeToShift,c
  5520  0000E0  D000               	goto	i2l4121
  5521  0000E2                     i2l4121:
  5522                           
  5523                           ;main.c: 933: }
  5524                           ;main.c: 936: }
  5525                           ;main.c: 941: if ((RCIF == 1)&&(RCIE == 1))
  5526  0000E2  BA9E               	btfsc	3998,5,c	;volatile
  5527  0000E4  AA9D               	btfss	3997,5,c	;volatile
  5528  0000E6  D004               	goto	i2l572
  5529                           
  5530                           ;main.c: 942: {
  5531                           ;main.c: 943: Disp_Var_1 = RCREG;
  5532  0000E8  CFAE F001          	movff	4014,_Disp_Var_1	;volatile
  5533  0000EC  6A02               	clrf	_Disp_Var_1+1,c
  5534  0000EE  D000               	goto	i2l572
  5535  0000F0                     i2l572:
  5536  0000F0  C04F  FFF5         	movff	??_Interrupciones+13,tablat
  5537  0000F4  C04E  FFF8         	movff	??_Interrupciones+12,tblptru
  5538  0000F8  C04D  FFF7         	movff	??_Interrupciones+11,tblptrh
  5539  0000FC  C04C  FFF6         	movff	??_Interrupciones+10,tblptrl
  5540  000100  C04B  FFF4         	movff	??_Interrupciones+9,prodh
  5541  000104  C04A  FFF3         	movff	??_Interrupciones+8,prodl
  5542  000108  C049  FFDA         	movff	??_Interrupciones+7,fsr2h
  5543  00010C  C048  FFD9         	movff	??_Interrupciones+6,fsr2l
  5544  000110  C047  FFE2         	movff	??_Interrupciones+5,fsr1h
  5545  000114  C046  FFE1         	movff	??_Interrupciones+4,fsr1l
  5546  000118  C045  FFEA         	movff	??_Interrupciones+3,fsr0h
  5547  00011C  C044  FFE9         	movff	??_Interrupciones+2,fsr0l
  5548  000120  C043  FFFB         	movff	??_Interrupciones+1,pclatu
  5549  000124  C042  FFFA         	movff	??_Interrupciones,pclath
  5550  000128  0011               	retfie		f
  5551  00012A                     __end_of_Interrupciones:
  5552                           	opt stack 0
  5553                           pclatu	equ	0xFFB
  5554                           pclath	equ	0xFFA
  5555                           tblptru	equ	0xFF8
  5556                           tblptrh	equ	0xFF7
  5557                           tblptrl	equ	0xFF6
  5558                           tablat	equ	0xFF5
  5559                           prodh	equ	0xFF4
  5560                           prodl	equ	0xFF3
  5561                           intcon	equ	0xFF2
  5562                           postinc0	equ	0xFEE
  5563                           fsr0h	equ	0xFEA
  5564                           fsr0l	equ	0xFE9
  5565                           wreg	equ	0xFE8
  5566                           fsr1h	equ	0xFE2
  5567                           fsr1l	equ	0xFE1
  5568                           indf2	equ	0xFDF
  5569                           postinc2	equ	0xFDE
  5570                           fsr2h	equ	0xFDA
  5571                           fsr2l	equ	0xFD9
  5572                           status	equ	0xFD8
  5573                           
  5574 ;; *************** function i2_WriteTimer1 *****************
  5575 ;; Defined at:
  5576 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t1write.c"
  5577 ;; Parameters:    Size  Location     Type
  5578 ;;  timer1          2    0[COMRAM] unsigned int 
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;  WriteTimer1     2    2[COMRAM] struct Timers
  5581 ;; Return value:  Size  Location     Type
  5582 ;;		None               void
  5583 ;; Registers used:
  5584 ;;		None
  5585 ;; Tracked objects:
  5586 ;;		On entry : 0/0
  5587 ;;		On exit  : 0/0
  5588 ;;		Unchanged: 0/0
  5589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5590 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5591 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5593 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5594 ;;Total ram usage:        4 bytes
  5595 ;; Hardware stack levels used:    1
  5596 ;; This function calls:
  5597 ;;		Nothing
  5598 ;; This function is called by:
  5599 ;;		_Interrupciones
  5600 ;; This function uses a non-reentrant model
  5601 ;;
  5602                           
  5603                           	psect	text20
  5604  0012F6                     __ptext20:
  5605                           	opt stack 0
  5606  0012F6                     i2_WriteTimer1:
  5607                           	opt stack 26
  5608                           
  5609                           ;incstack = 0
  5610  0012F6  C03E  F040         	movff	i2WriteTimer1@timer1,i2WriteTimer1@timer
  5611  0012FA  C03F  F041         	movff	i2WriteTimer1@timer1+1,i2WriteTimer1@timer+1
  5612  0012FE  C041  FFCF         	movff	i2WriteTimer1@timer+1,4047	;volatile
  5613  001302  C040  FFCE         	movff	i2WriteTimer1@timer,4046	;volatile
  5614  001306  0012               	return		;funcret
  5615  001308                     __end_ofi2_WriteTimer1:
  5616                           	opt stack 0
  5617  0000                     pclatu	equ	0xFFB
  5618                           pclath	equ	0xFFA
  5619                           tblptru	equ	0xFF8
  5620                           tblptrh	equ	0xFF7
  5621                           tblptrl	equ	0xFF6
  5622                           tablat	equ	0xFF5
  5623                           prodh	equ	0xFF4
  5624                           prodl	equ	0xFF3
  5625                           intcon	equ	0xFF2
  5626                           postinc0	equ	0xFEE
  5627                           fsr0h	equ	0xFEA
  5628                           fsr0l	equ	0xFE9
  5629                           wreg	equ	0xFE8
  5630                           fsr1h	equ	0xFE2
  5631                           fsr1l	equ	0xFE1
  5632                           indf2	equ	0xFDF
  5633                           postinc2	equ	0xFDE
  5634                           fsr2h	equ	0xFDA
  5635                           fsr2l	equ	0xFD9
  5636                           status	equ	0xFD8
  5637                           pclatu	equ	0xFFB
  5638                           pclath	equ	0xFFA
  5639                           tblptru	equ	0xFF8
  5640                           tblptrh	equ	0xFF7
  5641                           tblptrl	equ	0xFF6
  5642                           tablat	equ	0xFF5
  5643                           prodh	equ	0xFF4
  5644                           prodl	equ	0xFF3
  5645                           intcon	equ	0xFF2
  5646                           postinc0	equ	0xFEE
  5647                           fsr0h	equ	0xFEA
  5648                           fsr0l	equ	0xFE9
  5649                           wreg	equ	0xFE8
  5650                           fsr1h	equ	0xFE2
  5651                           fsr1l	equ	0xFE1
  5652                           indf2	equ	0xFDF
  5653                           postinc2	equ	0xFDE
  5654                           fsr2h	equ	0xFDA
  5655                           fsr2l	equ	0xFD9
  5656                           status	equ	0xFD8
  5657                           
  5658                           	psect	rparam
  5659  0000                     pclatu	equ	0xFFB
  5660                           pclath	equ	0xFFA
  5661                           tblptru	equ	0xFF8
  5662                           tblptrh	equ	0xFF7
  5663                           tblptrl	equ	0xFF6
  5664                           tablat	equ	0xFF5
  5665                           prodh	equ	0xFF4
  5666                           prodl	equ	0xFF3
  5667                           intcon	equ	0xFF2
  5668                           postinc0	equ	0xFEE
  5669                           fsr0h	equ	0xFEA
  5670                           fsr0l	equ	0xFE9
  5671                           wreg	equ	0xFE8
  5672                           fsr1h	equ	0xFE2
  5673                           fsr1l	equ	0xFE1
  5674                           indf2	equ	0xFDF
  5675                           postinc2	equ	0xFDE
  5676                           fsr2h	equ	0xFDA
  5677                           fsr2l	equ	0xFD9
  5678                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         165
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     18      80
    BANK0           160     14     118
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Interrupciones in COMRAM

    _Interrupciones->i2_WriteTimer1

Critical Paths under _main in BANK0

    _VerificarMJ->_Retardo
    _MostrarJ->_Tabla
    _Mostrar->_Armar
    _Armar->___awdiv
    _GenerarMJ->___awmod
    _Desplazar->___awmod

Critical Paths under _Interrupciones in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupciones in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupciones in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupciones in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupciones in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupciones in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupciones in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupciones in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupciones in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupciones in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupciones in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupciones in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupciones in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupciones in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupciones in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupciones in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    8256
                                             13 BANK0      1     1      0
                          _Desplazar
                          _GenerarMJ
                            _Mostrar
                           _MostrarJ
                         _OpenTimer0
                         _OpenTimer1
                            _Teclado
                           _TecladoJ
                        _VerificarMJ
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (1) _WriteTimer1                                          4     2      2     221
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _VerificarMJ                                          1     1      0     958
                                              3 BANK0      1     1      0
                            _Retardo
                            _Teclado
 ---------------------------------------------------------------------------------
 (2) _Teclado                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TecladoJ                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _MostrarJ                                             0     0      0      22
                              _Tabla
 ---------------------------------------------------------------------------------
 (1) _Mostrar                                              0     0      0    3867
                              _Armar
                              _Tabla
                             _Tabla0
 ---------------------------------------------------------------------------------
 (2) _Tabla0                                               2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Armar                                                5     5      0    3845
                                              8 BANK0      5     5      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     694
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     857
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     753
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _GenerarMJ                                            1     1      0    2029
                                              6 BANK0      1     1      0
                            _Retardo
                              _Tabla
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _Tabla                                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Retardo                                              3     1      2     958
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _Desplazar                                            1     1      0    1049
                                              6 BANK0      1     1      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1049
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Interrupciones                                      14    14      0     131
                                              4 COMRAM    14    14      0
                      i2_WriteTimer1
 ---------------------------------------------------------------------------------
 (5) i2_WriteTimer1                                        4     2      2     131
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Desplazar
     ___awmod
   _GenerarMJ
     _Retardo
     _Tabla
     ___awmod
   _Mostrar
     _Armar
       ___awdiv
       ___awmod
       ___lwdiv
       ___lwmod
     _Tabla
     _Tabla0
   _MostrarJ
     _Tabla
   _OpenTimer0
   _OpenTimer1
   _Teclado
   _TecladoJ
   _VerificarMJ
     _Retardo
     _Teclado
   _WriteTimer1

 _Interrupciones (ROOT)
   i2_WriteTimer1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      E      76       5       73.8%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     12      50       1       84.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C6      32        0.0%
DATA                 0      0      C6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon Jun 04 18:01:13 2018

                      _a 0032                        _b 00C4                        _i 0033  
           ___awdiv@sign 00CD                      l450 0B76                      l451 0BC6  
                    l371 060C                      l363 05C0                      l604 0772  
                    l620 12DE                      l621 12E0                      l480 0210  
                    l640 1290                      l490 0352                      l482 0222  
                    l484 0234                      l396 108E                      l557 12B0  
                    l637 1276                      _FBA 0015                      l486 0246  
                    l479 024C                      l639 128E                      _FCC 0016  
                    l596 0740                      l589 0728                      _GIE 007F97  
                    _FRT 0017                      _FTT 0018     __size_of_WriteTimer1 0012  
                    _msJ 0003             ___awmod@sign 00CD                      prod 000FF3  
                    wreg 000FE8             __CFG_LVP$OFF 000000                     l1176 1162  
                   l3201 0FE6                     l1186 11CE                     l3203 0FF0  
                   l3211 1026                     l4011 05A4                     l4003 0590  
                   l3215 103C                     l3207 1016                     l3311 08D6  
                   l3303 08C2                     l4023 05D6                     l4015 05BA  
                   l3161 0F26                     l3153 0EFA                     l3225 1108  
                   l3321 08F6                     l4025 05E4                     l3403 1296  
                   l3171 0F62                     l3163 0F30                     l3147 0EE2  
                   l3227 1116                     l3411 11E0                     l3307 08D0  
                   l4027 05EE                     l4019 05CA                     l4043 0626  
                   l3237 1152                     l3229 1120                     l3253 11BE  
                   l3245 1180                     l3413 11E6                     l3421 11F8  
                   l3333 0918                     l3325 0904                     l3317 08E8  
                   l4037 0614                     l3191 0FB2                     l3159 0F18  
                   l3175 0F72                     l3247 118E                     l3415 11EC  
                   l3351 0954                     l3343 0938                     l3601 06EA  
                   l3249 1198                     l3441 0196                     l3417 11F2  
                   l3409 11DA                     l3329 0912                     l3281 0880  
                   l3273 0864                     l3195 0FC4                     l3611 070E  
                   l3371 0E02                     l3363 0DEA                     l3179 0F88  
                   l3451 0216                     l3435 014C                     l3443 01D0  
                   l3355 095A                     l3347 0946                     l3339 092A  
                   l3267 0852                     l3381 0E20                     l3373 0E08  
                   l3365 0DF0                     l3445 01F6                     l3437 0186  
                   l3429 0130                     l3541 0B18                     l3285 088E  
                   l3277 0872                     l3199 0FD8                     l3607 06FE  
                   l3391 0E3E                     l3383 0E26                     l3375 0E0E  
                   l3367 0DF6                     l3463 025E                     l3455 0228  
                   l3551 0B40                     l3527 0AEC                     l3519 0ADC  
                   l3295 08A6                     l3359 0960                     l3633 0766  
                   l3625 074E                     l3393 0E44                     l3385 0E2C  
                   l3377 0E14                     l3369 0DFC                     l3537 0B0A  
                   l3713 0DB8                     l3801 0A76                     l3289 0894  
                   l3651 080C                     l3395 0E4A                     l3387 0E32  
                   l3379 0E1A                     l3459 023A                     l3555 0B54  
                   l3547 0B32                     l3539 0B12                     l3731 09A2  
                   l3299 08B4                     l3629 075A                     l3581 0682  
                   l3653 0812                     l3397 0E50                     l3389 0E38  
                   l3821 0BFC                     l3477 03E8                     l3565 0BCA  
                   l3557 0B5C                     l3549 0B3A                     l3717 0DBE  
                   l3813 0A98                     l3805 0A84                     l3725 0990  
                   l3575 0652                     l3399 0E56                     l3559 0B62  
                   l3487 127A                     l3743 09CC                     l3735 09B0  
                   l3593 06BA                     l3585 06A0                     l3577 0658  
                   l3841 0C64                     l3569 0BD0                     l3681 0D34  
                   l3673 0D22                     l3665 0D12                     l3809 0A92  
                   l3761 0A00                     l3753 09E4                     l3817 0A9E  
                   l3579 0674                     l3843 0C80                     l3747 09D2  
                   l3739 09BE                     l3597 06D0                     l3845 0C8E  
                   l3693 0D5C                     l3765 0A0E                     l3757 09F2  
                   l3839 0C48                     l3687 0D48                     l3791 0A56  
                   l3783 0A42                     l3775 0A26                     l3769 0A14  
                   l3787 0A50                     l3779 0A34                     l3867 1050  
                   l3797 0A68                     l3869 1056                     l3993 054C  
                   l3899 10BA                     u3200 071A                     u3105 0B9C  
                   u3106 0B9E                     u3115 0BA6                     u3116 0BA8  
                   u3125 0BB0                     u3126 0BB2                     u4007 079C  
                   u3135 0BBA                     u3136 0BBC                     u4017 07AC  
                   u3145 0BC4                     u3305 0D76                     u3146 0BC6  
                   u3306 0D78                     u4027 07BC                     u3075 0B7E  
                   u3315 0D80                     u3076 0B80                     u3316 0D82  
                   u4037 07CC                     u3085 0B88                     u3325 0D8A  
                   u3086 0B8A                     u3326 0D8C                     u4047 07DC  
                   u3095 0B92                     u3335 0D94                     u3096 0B94  
                   u3336 0D96                     u4057 07EC                     u3345 0D9E  
                   u3346 0DA0                     u3355 0DA8                     u3356 0DAA  
                   u3365 0DB2                     u3366 0DB4                     u3295 0D6C  
                   u3296 0D6E                     _PEIE 007F96                     u2925 0370  
                   u2935 039C                     u2945 03C8                     u3907 04DA  
                   _RCIE 007CED                     _RCIF 007CF5                     u3917 04EA  
                   _F_1h 001D                     u3927 04FA                     u3847 046E  
                   u3937 050E                     u3857 0482                     u3947 051E  
                   u3867 0492                     _F_1m 001E                     u3957 052E  
                   u3877 04A2                     u3967 053E                     u3887 04B6  
                   u3977 129E                     u3897 04C6                     _F_1s 0020  
                   u3987 077C                     u3997 078C                     _TRMT 007D61  
                   _t_1h 0037                     _t_1m 0038                     _t_1s 003A  
                   _msJL 0005                     _cont 00C6                     _main 03FA  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr0l 000FE9  
                   fsr2h 000FDA                     fsr1l 000FE1                     indf2 000FDF  
                   fsr2l 000FD9   __size_ofi2_WriteTimer1 0012                     pclat 000FFA  
                   prodh 000FF4                     prodl 000FF3                     start 012A  
           ___param_bank 000010          __end_of_Teclado 0980          __end_of_Retardo 12BE  
        __end_of_Mostrar 0BF6                    ?_main 003E          __end_of___awdiv 0F94  
        __end_of___awmod 1048               _Disp_ModoL 000C                    _ANSEL 000F7E  
                  _T0CON 000FD5               _Disp_Var_1 0001          ___awdiv@divisor 00CA  
                  _T1CON 000FCD          __end_of___lwdiv 116C          __end_of___lwmod 11D8  
                  i2l572 00F0          ___awdiv@counter 00CC                    _RCREG 000FAE  
                  _F_1ms 001F                    _TMR0H 000FD7                    _TMR1H 000FCF  
                  _TMR0L 000FD6                    _TMR1L 000FCE                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
                  _TXREG 000FAD                    _Armar 012E                    _Tabla 0DE4  
                  _Tecla 0030                    _t_ADC 003B                    _t_1ms 0039  
                  _o_tec 0050                    _o_mux 0034                    _t_tec 003D  
                  _t_mux 003C                    tablat 000FF5                    status 000FD8  
         __CFG_MCLRE$OFF 000000          __initialization 122C             __end_of_main 0646  
                 ??_main 00D5         __end_of_TecladoJ 0ABE            i2_WriteTimer1 12F6  
          __activetblptr 000002       __size_of_Desplazar 01F2         __end_of_MostrarJ 0DE4  
            Tabla@numero 00C8       __size_of_GenerarMJ 0102                   ?_Armar 003E  
                 ?_Tabla 003E         ___awdiv@dividend 00C8              _Disp_Var_4C 0011  
            _Disp_Var_4D 0012              _Disp_Var_2H 000F              _Disp_Var_2L 0010  
            _Disp_Var_4M 0013              _Disp_Var_4U 0014                   _F_10ms 001C  
                 i2l4121 00E2               _OpenTimer0 12BE               _OpenTimer1 1260  
                 i2l4115 00C2           __CFG_WDTEN$OFF 000000                   _OSCCON 000FD3  
                 _TMR0IE 007F95                   _TMR1IE 007CE8                   _TMR1IF 007CF0  
             _ShiftOrder 002F                   _Disp_C 0007                   _Disp_D 0008  
                 _Disp_M 000A                   _Disp_U 000D                   _Tabla0 11D8  
              ??_Teclado 00C8                ??_Retardo 00CA                ??_Mostrar 00D5  
                 _t_10ms 0036                ??___awdiv 00CC                ??___awmod 00CC  
       OpenTimer0@config 00C8                ??___lwdiv 00CC                ??___lwmod 00CC  
       OpenTimer1@config 00C8                   clear_0 1232                   clear_1 123E  
       ___awdiv@quotient 00CE          ___awmod@divisor 00CA           ?i2_WriteTimer1 003E  
        ___awmod@counter 00CC             __pdataCOMRAM 0050                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8            ??_VerificarMJ 00CB  
             __accesstop 0060  __end_of__initialization 1256          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001        __end_of_Desplazar 0838        __end_of_GenerarMJ 0CF8  
          __end_of_Armar 03FA            __end_of_Tabla 0EC4           __pcstackCOMRAM 003E  
                ??_Armar 00D0                  ??_Tabla 00C8               __pbssBANK0 0060  
            ?_OpenTimer0 003E              ?_OpenTimer1 003E                ?_TecladoJ 003E  
    __end_of_VerificarMJ 10EA                  ?_Tabla0 003E                ?_MostrarJ 003E  
        ??i2_WriteTimer1 0040         WriteTimer1@timer 00CA            ??_WriteTimer1 00CA  
                _F_100ms 001B                  _Led_RB0 0022                  _Led_RB1 0023  
                _Led_RB2 0024                  _Led_RB3 0025                  _Led_RB4 0026  
                _Led_RB5 0027                  _Led_RB6 0028                  _Led_RB7 0029  
    i2WriteTimer1@timer1 003E               ??_TecladoJ 00C8                  __Hparam 0000  
                _Teclado 0838                  _OrdenRx 002D                  __Lparam 0000  
        __size_of_Tabla0 0054                  _Retardo 1294                  _Mostrar 0ABE  
             ??_MostrarJ 00C9                  _t_100ms 0035                  ___awdiv 0EC4  
                ___awmod 0F94                  ___lwdiv 10EA                  ___lwmod 116C  
                __pcinit 122C                  __ramtop 1000      __size_of_OpenTimer0 0026  
    __size_of_OpenTimer1 0034                  __ptext0 03FA                  __ptext1 12E4  
                __ptext2 1048                  __ptext3 0838                  __ptext4 0980  
                __ptext5 1260                  __ptext6 12BE                  __ptext7 0CF8  
                __ptext8 0ABE                  __ptext9 11D8                _T0CONbits 000FD5  
              _T1CONbits 000FCD  __size_of_Interrupciones 0122         ___awmod@dividend 00C8  
            _NumeroJuego 002B      __end_of_WriteTimer1 12F6     end_of_initialization 1256  
            _VerificarMJ 1048            __Lmediumconst 0000                  postinc0 000FEE  
                postinc2 000FDE                _PORTAbits 000F80                _PORTDbits 000F83  
              _TRISBbits 000F93           __end_of_Tabla0 122C                _Desplazar 0646  
              _Disp_Leds 0009                _GenerarMJ 0BF6                _Disp_Modo 000B  
          __pidataCOMRAM 1308              _WriteTimer1 12E4      start_initialization 122C  
              _ModoJuego 002A             ??_OpenTimer0 00C8             ??_OpenTimer1 00C8  
              Retardo@ms 00C8            _TimeToTeclado 0031                 ??_Tabla0 00C8  
      __size_of_TecladoJ 013E               ?_Desplazar 003E               ?_GenerarMJ 003E  
      __size_of_MostrarJ 00EC       __end_of_OpenTimer0 12E4       __end_of_OpenTimer1 1294  
         _Interrupciones 0008              __pbssCOMRAM 0001            __pcstackBANK0 00C8  
               ?_Teclado 003E         ___lwdiv@dividend 00C8                 ?_Retardo 00C8  
               ?_Mostrar 003E                __pintcode 0008                 ?___awdiv 00C8  
               ?___awmod 00C8                 ?___lwdiv 00C8                 ?___lwmod 00C8  
 __end_of_Interrupciones 012A    __end_ofi2_WriteTimer1 1308        WriteTimer1@timer1 00C8  
     i2WriteTimer1@timer 0040           __size_of_Armar 02CC           __size_of_Tabla 00E0  
       ___lwdiv@quotient 00CD             ?_VerificarMJ 003E            _NumeroJuegoBk 002C  
               _LATAbits 000F89                 _LATBbits 000F8A                 _LATCbits 000F8B  
               _LATDbits 000F8C                 _PIE1bits 000F9D                 _PIR1bits 000F9E  
               Armar@Aux 00D3              ??_Desplazar 00CE              ??_GenerarMJ 00CE  
        ?_Interrupciones 003E                 _Disp_Var 000E                 _MemoriaJ 0060  
               _TecladoJ 0980                 __Hrparam 0000                 __Lrparam 0000  
       __size_of_Teclado 0148                 _MostrarJ 0CF8         __size_of_Retardo 002A  
       __size_of_Mostrar 0138         __size_of___awdiv 00D0         __size_of___awmod 00B4  
       __size_of___lwdiv 0082         __size_of___lwmod 006C             ?_WriteTimer1 00C8  
  _F_Conversion_Continua 0021          ___lwdiv@divisor 00CA          ___lwdiv@counter 00CC  
               __ptext10 012E                 __ptext11 116C                 __ptext20 12F6  
               __ptext12 10EA                 __ptext13 0EC4                 __ptext14 0BF6  
               __ptext15 0DE4                 __ptext16 1294                 __ptext17 0646  
               __ptext18 0F94            __size_of_main 024C               _INTCONbits 000FF2  
               intlevel2 0000         ___lwmod@dividend 00C8     __size_of_VerificarMJ 00A2  
        ___lwmod@divisor 00CA             _PuntajeJuego 002E          ___lwmod@counter 00CC  
           _FTimeToCheck 0019             _FTimeToShift 001A        __CFG_FOSC$INTIO67 000000  
       ??_Interrupciones 0042  
